Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    MOD
    NULL
    EXPONENTIAL

Grammar

Rule 0     S' -> programa
Rule 1     check_variable -> empty
Rule 2     push_operation -> empty
Rule 3     check_function -> empty
Rule 4     logica_helper -> empty
Rule 5     saveFuncParam -> empty
Rule 6     expresion_helper -> empty
Rule 7     saveFuncName -> empty
Rule 8     programa -> PROGRAMA ID add_global_scope vars_opt rutinas lienzo printQuadList
Rule 9     exp_helper -> empty
Rule 10    cleanFunc -> empty
Rule 11    vars_opt -> vars
Rule 12    vars_opt -> empty
Rule 13    empty -> <empty>
Rule 14    termino_helper -> empty
Rule 15    saveFuncTypeVoid -> empty
Rule 16    vars -> VAR tipo SEMICOLON vars_loop
Rule 17    factor_helper -> empty
Rule 18    FuncTypeNext -> empty
Rule 19    vars_loop -> vars
Rule 20    vars_loop -> empty
Rule 21    saveType -> empty
Rule 22    rutinas -> RUTINA FuncTypeNext rutina_opt COLON ID saveFuncName LPARENTHESIS parametros RPARENTHESIS saveFuncParam bloque_rutina cleanFunc rutinas_loop
Rule 23    rutinas -> empty
Rule 24    push_fake_bottom -> empty
Rule 25    pop_fake_bottom -> empty
Rule 26    rutina_opt -> primitivo
Rule 27    rutina_opt -> figura
Rule 28    rutina_opt -> VOID saveFuncTypeVoid
Rule 29    printQuadList -> empty
Rule 30    paramID -> empty
Rule 31    rutinas_loop -> rutinas
Rule 32    rutinas_loop -> empty
Rule 33    paramTypeNext -> empty
Rule 34    tipo -> tipo_opt
Rule 35    printFuncTable -> empty
Rule 36    tipo_opt -> tipo_opt_prim
Rule 37    tipo_opt -> tipo_opt_fig
Rule 38    add_global_scope -> empty
Rule 39    tipo_opt_prim -> add_var_name primitivo tipo_opt_prim_loop
Rule 40    tipo_opt_prim_loop -> ID add_var tipo_opt_prim_2 tipo_opt_prim_loop_2
Rule 41    add_main_scope -> empty
Rule 42    tipo_opt_prim_loop_2 -> COMA tipo_opt_prim_loop
Rule 43    tipo_opt_prim_loop_2 -> empty
Rule 44    tipo_opt_prim_2 -> ini_prim
Rule 45    tipo_opt_prim_2 -> LBRACKET logica RBRACKET tipo_opt_prim_3
Rule 46    tipo_opt_prim_2 -> empty
Rule 47    add_var_name -> empty
Rule 48    tipo_opt_prim_3 -> ini_prim_v
Rule 49    tipo_opt_prim_3 -> empty
Rule 50    add_var -> empty
Rule 51    tipo_opt_fig -> add_var_name figura ID add_var tipo_opt_fig_2 tipo_opt_fig_loop
Rule 52    tipo_opt_fig_loop -> COMA tipo_opt_fig
Rule 53    tipo_opt_fig_loop -> empty
Rule 54    tipo_opt_fig_2 -> ini_fgra
Rule 55    tipo_opt_fig_2 -> LBRACKET logica RBRACKET tipo_opt_fig_3
Rule 56    tipo_opt_fig_2 -> empty
Rule 57    tipo_opt_fig_3 -> ini_fgra_v
Rule 58    tipo_opt_fig_3 -> empty
Rule 59    ini_prim -> ASSIGN push_operation logica
Rule 60    ini_prim_v -> ASSIGN LBRACE logica ini_prim_v_loop RBRACE
Rule 61    ini_prim_v_loop -> COMA logica ini_prim_v_loop
Rule 62    ini_prim_v_loop -> empty
Rule 63    ini_fgra -> ASSIGN fgra_nva
Rule 64    ini_fgra_v -> ASSIGN LBRACE fgra_nva ini_fgras_v_loop RBRACE
Rule 65    ini_fgra_v -> empty
Rule 66    ini_fgras_v_loop -> COMA fgra_nva ini_fgras_v_loop
Rule 67    ini_fgras_v_loop -> empty
Rule 68    fgra_nva -> NUEVO fgra_atr
Rule 69    fgra_nva -> empty
Rule 70    fgra_atr -> PINCEL LPARENTHESIS fgra_atr_end
Rule 71    fgra_atr -> CUAD LPARENTHESIS exp COMA fgra_atr_end
Rule 72    fgra_atr -> CIRC LPARENTHESIS exp COMA fgra_atr_end
Rule 73    fgra_atr -> RECT LPARENTHESIS exp COMA exp COMA fgra_atr_end
Rule 74    fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end
Rule 75    fgra_atr_end -> exp COMA exp COMA color RPARENTHESIS
Rule 76    primitivo -> TYPEINT saveType
Rule 77    primitivo -> TYPEDOUBLE saveType
Rule 78    primitivo -> TYPEBOOL saveType
Rule 79    primitivo -> TYPESTRING saveType
Rule 80    figura -> PINCEL saveType
Rule 81    figura -> CUAD saveType
Rule 82    figura -> RECT saveType
Rule 83    figura -> CIRC saveType
Rule 84    figura -> TRIANG saveType
Rule 85    cte -> STRING push_string
Rule 86    cte -> INT push_int
Rule 87    cte -> DOUBLE push_double
Rule 88    cte -> TRUE push_bool
Rule 89    cte -> FALSE push_bool
Rule 90    push_string -> empty
Rule 91    push_int -> empty
Rule 92    push_double -> empty
Rule 93    push_bool -> empty
Rule 94    parametros -> param_list parametros_loop
Rule 95    parametros -> empty
Rule 96    parametros_loop -> COMA parametros
Rule 97    parametros_loop -> empty
Rule 98    param_list -> paramTypeNext tipo_param COLON ID paramID param_list_loop
Rule 99    param_list -> empty
Rule 100   param_list_loop -> COMA param_list
Rule 101   param_list_loop -> empty
Rule 102   tipo_param -> primitivo
Rule 103   tipo_param -> figura
Rule 104   lienzo -> MAIN add_main_scope bloque_lienzo
Rule 105   bloque -> LBRACE bloque_loop RBRACE
Rule 106   bloque_loop -> estatuto bloque_loop
Rule 107   bloque_loop -> empty
Rule 108   bloque_rutina -> LBRACE bloque_rutina_opt bloque_rutina_loop bloque_rutina_opt_2 RBRACE
Rule 109   bloque_rutina_opt -> vars
Rule 110   bloque_rutina_opt -> empty
Rule 111   bloque_rutina_loop -> estatuto bloque_rutina_loop
Rule 112   bloque_rutina_loop -> empty
Rule 113   bloque_rutina_opt_2 -> RETURN logica SEMICOLON
Rule 114   bloque_rutina_opt_2 -> empty
Rule 115   bloque_lienzo -> LBRACE bloque_lienzo_loop RBRACE
Rule 116   bloque_lienzo_loop -> estatuto_lienzo bloque_lienzo_loop
Rule 117   bloque_lienzo_loop -> empty
Rule 118   estatuto -> asignacion
Rule 119   estatuto -> condicion
Rule 120   estatuto -> ciclo
Rule 121   estatuto -> impresion
Rule 122   estatuto -> lectura
Rule 123   estatuto -> accion
Rule 124   estatuto -> llamada
Rule 125   estatuto -> comentario
Rule 126   estatuto_lienzo -> vars
Rule 127   estatuto_lienzo -> asignacion
Rule 128   estatuto_lienzo -> condicion
Rule 129   estatuto_lienzo -> ciclo
Rule 130   estatuto_lienzo -> impresion
Rule 131   estatuto_lienzo -> lectura
Rule 132   estatuto_lienzo -> accion
Rule 133   estatuto_lienzo -> llamada
Rule 134   estatuto_lienzo -> comentario
Rule 135   comentario -> COMMENT
Rule 136   asignacion -> ID check_variable asignacion_opt ASSIGN push_operation asignacion_opt_2 SEMICOLON
Rule 137   asignacion_opt -> LBRACKET logica RBRACKET
Rule 138   asignacion_opt -> LBRACKET RBRACKET
Rule 139   asignacion_opt -> empty
Rule 140   asignacion_opt_2 -> logica
Rule 141   asignacion_opt_2 -> lectura
Rule 142   asignacion_opt_2 -> fgra_nva
Rule 143   condicion -> IF condicion_loop condicion_opt
Rule 144   condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt
Rule 145   condicion_loop_opt -> ELIF condicion_loop
Rule 146   condicion_loop_opt -> empty
Rule 147   condicion_opt -> ELSE bloque
Rule 148   condicion_opt -> empty
Rule 149   ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque
Rule 150   impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON
Rule 151   lectura -> READ LPARENTHESIS RPARENTHESIS
Rule 152   llamada -> ID check_function LPARENTHESIS llamada_param RPARENTHESIS SEMICOLON
Rule 153   llamada_param -> exp llamada_loop
Rule 154   llamada_param -> empty
Rule 155   llamada_loop -> COMA exp llamada_loop
Rule 156   llamada_loop -> empty
Rule 157   logica -> expresion logica_loop
Rule 158   logica_loop -> AND push_operation logica
Rule 159   logica_loop -> OR push_operation logica
Rule 160   logica_loop -> empty
Rule 161   expresion -> exp expresion_opt logica_helper
Rule 162   expresion_opt -> empty
Rule 163   expresion_opt -> GTHAN push_operation exp expresion_helper
Rule 164   expresion_opt -> GETHAN push_operation exp expresion_helper
Rule 165   expresion_opt -> EQUAL push_operation exp expresion_helper
Rule 166   expresion_opt -> NOTEQUAL push_operation exp expresion_helper
Rule 167   expresion_opt -> LTHAN push_operation exp expresion_helper
Rule 168   expresion_opt -> LETHAN push_operation exp expresion_helper
Rule 169   exp -> termino exp_loop
Rule 170   exp_loop -> PLUS push_operation exp exp_loop
Rule 171   exp_loop -> MINUS push_operation exp exp_loop
Rule 172   exp_loop -> empty
Rule 173   termino -> factor termino_loop exp_helper
Rule 174   termino_loop -> TIMES push_operation termino termino_loop
Rule 175   termino_loop -> DIVIDE push_operation termino termino_loop
Rule 176   termino_loop -> empty
Rule 177   factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
Rule 178   factor -> factor_opt factor_opt_2 factor_helper
Rule 179   factor_opt -> PLUS
Rule 180   factor_opt -> MINUS
Rule 181   factor_opt -> empty
Rule 182   factor_opt_2 -> cte
Rule 183   factor_opt_2 -> id_factor
Rule 184   id_factor -> ID check_variable
Rule 185   id_factor -> idllamada
Rule 186   idllamada -> ID check_function idllamada_opt
Rule 187   idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS
Rule 188   idllamada_opt -> LPARENTHESIS idllamada_opt_loop RPARENTHESIS
Rule 189   idllamada_opt -> LBRACKET expresion RBRACKET
Rule 190   idllamada_opt_loop -> COMA exp idllamada_opt_loop
Rule 191   idllamada_opt_loop -> empty
Rule 192   accion -> ID POINT accion_opt SEMICOLON
Rule 193   accion_opt -> accion_figura
Rule 194   accion_opt -> accion_pincel
Rule 195   accion_figura -> accion_figura_opt RPARENTHESIS
Rule 196   accion_figura_opt -> accion_figura_opt_2
Rule 197   accion_figura_opt -> accion_figura_opt_3
Rule 198   accion_figura_opt_2 -> MOVEA accion_figura_opt_2_end
Rule 199   accion_figura_opt_2 -> ROTATE accion_figura_opt_2_end
Rule 200   accion_figura_opt_2 -> GROW accion_figura_opt_2_end
Rule 201   accion_figura_opt_2 -> THICK accion_figura_opt_2_end
Rule 202   accion_figura_opt_2_end -> LPARENTHESIS expresion
Rule 203   accion_figura_opt_3 -> REMOVE LPARENTHESIS
Rule 204   accion_figura_opt_3 -> FILL LPARENTHESIS color
Rule 205   accion_pincel -> accion_pincel_opt RPARENTHESIS
Rule 206   accion_pincel_opt -> COLOR LPARENTHESIS color
Rule 207   accion_pincel_opt -> DISPLACE accion_pincel_opt_end
Rule 208   accion_pincel_opt -> PAINT accion_pincel_opt_end
Rule 209   accion_pincel_opt -> GRAPH LPARENTHESIS CTEFUNCION COMA exp
Rule 210   accion_pincel_opt_end -> LPARENTHESIS expresion COMA expresion
Rule 211   color -> CTECOLOR
Rule 212   color -> CTEHEXCOLOR

Terminals, with rules where they appear

AND                  : 158
ASSIGN               : 59 60 63 64 136
CIRC                 : 72 83
COLON                : 22 98
COLOR                : 206
COMA                 : 42 52 61 66 71 72 73 73 74 74 74 74 75 75 96 100 155 190 209 210
COMMENT              : 135
CTECOLOR             : 211
CTEFUNCION           : 209
CTEHEXCOLOR          : 212
CUAD                 : 71 81
DISPLACE             : 207
DIVIDE               : 175
DOUBLE               : 87
ELIF                 : 145
ELSE                 : 147
EQUAL                : 165
EXPONENTIAL          : 
FALSE                : 89
FILL                 : 204
GETHAN               : 164
GRAPH                : 209
GROW                 : 200
GTHAN                : 163
ID                   : 8 22 40 51 98 136 152 184 186 192
IF                   : 143
INT                  : 86
LBRACE               : 60 64 105 108 115
LBRACKET             : 45 55 137 138 189
LETHAN               : 168
LPARENTHESIS         : 22 70 71 72 73 74 144 149 150 151 152 177 187 188 202 203 204 206 209 210
LTHAN                : 167
MAIN                 : 104
MINUS                : 171 180
MOD                  : 
MOVEA                : 198
NOTEQUAL             : 166
NUEVO                : 68
NULL                 : 
OR                   : 159
PAINT                : 208
PINCEL               : 70 80
PLUS                 : 170 179
POINT                : 192
PRINT                : 150
PROGRAMA             : 8
RBRACE               : 60 64 105 108 115
RBRACKET             : 45 55 137 138 189
READ                 : 151
RECT                 : 73 82
REMOVE               : 203
RETURN               : 113
ROTATE               : 199
RPARENTHESIS         : 22 75 144 149 150 151 152 177 187 188 195 205
RUTINA               : 22
SEMICOLON            : 16 113 136 150 152 192
STRING               : 85
THICK                : 201
TIMES                : 174
TRIANG               : 74 84
TRUE                 : 88
TYPEBOOL             : 78
TYPEDOUBLE           : 77
TYPEINT              : 76
TYPESTRING           : 79
VAR                  : 16
VOID                 : 28
WHILE                : 149
error                : 

Nonterminals, with rules where they appear

FuncTypeNext         : 22
accion               : 123 132
accion_figura        : 193
accion_figura_opt    : 195
accion_figura_opt_2  : 196
accion_figura_opt_2_end : 198 199 200 201
accion_figura_opt_3  : 197
accion_opt           : 192
accion_pincel        : 194
accion_pincel_opt    : 205
accion_pincel_opt_end : 207 208
add_global_scope     : 8
add_main_scope       : 104
add_var              : 40 51
add_var_name         : 39 51
asignacion           : 118 127
asignacion_opt       : 136
asignacion_opt_2     : 136
bloque               : 144 147 149
bloque_lienzo        : 104
bloque_lienzo_loop   : 115 116
bloque_loop          : 105 106
bloque_rutina        : 22
bloque_rutina_loop   : 108 111
bloque_rutina_opt    : 108
bloque_rutina_opt_2  : 108
check_function       : 152 186
check_variable       : 136 184
ciclo                : 120 129
cleanFunc            : 22
color                : 75 204 206
comentario           : 125 134
condicion            : 119 128
condicion_loop       : 143 145
condicion_loop_opt   : 144
condicion_opt        : 143
cte                  : 182
empty                : 1 2 3 4 5 6 7 9 10 12 14 15 17 18 20 21 23 24 25 29 30 32 33 35 38 41 43 46 47 49 50 53 56 58 62 65 67 69 90 91 92 93 95 97 99 101 107 110 112 114 117 139 146 148 154 156 160 162 172 176 181 191
estatuto             : 106 111
estatuto_lienzo      : 116
exp                  : 71 72 73 73 74 74 74 74 75 75 153 155 161 163 164 165 166 167 168 170 171 187 190 209
exp_helper           : 173
exp_loop             : 169 170 171
expresion            : 157 177 189 202 210 210
expresion_helper     : 163 164 165 166 167 168
expresion_opt        : 161
factor               : 173
factor_helper        : 177 178
factor_opt           : 178
factor_opt_2         : 178
fgra_atr             : 68
fgra_atr_end         : 70 71 72 73 74
fgra_nva             : 63 64 66 142
figura               : 27 51 103
id_factor            : 183
idllamada            : 185
idllamada_opt        : 186
idllamada_opt_loop   : 187 188 190
impresion            : 121 130
ini_fgra             : 54
ini_fgra_v           : 57
ini_fgras_v_loop     : 64 66
ini_prim             : 44
ini_prim_v           : 48
ini_prim_v_loop      : 60 61
lectura              : 122 131 141
lienzo               : 8
llamada              : 124 133
llamada_loop         : 153 155
llamada_param        : 152
logica               : 45 55 59 60 61 113 137 140 144 149 150 158 159
logica_helper        : 161
logica_loop          : 157
paramID              : 98
paramTypeNext        : 98
param_list           : 94 100
param_list_loop      : 98
parametros           : 22 96
parametros_loop      : 94
pop_fake_bottom      : 177
primitivo            : 26 39 102
printFuncTable       : 
printQuadList        : 8
programa             : 0
push_bool            : 88 89
push_double          : 87
push_fake_bottom     : 177
push_int             : 86
push_operation       : 59 136 158 159 163 164 165 166 167 168 170 171 174 175
push_string          : 85
rutina_opt           : 22
rutinas              : 8 31
rutinas_loop         : 22
saveFuncName         : 22
saveFuncParam        : 22
saveFuncTypeVoid     : 28
saveType             : 76 77 78 79 80 81 82 83 84
termino              : 169 174 175
termino_helper       : 
termino_loop         : 173 174 175
tipo                 : 16
tipo_opt             : 34
tipo_opt_fig         : 37 52
tipo_opt_fig_2       : 51
tipo_opt_fig_3       : 55
tipo_opt_fig_loop    : 51
tipo_opt_prim        : 36
tipo_opt_prim_2      : 40
tipo_opt_prim_3      : 45
tipo_opt_prim_loop   : 39 42
tipo_opt_prim_loop_2 : 40
tipo_param           : 98
vars                 : 11 19 109 126
vars_loop            : 16
vars_opt             : 8

Parsing method: LALR

state 0

    (0) S' -> . programa
    (8) programa -> . PROGRAMA ID add_global_scope vars_opt rutinas lienzo printQuadList

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (8) programa -> PROGRAMA . ID add_global_scope vars_opt rutinas lienzo printQuadList

    ID              shift and go to state 3


state 3

    (8) programa -> PROGRAMA ID . add_global_scope vars_opt rutinas lienzo printQuadList
    (38) add_global_scope -> . empty
    (13) empty -> .

    VAR             reduce using rule 13 (empty -> .)
    RUTINA          reduce using rule 13 (empty -> .)
    MAIN            reduce using rule 13 (empty -> .)

    add_global_scope               shift and go to state 4
    empty                          shift and go to state 5

state 4

    (8) programa -> PROGRAMA ID add_global_scope . vars_opt rutinas lienzo printQuadList
    (11) vars_opt -> . vars
    (12) vars_opt -> . empty
    (16) vars -> . VAR tipo SEMICOLON vars_loop
    (13) empty -> .

    VAR             shift and go to state 8
    RUTINA          reduce using rule 13 (empty -> .)
    MAIN            reduce using rule 13 (empty -> .)

    vars                           shift and go to state 7
    empty                          shift and go to state 9
    vars_opt                       shift and go to state 6

state 5

    (38) add_global_scope -> empty .

    VAR             reduce using rule 38 (add_global_scope -> empty .)
    RUTINA          reduce using rule 38 (add_global_scope -> empty .)
    MAIN            reduce using rule 38 (add_global_scope -> empty .)


state 6

    (8) programa -> PROGRAMA ID add_global_scope vars_opt . rutinas lienzo printQuadList
    (22) rutinas -> . RUTINA FuncTypeNext rutina_opt COLON ID saveFuncName LPARENTHESIS parametros RPARENTHESIS saveFuncParam bloque_rutina cleanFunc rutinas_loop
    (23) rutinas -> . empty
    (13) empty -> .

    RUTINA          shift and go to state 12
    MAIN            reduce using rule 13 (empty -> .)

    empty                          shift and go to state 10
    rutinas                        shift and go to state 11

state 7

    (11) vars_opt -> vars .

    RUTINA          reduce using rule 11 (vars_opt -> vars .)
    MAIN            reduce using rule 11 (vars_opt -> vars .)


state 8

    (16) vars -> VAR . tipo SEMICOLON vars_loop
    (34) tipo -> . tipo_opt
    (36) tipo_opt -> . tipo_opt_prim
    (37) tipo_opt -> . tipo_opt_fig
    (39) tipo_opt_prim -> . add_var_name primitivo tipo_opt_prim_loop
    (51) tipo_opt_fig -> . add_var_name figura ID add_var tipo_opt_fig_2 tipo_opt_fig_loop
    (47) add_var_name -> . empty
    (13) empty -> .

    TYPEINT         reduce using rule 13 (empty -> .)
    TYPEDOUBLE      reduce using rule 13 (empty -> .)
    TYPEBOOL        reduce using rule 13 (empty -> .)
    TYPESTRING      reduce using rule 13 (empty -> .)
    PINCEL          reduce using rule 13 (empty -> .)
    CUAD            reduce using rule 13 (empty -> .)
    RECT            reduce using rule 13 (empty -> .)
    CIRC            reduce using rule 13 (empty -> .)
    TRIANG          reduce using rule 13 (empty -> .)

    tipo_opt_fig                   shift and go to state 13
    add_var_name                   shift and go to state 14
    tipo_opt_prim                  shift and go to state 15
    empty                          shift and go to state 16
    tipo_opt                       shift and go to state 17
    tipo                           shift and go to state 18

state 9

    (12) vars_opt -> empty .

    RUTINA          reduce using rule 12 (vars_opt -> empty .)
    MAIN            reduce using rule 12 (vars_opt -> empty .)


state 10

    (23) rutinas -> empty .

    MAIN            reduce using rule 23 (rutinas -> empty .)


state 11

    (8) programa -> PROGRAMA ID add_global_scope vars_opt rutinas . lienzo printQuadList
    (104) lienzo -> . MAIN add_main_scope bloque_lienzo

    MAIN            shift and go to state 20

    lienzo                         shift and go to state 19

state 12

    (22) rutinas -> RUTINA . FuncTypeNext rutina_opt COLON ID saveFuncName LPARENTHESIS parametros RPARENTHESIS saveFuncParam bloque_rutina cleanFunc rutinas_loop
    (18) FuncTypeNext -> . empty
    (13) empty -> .

    VOID            reduce using rule 13 (empty -> .)
    TYPEINT         reduce using rule 13 (empty -> .)
    TYPEDOUBLE      reduce using rule 13 (empty -> .)
    TYPEBOOL        reduce using rule 13 (empty -> .)
    TYPESTRING      reduce using rule 13 (empty -> .)
    PINCEL          reduce using rule 13 (empty -> .)
    CUAD            reduce using rule 13 (empty -> .)
    RECT            reduce using rule 13 (empty -> .)
    CIRC            reduce using rule 13 (empty -> .)
    TRIANG          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 21
    FuncTypeNext                   shift and go to state 22

state 13

    (37) tipo_opt -> tipo_opt_fig .

    SEMICOLON       reduce using rule 37 (tipo_opt -> tipo_opt_fig .)


state 14

    (39) tipo_opt_prim -> add_var_name . primitivo tipo_opt_prim_loop
    (51) tipo_opt_fig -> add_var_name . figura ID add_var tipo_opt_fig_2 tipo_opt_fig_loop
    (76) primitivo -> . TYPEINT saveType
    (77) primitivo -> . TYPEDOUBLE saveType
    (78) primitivo -> . TYPEBOOL saveType
    (79) primitivo -> . TYPESTRING saveType
    (80) figura -> . PINCEL saveType
    (81) figura -> . CUAD saveType
    (82) figura -> . RECT saveType
    (83) figura -> . CIRC saveType
    (84) figura -> . TRIANG saveType

    TYPEINT         shift and go to state 26
    TYPEDOUBLE      shift and go to state 27
    TYPEBOOL        shift and go to state 33
    TYPESTRING      shift and go to state 29
    PINCEL          shift and go to state 24
    CUAD            shift and go to state 30
    RECT            shift and go to state 28
    CIRC            shift and go to state 31
    TRIANG          shift and go to state 32

    primitivo                      shift and go to state 23
    figura                         shift and go to state 25

state 15

    (36) tipo_opt -> tipo_opt_prim .

    SEMICOLON       reduce using rule 36 (tipo_opt -> tipo_opt_prim .)


state 16

    (47) add_var_name -> empty .

    TYPEINT         reduce using rule 47 (add_var_name -> empty .)
    TYPEDOUBLE      reduce using rule 47 (add_var_name -> empty .)
    TYPEBOOL        reduce using rule 47 (add_var_name -> empty .)
    TYPESTRING      reduce using rule 47 (add_var_name -> empty .)
    PINCEL          reduce using rule 47 (add_var_name -> empty .)
    CUAD            reduce using rule 47 (add_var_name -> empty .)
    RECT            reduce using rule 47 (add_var_name -> empty .)
    CIRC            reduce using rule 47 (add_var_name -> empty .)
    TRIANG          reduce using rule 47 (add_var_name -> empty .)


state 17

    (34) tipo -> tipo_opt .

    SEMICOLON       reduce using rule 34 (tipo -> tipo_opt .)


state 18

    (16) vars -> VAR tipo . SEMICOLON vars_loop

    SEMICOLON       shift and go to state 34


state 19

    (8) programa -> PROGRAMA ID add_global_scope vars_opt rutinas lienzo . printQuadList
    (29) printQuadList -> . empty
    (13) empty -> .

    $end            reduce using rule 13 (empty -> .)

    printQuadList                  shift and go to state 36
    empty                          shift and go to state 35

state 20

    (104) lienzo -> MAIN . add_main_scope bloque_lienzo
    (41) add_main_scope -> . empty
    (13) empty -> .

    LBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 37
    add_main_scope                 shift and go to state 38

state 21

    (18) FuncTypeNext -> empty .

    VOID            reduce using rule 18 (FuncTypeNext -> empty .)
    TYPEINT         reduce using rule 18 (FuncTypeNext -> empty .)
    TYPEDOUBLE      reduce using rule 18 (FuncTypeNext -> empty .)
    TYPEBOOL        reduce using rule 18 (FuncTypeNext -> empty .)
    TYPESTRING      reduce using rule 18 (FuncTypeNext -> empty .)
    PINCEL          reduce using rule 18 (FuncTypeNext -> empty .)
    CUAD            reduce using rule 18 (FuncTypeNext -> empty .)
    RECT            reduce using rule 18 (FuncTypeNext -> empty .)
    CIRC            reduce using rule 18 (FuncTypeNext -> empty .)
    TRIANG          reduce using rule 18 (FuncTypeNext -> empty .)


state 22

    (22) rutinas -> RUTINA FuncTypeNext . rutina_opt COLON ID saveFuncName LPARENTHESIS parametros RPARENTHESIS saveFuncParam bloque_rutina cleanFunc rutinas_loop
    (26) rutina_opt -> . primitivo
    (27) rutina_opt -> . figura
    (28) rutina_opt -> . VOID saveFuncTypeVoid
    (76) primitivo -> . TYPEINT saveType
    (77) primitivo -> . TYPEDOUBLE saveType
    (78) primitivo -> . TYPEBOOL saveType
    (79) primitivo -> . TYPESTRING saveType
    (80) figura -> . PINCEL saveType
    (81) figura -> . CUAD saveType
    (82) figura -> . RECT saveType
    (83) figura -> . CIRC saveType
    (84) figura -> . TRIANG saveType

    VOID            shift and go to state 40
    TYPEINT         shift and go to state 26
    TYPEDOUBLE      shift and go to state 27
    TYPEBOOL        shift and go to state 33
    TYPESTRING      shift and go to state 29
    PINCEL          shift and go to state 24
    CUAD            shift and go to state 30
    RECT            shift and go to state 28
    CIRC            shift and go to state 31
    TRIANG          shift and go to state 32

    primitivo                      shift and go to state 39
    rutina_opt                     shift and go to state 41
    figura                         shift and go to state 42

state 23

    (39) tipo_opt_prim -> add_var_name primitivo . tipo_opt_prim_loop
    (40) tipo_opt_prim_loop -> . ID add_var tipo_opt_prim_2 tipo_opt_prim_loop_2

    ID              shift and go to state 43

    tipo_opt_prim_loop             shift and go to state 44

state 24

    (80) figura -> PINCEL . saveType
    (21) saveType -> . empty
    (13) empty -> .

    ID              reduce using rule 13 (empty -> .)
    COLON           reduce using rule 13 (empty -> .)

    empty                          shift and go to state 45
    saveType                       shift and go to state 46

state 25

    (51) tipo_opt_fig -> add_var_name figura . ID add_var tipo_opt_fig_2 tipo_opt_fig_loop

    ID              shift and go to state 47


state 26

    (76) primitivo -> TYPEINT . saveType
    (21) saveType -> . empty
    (13) empty -> .

    ID              reduce using rule 13 (empty -> .)
    COLON           reduce using rule 13 (empty -> .)

    empty                          shift and go to state 45
    saveType                       shift and go to state 48

state 27

    (77) primitivo -> TYPEDOUBLE . saveType
    (21) saveType -> . empty
    (13) empty -> .

    ID              reduce using rule 13 (empty -> .)
    COLON           reduce using rule 13 (empty -> .)

    empty                          shift and go to state 45
    saveType                       shift and go to state 49

state 28

    (82) figura -> RECT . saveType
    (21) saveType -> . empty
    (13) empty -> .

    ID              reduce using rule 13 (empty -> .)
    COLON           reduce using rule 13 (empty -> .)

    empty                          shift and go to state 45
    saveType                       shift and go to state 50

state 29

    (79) primitivo -> TYPESTRING . saveType
    (21) saveType -> . empty
    (13) empty -> .

    ID              reduce using rule 13 (empty -> .)
    COLON           reduce using rule 13 (empty -> .)

    empty                          shift and go to state 45
    saveType                       shift and go to state 51

state 30

    (81) figura -> CUAD . saveType
    (21) saveType -> . empty
    (13) empty -> .

    ID              reduce using rule 13 (empty -> .)
    COLON           reduce using rule 13 (empty -> .)

    empty                          shift and go to state 45
    saveType                       shift and go to state 52

state 31

    (83) figura -> CIRC . saveType
    (21) saveType -> . empty
    (13) empty -> .

    ID              reduce using rule 13 (empty -> .)
    COLON           reduce using rule 13 (empty -> .)

    empty                          shift and go to state 45
    saveType                       shift and go to state 53

state 32

    (84) figura -> TRIANG . saveType
    (21) saveType -> . empty
    (13) empty -> .

    ID              reduce using rule 13 (empty -> .)
    COLON           reduce using rule 13 (empty -> .)

    empty                          shift and go to state 45
    saveType                       shift and go to state 54

state 33

    (78) primitivo -> TYPEBOOL . saveType
    (21) saveType -> . empty
    (13) empty -> .

    ID              reduce using rule 13 (empty -> .)
    COLON           reduce using rule 13 (empty -> .)

    empty                          shift and go to state 45
    saveType                       shift and go to state 55

state 34

    (16) vars -> VAR tipo SEMICOLON . vars_loop
    (19) vars_loop -> . vars
    (20) vars_loop -> . empty
    (16) vars -> . VAR tipo SEMICOLON vars_loop
    (13) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 8
    RUTINA          reduce using rule 13 (empty -> .)
    MAIN            reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)
    IF              reduce using rule 13 (empty -> .)
    WHILE           reduce using rule 13 (empty -> .)
    PRINT           reduce using rule 13 (empty -> .)
    READ            reduce using rule 13 (empty -> .)
    COMMENT         reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)
    RETURN          reduce using rule 13 (empty -> .)

  ! VAR             [ reduce using rule 13 (empty -> .) ]

    empty                          shift and go to state 58
    vars_loop                      shift and go to state 56
    vars                           shift and go to state 57

state 35

    (29) printQuadList -> empty .

    $end            reduce using rule 29 (printQuadList -> empty .)


state 36

    (8) programa -> PROGRAMA ID add_global_scope vars_opt rutinas lienzo printQuadList .

    $end            reduce using rule 8 (programa -> PROGRAMA ID add_global_scope vars_opt rutinas lienzo printQuadList .)


state 37

    (41) add_main_scope -> empty .

    LBRACE          reduce using rule 41 (add_main_scope -> empty .)


state 38

    (104) lienzo -> MAIN add_main_scope . bloque_lienzo
    (115) bloque_lienzo -> . LBRACE bloque_lienzo_loop RBRACE

    LBRACE          shift and go to state 59

    bloque_lienzo                  shift and go to state 60

state 39

    (26) rutina_opt -> primitivo .

    COLON           reduce using rule 26 (rutina_opt -> primitivo .)


state 40

    (28) rutina_opt -> VOID . saveFuncTypeVoid
    (15) saveFuncTypeVoid -> . empty
    (13) empty -> .

    COLON           reduce using rule 13 (empty -> .)

    empty                          shift and go to state 61
    saveFuncTypeVoid               shift and go to state 62

state 41

    (22) rutinas -> RUTINA FuncTypeNext rutina_opt . COLON ID saveFuncName LPARENTHESIS parametros RPARENTHESIS saveFuncParam bloque_rutina cleanFunc rutinas_loop

    COLON           shift and go to state 63


state 42

    (27) rutina_opt -> figura .

    COLON           reduce using rule 27 (rutina_opt -> figura .)


state 43

    (40) tipo_opt_prim_loop -> ID . add_var tipo_opt_prim_2 tipo_opt_prim_loop_2
    (50) add_var -> . empty
    (13) empty -> .

    LBRACKET        reduce using rule 13 (empty -> .)
    ASSIGN          reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)

    add_var                        shift and go to state 64
    empty                          shift and go to state 65

state 44

    (39) tipo_opt_prim -> add_var_name primitivo tipo_opt_prim_loop .

    SEMICOLON       reduce using rule 39 (tipo_opt_prim -> add_var_name primitivo tipo_opt_prim_loop .)


state 45

    (21) saveType -> empty .

    ID              reduce using rule 21 (saveType -> empty .)
    COLON           reduce using rule 21 (saveType -> empty .)


state 46

    (80) figura -> PINCEL saveType .

    ID              reduce using rule 80 (figura -> PINCEL saveType .)
    COLON           reduce using rule 80 (figura -> PINCEL saveType .)


state 47

    (51) tipo_opt_fig -> add_var_name figura ID . add_var tipo_opt_fig_2 tipo_opt_fig_loop
    (50) add_var -> . empty
    (13) empty -> .

    LBRACKET        reduce using rule 13 (empty -> .)
    ASSIGN          reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)

    empty                          shift and go to state 65
    add_var                        shift and go to state 66

state 48

    (76) primitivo -> TYPEINT saveType .

    COLON           reduce using rule 76 (primitivo -> TYPEINT saveType .)
    ID              reduce using rule 76 (primitivo -> TYPEINT saveType .)


state 49

    (77) primitivo -> TYPEDOUBLE saveType .

    COLON           reduce using rule 77 (primitivo -> TYPEDOUBLE saveType .)
    ID              reduce using rule 77 (primitivo -> TYPEDOUBLE saveType .)


state 50

    (82) figura -> RECT saveType .

    ID              reduce using rule 82 (figura -> RECT saveType .)
    COLON           reduce using rule 82 (figura -> RECT saveType .)


state 51

    (79) primitivo -> TYPESTRING saveType .

    COLON           reduce using rule 79 (primitivo -> TYPESTRING saveType .)
    ID              reduce using rule 79 (primitivo -> TYPESTRING saveType .)


state 52

    (81) figura -> CUAD saveType .

    ID              reduce using rule 81 (figura -> CUAD saveType .)
    COLON           reduce using rule 81 (figura -> CUAD saveType .)


state 53

    (83) figura -> CIRC saveType .

    ID              reduce using rule 83 (figura -> CIRC saveType .)
    COLON           reduce using rule 83 (figura -> CIRC saveType .)


state 54

    (84) figura -> TRIANG saveType .

    ID              reduce using rule 84 (figura -> TRIANG saveType .)
    COLON           reduce using rule 84 (figura -> TRIANG saveType .)


state 55

    (78) primitivo -> TYPEBOOL saveType .

    COLON           reduce using rule 78 (primitivo -> TYPEBOOL saveType .)
    ID              reduce using rule 78 (primitivo -> TYPEBOOL saveType .)


state 56

    (16) vars -> VAR tipo SEMICOLON vars_loop .

    VAR             reduce using rule 16 (vars -> VAR tipo SEMICOLON vars_loop .)
    ID              reduce using rule 16 (vars -> VAR tipo SEMICOLON vars_loop .)
    IF              reduce using rule 16 (vars -> VAR tipo SEMICOLON vars_loop .)
    WHILE           reduce using rule 16 (vars -> VAR tipo SEMICOLON vars_loop .)
    PRINT           reduce using rule 16 (vars -> VAR tipo SEMICOLON vars_loop .)
    READ            reduce using rule 16 (vars -> VAR tipo SEMICOLON vars_loop .)
    COMMENT         reduce using rule 16 (vars -> VAR tipo SEMICOLON vars_loop .)
    RBRACE          reduce using rule 16 (vars -> VAR tipo SEMICOLON vars_loop .)
    RUTINA          reduce using rule 16 (vars -> VAR tipo SEMICOLON vars_loop .)
    MAIN            reduce using rule 16 (vars -> VAR tipo SEMICOLON vars_loop .)
    RETURN          reduce using rule 16 (vars -> VAR tipo SEMICOLON vars_loop .)


state 57

    (19) vars_loop -> vars .

    RUTINA          reduce using rule 19 (vars_loop -> vars .)
    MAIN            reduce using rule 19 (vars_loop -> vars .)
    VAR             reduce using rule 19 (vars_loop -> vars .)
    ID              reduce using rule 19 (vars_loop -> vars .)
    IF              reduce using rule 19 (vars_loop -> vars .)
    WHILE           reduce using rule 19 (vars_loop -> vars .)
    PRINT           reduce using rule 19 (vars_loop -> vars .)
    READ            reduce using rule 19 (vars_loop -> vars .)
    COMMENT         reduce using rule 19 (vars_loop -> vars .)
    RBRACE          reduce using rule 19 (vars_loop -> vars .)
    RETURN          reduce using rule 19 (vars_loop -> vars .)


state 58

    (20) vars_loop -> empty .

    RUTINA          reduce using rule 20 (vars_loop -> empty .)
    MAIN            reduce using rule 20 (vars_loop -> empty .)
    VAR             reduce using rule 20 (vars_loop -> empty .)
    ID              reduce using rule 20 (vars_loop -> empty .)
    IF              reduce using rule 20 (vars_loop -> empty .)
    WHILE           reduce using rule 20 (vars_loop -> empty .)
    PRINT           reduce using rule 20 (vars_loop -> empty .)
    READ            reduce using rule 20 (vars_loop -> empty .)
    COMMENT         reduce using rule 20 (vars_loop -> empty .)
    RBRACE          reduce using rule 20 (vars_loop -> empty .)
    RETURN          reduce using rule 20 (vars_loop -> empty .)


state 59

    (115) bloque_lienzo -> LBRACE . bloque_lienzo_loop RBRACE
    (116) bloque_lienzo_loop -> . estatuto_lienzo bloque_lienzo_loop
    (117) bloque_lienzo_loop -> . empty
    (126) estatuto_lienzo -> . vars
    (127) estatuto_lienzo -> . asignacion
    (128) estatuto_lienzo -> . condicion
    (129) estatuto_lienzo -> . ciclo
    (130) estatuto_lienzo -> . impresion
    (131) estatuto_lienzo -> . lectura
    (132) estatuto_lienzo -> . accion
    (133) estatuto_lienzo -> . llamada
    (134) estatuto_lienzo -> . comentario
    (13) empty -> .
    (16) vars -> . VAR tipo SEMICOLON vars_loop
    (136) asignacion -> . ID check_variable asignacion_opt ASSIGN push_operation asignacion_opt_2 SEMICOLON
    (143) condicion -> . IF condicion_loop condicion_opt
    (149) ciclo -> . WHILE LPARENTHESIS logica RPARENTHESIS bloque
    (150) impresion -> . PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON
    (151) lectura -> . READ LPARENTHESIS RPARENTHESIS
    (192) accion -> . ID POINT accion_opt SEMICOLON
    (152) llamada -> . ID check_function LPARENTHESIS llamada_param RPARENTHESIS SEMICOLON
    (135) comentario -> . COMMENT

    RBRACE          reduce using rule 13 (empty -> .)
    VAR             shift and go to state 8
    ID              shift and go to state 70
    IF              shift and go to state 71
    WHILE           shift and go to state 84
    PRINT           shift and go to state 83
    READ            shift and go to state 75
    COMMENT         shift and go to state 80

    llamada                        shift and go to state 67
    ciclo                          shift and go to state 68
    vars                           shift and go to state 69
    estatuto_lienzo                shift and go to state 72
    lectura                        shift and go to state 73
    condicion                      shift and go to state 74
    empty                          shift and go to state 76
    accion                         shift and go to state 77
    bloque_lienzo_loop             shift and go to state 78
    comentario                     shift and go to state 79
    impresion                      shift and go to state 81
    asignacion                     shift and go to state 82

state 60

    (104) lienzo -> MAIN add_main_scope bloque_lienzo .

    $end            reduce using rule 104 (lienzo -> MAIN add_main_scope bloque_lienzo .)


state 61

    (15) saveFuncTypeVoid -> empty .

    COLON           reduce using rule 15 (saveFuncTypeVoid -> empty .)


state 62

    (28) rutina_opt -> VOID saveFuncTypeVoid .

    COLON           reduce using rule 28 (rutina_opt -> VOID saveFuncTypeVoid .)


state 63

    (22) rutinas -> RUTINA FuncTypeNext rutina_opt COLON . ID saveFuncName LPARENTHESIS parametros RPARENTHESIS saveFuncParam bloque_rutina cleanFunc rutinas_loop

    ID              shift and go to state 85


state 64

    (40) tipo_opt_prim_loop -> ID add_var . tipo_opt_prim_2 tipo_opt_prim_loop_2
    (44) tipo_opt_prim_2 -> . ini_prim
    (45) tipo_opt_prim_2 -> . LBRACKET logica RBRACKET tipo_opt_prim_3
    (46) tipo_opt_prim_2 -> . empty
    (59) ini_prim -> . ASSIGN push_operation logica
    (13) empty -> .

    LBRACKET        shift and go to state 87
    ASSIGN          shift and go to state 90
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)

    empty                          shift and go to state 89
    tipo_opt_prim_2                shift and go to state 86
    ini_prim                       shift and go to state 88

state 65

    (50) add_var -> empty .

    LBRACKET        reduce using rule 50 (add_var -> empty .)
    ASSIGN          reduce using rule 50 (add_var -> empty .)
    COMA            reduce using rule 50 (add_var -> empty .)
    SEMICOLON       reduce using rule 50 (add_var -> empty .)


state 66

    (51) tipo_opt_fig -> add_var_name figura ID add_var . tipo_opt_fig_2 tipo_opt_fig_loop
    (54) tipo_opt_fig_2 -> . ini_fgra
    (55) tipo_opt_fig_2 -> . LBRACKET logica RBRACKET tipo_opt_fig_3
    (56) tipo_opt_fig_2 -> . empty
    (63) ini_fgra -> . ASSIGN fgra_nva
    (13) empty -> .

    LBRACKET        shift and go to state 92
    ASSIGN          shift and go to state 91
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)

    empty                          shift and go to state 93
    tipo_opt_fig_2                 shift and go to state 94
    ini_fgra                       shift and go to state 95

state 67

    (133) estatuto_lienzo -> llamada .

    VAR             reduce using rule 133 (estatuto_lienzo -> llamada .)
    ID              reduce using rule 133 (estatuto_lienzo -> llamada .)
    IF              reduce using rule 133 (estatuto_lienzo -> llamada .)
    WHILE           reduce using rule 133 (estatuto_lienzo -> llamada .)
    PRINT           reduce using rule 133 (estatuto_lienzo -> llamada .)
    READ            reduce using rule 133 (estatuto_lienzo -> llamada .)
    COMMENT         reduce using rule 133 (estatuto_lienzo -> llamada .)
    RBRACE          reduce using rule 133 (estatuto_lienzo -> llamada .)


state 68

    (129) estatuto_lienzo -> ciclo .

    VAR             reduce using rule 129 (estatuto_lienzo -> ciclo .)
    ID              reduce using rule 129 (estatuto_lienzo -> ciclo .)
    IF              reduce using rule 129 (estatuto_lienzo -> ciclo .)
    WHILE           reduce using rule 129 (estatuto_lienzo -> ciclo .)
    PRINT           reduce using rule 129 (estatuto_lienzo -> ciclo .)
    READ            reduce using rule 129 (estatuto_lienzo -> ciclo .)
    COMMENT         reduce using rule 129 (estatuto_lienzo -> ciclo .)
    RBRACE          reduce using rule 129 (estatuto_lienzo -> ciclo .)


state 69

    (126) estatuto_lienzo -> vars .

    VAR             reduce using rule 126 (estatuto_lienzo -> vars .)
    ID              reduce using rule 126 (estatuto_lienzo -> vars .)
    IF              reduce using rule 126 (estatuto_lienzo -> vars .)
    WHILE           reduce using rule 126 (estatuto_lienzo -> vars .)
    PRINT           reduce using rule 126 (estatuto_lienzo -> vars .)
    READ            reduce using rule 126 (estatuto_lienzo -> vars .)
    COMMENT         reduce using rule 126 (estatuto_lienzo -> vars .)
    RBRACE          reduce using rule 126 (estatuto_lienzo -> vars .)


state 70

    (136) asignacion -> ID . check_variable asignacion_opt ASSIGN push_operation asignacion_opt_2 SEMICOLON
    (192) accion -> ID . POINT accion_opt SEMICOLON
    (152) llamada -> ID . check_function LPARENTHESIS llamada_param RPARENTHESIS SEMICOLON
    (1) check_variable -> . empty
    (3) check_function -> . empty
    (13) empty -> .

    POINT           shift and go to state 96
    LBRACKET        reduce using rule 13 (empty -> .)
    ASSIGN          reduce using rule 13 (empty -> .)
    LPARENTHESIS    reduce using rule 13 (empty -> .)

    empty                          shift and go to state 97
    check_function                 shift and go to state 98
    check_variable                 shift and go to state 99

state 71

    (143) condicion -> IF . condicion_loop condicion_opt
    (144) condicion_loop -> . LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt

    LPARENTHESIS    shift and go to state 101

    condicion_loop                 shift and go to state 100

state 72

    (116) bloque_lienzo_loop -> estatuto_lienzo . bloque_lienzo_loop
    (116) bloque_lienzo_loop -> . estatuto_lienzo bloque_lienzo_loop
    (117) bloque_lienzo_loop -> . empty
    (126) estatuto_lienzo -> . vars
    (127) estatuto_lienzo -> . asignacion
    (128) estatuto_lienzo -> . condicion
    (129) estatuto_lienzo -> . ciclo
    (130) estatuto_lienzo -> . impresion
    (131) estatuto_lienzo -> . lectura
    (132) estatuto_lienzo -> . accion
    (133) estatuto_lienzo -> . llamada
    (134) estatuto_lienzo -> . comentario
    (13) empty -> .
    (16) vars -> . VAR tipo SEMICOLON vars_loop
    (136) asignacion -> . ID check_variable asignacion_opt ASSIGN push_operation asignacion_opt_2 SEMICOLON
    (143) condicion -> . IF condicion_loop condicion_opt
    (149) ciclo -> . WHILE LPARENTHESIS logica RPARENTHESIS bloque
    (150) impresion -> . PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON
    (151) lectura -> . READ LPARENTHESIS RPARENTHESIS
    (192) accion -> . ID POINT accion_opt SEMICOLON
    (152) llamada -> . ID check_function LPARENTHESIS llamada_param RPARENTHESIS SEMICOLON
    (135) comentario -> . COMMENT

    RBRACE          reduce using rule 13 (empty -> .)
    VAR             shift and go to state 8
    ID              shift and go to state 70
    IF              shift and go to state 71
    WHILE           shift and go to state 84
    PRINT           shift and go to state 83
    READ            shift and go to state 75
    COMMENT         shift and go to state 80

    llamada                        shift and go to state 67
    ciclo                          shift and go to state 68
    vars                           shift and go to state 69
    estatuto_lienzo                shift and go to state 72
    lectura                        shift and go to state 73
    condicion                      shift and go to state 74
    empty                          shift and go to state 76
    accion                         shift and go to state 77
    bloque_lienzo_loop             shift and go to state 102
    comentario                     shift and go to state 79
    impresion                      shift and go to state 81
    asignacion                     shift and go to state 82

state 73

    (131) estatuto_lienzo -> lectura .

    VAR             reduce using rule 131 (estatuto_lienzo -> lectura .)
    ID              reduce using rule 131 (estatuto_lienzo -> lectura .)
    IF              reduce using rule 131 (estatuto_lienzo -> lectura .)
    WHILE           reduce using rule 131 (estatuto_lienzo -> lectura .)
    PRINT           reduce using rule 131 (estatuto_lienzo -> lectura .)
    READ            reduce using rule 131 (estatuto_lienzo -> lectura .)
    COMMENT         reduce using rule 131 (estatuto_lienzo -> lectura .)
    RBRACE          reduce using rule 131 (estatuto_lienzo -> lectura .)


state 74

    (128) estatuto_lienzo -> condicion .

    VAR             reduce using rule 128 (estatuto_lienzo -> condicion .)
    ID              reduce using rule 128 (estatuto_lienzo -> condicion .)
    IF              reduce using rule 128 (estatuto_lienzo -> condicion .)
    WHILE           reduce using rule 128 (estatuto_lienzo -> condicion .)
    PRINT           reduce using rule 128 (estatuto_lienzo -> condicion .)
    READ            reduce using rule 128 (estatuto_lienzo -> condicion .)
    COMMENT         reduce using rule 128 (estatuto_lienzo -> condicion .)
    RBRACE          reduce using rule 128 (estatuto_lienzo -> condicion .)


state 75

    (151) lectura -> READ . LPARENTHESIS RPARENTHESIS

    LPARENTHESIS    shift and go to state 103


state 76

    (117) bloque_lienzo_loop -> empty .

    RBRACE          reduce using rule 117 (bloque_lienzo_loop -> empty .)


state 77

    (132) estatuto_lienzo -> accion .

    VAR             reduce using rule 132 (estatuto_lienzo -> accion .)
    ID              reduce using rule 132 (estatuto_lienzo -> accion .)
    IF              reduce using rule 132 (estatuto_lienzo -> accion .)
    WHILE           reduce using rule 132 (estatuto_lienzo -> accion .)
    PRINT           reduce using rule 132 (estatuto_lienzo -> accion .)
    READ            reduce using rule 132 (estatuto_lienzo -> accion .)
    COMMENT         reduce using rule 132 (estatuto_lienzo -> accion .)
    RBRACE          reduce using rule 132 (estatuto_lienzo -> accion .)


state 78

    (115) bloque_lienzo -> LBRACE bloque_lienzo_loop . RBRACE

    RBRACE          shift and go to state 104


state 79

    (134) estatuto_lienzo -> comentario .

    VAR             reduce using rule 134 (estatuto_lienzo -> comentario .)
    ID              reduce using rule 134 (estatuto_lienzo -> comentario .)
    IF              reduce using rule 134 (estatuto_lienzo -> comentario .)
    WHILE           reduce using rule 134 (estatuto_lienzo -> comentario .)
    PRINT           reduce using rule 134 (estatuto_lienzo -> comentario .)
    READ            reduce using rule 134 (estatuto_lienzo -> comentario .)
    COMMENT         reduce using rule 134 (estatuto_lienzo -> comentario .)
    RBRACE          reduce using rule 134 (estatuto_lienzo -> comentario .)


state 80

    (135) comentario -> COMMENT .

    ID              reduce using rule 135 (comentario -> COMMENT .)
    IF              reduce using rule 135 (comentario -> COMMENT .)
    WHILE           reduce using rule 135 (comentario -> COMMENT .)
    PRINT           reduce using rule 135 (comentario -> COMMENT .)
    READ            reduce using rule 135 (comentario -> COMMENT .)
    COMMENT         reduce using rule 135 (comentario -> COMMENT .)
    RETURN          reduce using rule 135 (comentario -> COMMENT .)
    RBRACE          reduce using rule 135 (comentario -> COMMENT .)
    VAR             reduce using rule 135 (comentario -> COMMENT .)


state 81

    (130) estatuto_lienzo -> impresion .

    VAR             reduce using rule 130 (estatuto_lienzo -> impresion .)
    ID              reduce using rule 130 (estatuto_lienzo -> impresion .)
    IF              reduce using rule 130 (estatuto_lienzo -> impresion .)
    WHILE           reduce using rule 130 (estatuto_lienzo -> impresion .)
    PRINT           reduce using rule 130 (estatuto_lienzo -> impresion .)
    READ            reduce using rule 130 (estatuto_lienzo -> impresion .)
    COMMENT         reduce using rule 130 (estatuto_lienzo -> impresion .)
    RBRACE          reduce using rule 130 (estatuto_lienzo -> impresion .)


state 82

    (127) estatuto_lienzo -> asignacion .

    VAR             reduce using rule 127 (estatuto_lienzo -> asignacion .)
    ID              reduce using rule 127 (estatuto_lienzo -> asignacion .)
    IF              reduce using rule 127 (estatuto_lienzo -> asignacion .)
    WHILE           reduce using rule 127 (estatuto_lienzo -> asignacion .)
    PRINT           reduce using rule 127 (estatuto_lienzo -> asignacion .)
    READ            reduce using rule 127 (estatuto_lienzo -> asignacion .)
    COMMENT         reduce using rule 127 (estatuto_lienzo -> asignacion .)
    RBRACE          reduce using rule 127 (estatuto_lienzo -> asignacion .)


state 83

    (150) impresion -> PRINT . LPARENTHESIS logica RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 105


state 84

    (149) ciclo -> WHILE . LPARENTHESIS logica RPARENTHESIS bloque

    LPARENTHESIS    shift and go to state 106


state 85

    (22) rutinas -> RUTINA FuncTypeNext rutina_opt COLON ID . saveFuncName LPARENTHESIS parametros RPARENTHESIS saveFuncParam bloque_rutina cleanFunc rutinas_loop
    (7) saveFuncName -> . empty
    (13) empty -> .

    LPARENTHESIS    reduce using rule 13 (empty -> .)

    saveFuncName                   shift and go to state 107
    empty                          shift and go to state 108

state 86

    (40) tipo_opt_prim_loop -> ID add_var tipo_opt_prim_2 . tipo_opt_prim_loop_2
    (42) tipo_opt_prim_loop_2 -> . COMA tipo_opt_prim_loop
    (43) tipo_opt_prim_loop_2 -> . empty
    (13) empty -> .

    COMA            shift and go to state 109
    SEMICOLON       reduce using rule 13 (empty -> .)

    empty                          shift and go to state 111
    tipo_opt_prim_loop_2           shift and go to state 110

state 87

    (45) tipo_opt_prim_2 -> LBRACKET . logica RBRACKET tipo_opt_prim_3
    (157) logica -> . expresion logica_loop
    (161) expresion -> . exp expresion_opt logica_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    expresion                      shift and go to state 119
    factor                         shift and go to state 113
    exp                            shift and go to state 115
    termino                        shift and go to state 120
    empty                          shift and go to state 117
    logica                         shift and go to state 118

state 88

    (44) tipo_opt_prim_2 -> ini_prim .

    COMA            reduce using rule 44 (tipo_opt_prim_2 -> ini_prim .)
    SEMICOLON       reduce using rule 44 (tipo_opt_prim_2 -> ini_prim .)


state 89

    (46) tipo_opt_prim_2 -> empty .

    COMA            reduce using rule 46 (tipo_opt_prim_2 -> empty .)
    SEMICOLON       reduce using rule 46 (tipo_opt_prim_2 -> empty .)


state 90

    (59) ini_prim -> ASSIGN . push_operation logica
    (2) push_operation -> . empty
    (13) empty -> .

    LPARENTHESIS    reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    empty                          shift and go to state 122
    push_operation                 shift and go to state 123

state 91

    (63) ini_fgra -> ASSIGN . fgra_nva
    (68) fgra_nva -> . NUEVO fgra_atr
    (69) fgra_nva -> . empty
    (13) empty -> .

    NUEVO           shift and go to state 125
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)

    empty                          shift and go to state 124
    fgra_nva                       shift and go to state 126

state 92

    (55) tipo_opt_fig_2 -> LBRACKET . logica RBRACKET tipo_opt_fig_3
    (157) logica -> . expresion logica_loop
    (161) expresion -> . exp expresion_opt logica_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    expresion                      shift and go to state 119
    factor                         shift and go to state 113
    exp                            shift and go to state 115
    termino                        shift and go to state 120
    empty                          shift and go to state 117
    logica                         shift and go to state 127

state 93

    (56) tipo_opt_fig_2 -> empty .

    COMA            reduce using rule 56 (tipo_opt_fig_2 -> empty .)
    SEMICOLON       reduce using rule 56 (tipo_opt_fig_2 -> empty .)


state 94

    (51) tipo_opt_fig -> add_var_name figura ID add_var tipo_opt_fig_2 . tipo_opt_fig_loop
    (52) tipo_opt_fig_loop -> . COMA tipo_opt_fig
    (53) tipo_opt_fig_loop -> . empty
    (13) empty -> .

    COMA            shift and go to state 129
    SEMICOLON       reduce using rule 13 (empty -> .)

    empty                          shift and go to state 130
    tipo_opt_fig_loop              shift and go to state 128

state 95

    (54) tipo_opt_fig_2 -> ini_fgra .

    COMA            reduce using rule 54 (tipo_opt_fig_2 -> ini_fgra .)
    SEMICOLON       reduce using rule 54 (tipo_opt_fig_2 -> ini_fgra .)


state 96

    (192) accion -> ID POINT . accion_opt SEMICOLON
    (193) accion_opt -> . accion_figura
    (194) accion_opt -> . accion_pincel
    (195) accion_figura -> . accion_figura_opt RPARENTHESIS
    (205) accion_pincel -> . accion_pincel_opt RPARENTHESIS
    (196) accion_figura_opt -> . accion_figura_opt_2
    (197) accion_figura_opt -> . accion_figura_opt_3
    (206) accion_pincel_opt -> . COLOR LPARENTHESIS color
    (207) accion_pincel_opt -> . DISPLACE accion_pincel_opt_end
    (208) accion_pincel_opt -> . PAINT accion_pincel_opt_end
    (209) accion_pincel_opt -> . GRAPH LPARENTHESIS CTEFUNCION COMA exp
    (198) accion_figura_opt_2 -> . MOVEA accion_figura_opt_2_end
    (199) accion_figura_opt_2 -> . ROTATE accion_figura_opt_2_end
    (200) accion_figura_opt_2 -> . GROW accion_figura_opt_2_end
    (201) accion_figura_opt_2 -> . THICK accion_figura_opt_2_end
    (203) accion_figura_opt_3 -> . REMOVE LPARENTHESIS
    (204) accion_figura_opt_3 -> . FILL LPARENTHESIS color

    COLOR           shift and go to state 142
    DISPLACE        shift and go to state 145
    PAINT           shift and go to state 143
    GRAPH           shift and go to state 138
    MOVEA           shift and go to state 133
    ROTATE          shift and go to state 132
    GROW            shift and go to state 139
    THICK           shift and go to state 137
    REMOVE          shift and go to state 136
    FILL            shift and go to state 141

    accion_pincel                  shift and go to state 135
    accion_pincel_opt              shift and go to state 131
    accion_figura_opt_3            shift and go to state 144
    accion_figura_opt_2            shift and go to state 140
    accion_figura_opt              shift and go to state 146
    accion_figura                  shift and go to state 147
    accion_opt                     shift and go to state 134

state 97

    (1) check_variable -> empty .
    (3) check_function -> empty .

  ! reduce/reduce conflict for LBRACKET resolved using rule 1 (check_variable -> empty .)
    LBRACKET        reduce using rule 1 (check_variable -> empty .)
    ASSIGN          reduce using rule 1 (check_variable -> empty .)
    TIMES           reduce using rule 1 (check_variable -> empty .)
    DIVIDE          reduce using rule 1 (check_variable -> empty .)
    PLUS            reduce using rule 1 (check_variable -> empty .)
    MINUS           reduce using rule 1 (check_variable -> empty .)
    GTHAN           reduce using rule 1 (check_variable -> empty .)
    GETHAN          reduce using rule 1 (check_variable -> empty .)
    EQUAL           reduce using rule 1 (check_variable -> empty .)
    NOTEQUAL        reduce using rule 1 (check_variable -> empty .)
    LTHAN           reduce using rule 1 (check_variable -> empty .)
    LETHAN          reduce using rule 1 (check_variable -> empty .)
    AND             reduce using rule 1 (check_variable -> empty .)
    OR              reduce using rule 1 (check_variable -> empty .)
    RBRACKET        reduce using rule 1 (check_variable -> empty .)
    RPARENTHESIS    reduce using rule 1 (check_variable -> empty .)
    COMA            reduce using rule 1 (check_variable -> empty .)
    SEMICOLON       reduce using rule 1 (check_variable -> empty .)
    RBRACE          reduce using rule 1 (check_variable -> empty .)
    LPARENTHESIS    reduce using rule 3 (check_function -> empty .)

  ! LBRACKET        [ reduce using rule 3 (check_function -> empty .) ]


state 98

    (152) llamada -> ID check_function . LPARENTHESIS llamada_param RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 148


state 99

    (136) asignacion -> ID check_variable . asignacion_opt ASSIGN push_operation asignacion_opt_2 SEMICOLON
    (137) asignacion_opt -> . LBRACKET logica RBRACKET
    (138) asignacion_opt -> . LBRACKET RBRACKET
    (139) asignacion_opt -> . empty
    (13) empty -> .

    LBRACKET        shift and go to state 150
    ASSIGN          reduce using rule 13 (empty -> .)

    asignacion_opt                 shift and go to state 149
    empty                          shift and go to state 151

state 100

    (143) condicion -> IF condicion_loop . condicion_opt
    (147) condicion_opt -> . ELSE bloque
    (148) condicion_opt -> . empty
    (13) empty -> .

    ELSE            shift and go to state 154
    VAR             reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)
    IF              reduce using rule 13 (empty -> .)
    WHILE           reduce using rule 13 (empty -> .)
    PRINT           reduce using rule 13 (empty -> .)
    READ            reduce using rule 13 (empty -> .)
    COMMENT         reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)
    RETURN          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 153
    condicion_opt                  shift and go to state 152

state 101

    (144) condicion_loop -> LPARENTHESIS . logica RPARENTHESIS bloque condicion_loop_opt
    (157) logica -> . expresion logica_loop
    (161) expresion -> . exp expresion_opt logica_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    expresion                      shift and go to state 119
    factor                         shift and go to state 113
    termino                        shift and go to state 120
    empty                          shift and go to state 117
    exp                            shift and go to state 115
    logica                         shift and go to state 155

state 102

    (116) bloque_lienzo_loop -> estatuto_lienzo bloque_lienzo_loop .

    RBRACE          reduce using rule 116 (bloque_lienzo_loop -> estatuto_lienzo bloque_lienzo_loop .)


state 103

    (151) lectura -> READ LPARENTHESIS . RPARENTHESIS

    RPARENTHESIS    shift and go to state 156


state 104

    (115) bloque_lienzo -> LBRACE bloque_lienzo_loop RBRACE .

    $end            reduce using rule 115 (bloque_lienzo -> LBRACE bloque_lienzo_loop RBRACE .)


state 105

    (150) impresion -> PRINT LPARENTHESIS . logica RPARENTHESIS SEMICOLON
    (157) logica -> . expresion logica_loop
    (161) expresion -> . exp expresion_opt logica_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    expresion                      shift and go to state 119
    factor                         shift and go to state 113
    exp                            shift and go to state 115
    termino                        shift and go to state 120
    empty                          shift and go to state 117
    logica                         shift and go to state 157

state 106

    (149) ciclo -> WHILE LPARENTHESIS . logica RPARENTHESIS bloque
    (157) logica -> . expresion logica_loop
    (161) expresion -> . exp expresion_opt logica_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    expresion                      shift and go to state 119
    factor                         shift and go to state 113
    exp                            shift and go to state 115
    termino                        shift and go to state 120
    empty                          shift and go to state 117
    logica                         shift and go to state 158

state 107

    (22) rutinas -> RUTINA FuncTypeNext rutina_opt COLON ID saveFuncName . LPARENTHESIS parametros RPARENTHESIS saveFuncParam bloque_rutina cleanFunc rutinas_loop

    LPARENTHESIS    shift and go to state 159


state 108

    (7) saveFuncName -> empty .

    LPARENTHESIS    reduce using rule 7 (saveFuncName -> empty .)


state 109

    (42) tipo_opt_prim_loop_2 -> COMA . tipo_opt_prim_loop
    (40) tipo_opt_prim_loop -> . ID add_var tipo_opt_prim_2 tipo_opt_prim_loop_2

    ID              shift and go to state 43

    tipo_opt_prim_loop             shift and go to state 160

state 110

    (40) tipo_opt_prim_loop -> ID add_var tipo_opt_prim_2 tipo_opt_prim_loop_2 .

    SEMICOLON       reduce using rule 40 (tipo_opt_prim_loop -> ID add_var tipo_opt_prim_2 tipo_opt_prim_loop_2 .)


state 111

    (43) tipo_opt_prim_loop_2 -> empty .

    SEMICOLON       reduce using rule 43 (tipo_opt_prim_loop_2 -> empty .)


state 112

    (178) factor -> factor_opt . factor_opt_2 factor_helper
    (182) factor_opt_2 -> . cte
    (183) factor_opt_2 -> . id_factor
    (85) cte -> . STRING push_string
    (86) cte -> . INT push_int
    (87) cte -> . DOUBLE push_double
    (88) cte -> . TRUE push_bool
    (89) cte -> . FALSE push_bool
    (184) id_factor -> . ID check_variable
    (185) id_factor -> . idllamada
    (186) idllamada -> . ID check_function idllamada_opt

    STRING          shift and go to state 167
    INT             shift and go to state 163
    DOUBLE          shift and go to state 168
    TRUE            shift and go to state 169
    FALSE           shift and go to state 164
    ID              shift and go to state 161

    factor_opt_2                   shift and go to state 162
    id_factor                      shift and go to state 165
    idllamada                      shift and go to state 166
    cte                            shift and go to state 170

state 113

    (173) termino -> factor . termino_loop exp_helper
    (174) termino_loop -> . TIMES push_operation termino termino_loop
    (175) termino_loop -> . DIVIDE push_operation termino termino_loop
    (176) termino_loop -> . empty
    (13) empty -> .

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    TIMES           shift and go to state 173
    DIVIDE          shift and go to state 174
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    GTHAN           reduce using rule 13 (empty -> .)
    GETHAN          reduce using rule 13 (empty -> .)
    EQUAL           reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    LTHAN           reduce using rule 13 (empty -> .)
    LETHAN          reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

  ! TIMES           [ reduce using rule 13 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 13 (empty -> .) ]

    empty                          shift and go to state 171
    termino_loop                   shift and go to state 172

state 114

    (177) factor -> LPARENTHESIS . push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (24) push_fake_bottom -> . empty
    (13) empty -> .

    LPARENTHESIS    reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    empty                          shift and go to state 175
    push_fake_bottom               shift and go to state 176

state 115

    (161) expresion -> exp . expresion_opt logica_helper
    (162) expresion_opt -> . empty
    (163) expresion_opt -> . GTHAN push_operation exp expresion_helper
    (164) expresion_opt -> . GETHAN push_operation exp expresion_helper
    (165) expresion_opt -> . EQUAL push_operation exp expresion_helper
    (166) expresion_opt -> . NOTEQUAL push_operation exp expresion_helper
    (167) expresion_opt -> . LTHAN push_operation exp expresion_helper
    (168) expresion_opt -> . LETHAN push_operation exp expresion_helper
    (13) empty -> .

    GTHAN           shift and go to state 178
    GETHAN          shift and go to state 177
    EQUAL           shift and go to state 183
    NOTEQUAL        shift and go to state 184
    LTHAN           shift and go to state 180
    LETHAN          shift and go to state 181
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    expresion_opt                  shift and go to state 179
    empty                          shift and go to state 182

state 116

    (179) factor_opt -> PLUS .

    STRING          reduce using rule 179 (factor_opt -> PLUS .)
    INT             reduce using rule 179 (factor_opt -> PLUS .)
    DOUBLE          reduce using rule 179 (factor_opt -> PLUS .)
    TRUE            reduce using rule 179 (factor_opt -> PLUS .)
    FALSE           reduce using rule 179 (factor_opt -> PLUS .)
    ID              reduce using rule 179 (factor_opt -> PLUS .)


state 117

    (181) factor_opt -> empty .

    STRING          reduce using rule 181 (factor_opt -> empty .)
    INT             reduce using rule 181 (factor_opt -> empty .)
    DOUBLE          reduce using rule 181 (factor_opt -> empty .)
    TRUE            reduce using rule 181 (factor_opt -> empty .)
    FALSE           reduce using rule 181 (factor_opt -> empty .)
    ID              reduce using rule 181 (factor_opt -> empty .)


state 118

    (45) tipo_opt_prim_2 -> LBRACKET logica . RBRACKET tipo_opt_prim_3

    RBRACKET        shift and go to state 185


state 119

    (157) logica -> expresion . logica_loop
    (158) logica_loop -> . AND push_operation logica
    (159) logica_loop -> . OR push_operation logica
    (160) logica_loop -> . empty
    (13) empty -> .

    AND             shift and go to state 186
    OR              shift and go to state 188
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 189
    logica_loop                    shift and go to state 187

state 120

    (169) exp -> termino . exp_loop
    (170) exp_loop -> . PLUS push_operation exp exp_loop
    (171) exp_loop -> . MINUS push_operation exp exp_loop
    (172) exp_loop -> . empty
    (13) empty -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    PLUS            shift and go to state 193
    MINUS           shift and go to state 190
    GTHAN           reduce using rule 13 (empty -> .)
    GETHAN          reduce using rule 13 (empty -> .)
    EQUAL           reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    LTHAN           reduce using rule 13 (empty -> .)
    LETHAN          reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

  ! PLUS            [ reduce using rule 13 (empty -> .) ]
  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    empty                          shift and go to state 192
    exp_loop                       shift and go to state 191

state 121

    (180) factor_opt -> MINUS .

    STRING          reduce using rule 180 (factor_opt -> MINUS .)
    INT             reduce using rule 180 (factor_opt -> MINUS .)
    DOUBLE          reduce using rule 180 (factor_opt -> MINUS .)
    TRUE            reduce using rule 180 (factor_opt -> MINUS .)
    FALSE           reduce using rule 180 (factor_opt -> MINUS .)
    ID              reduce using rule 180 (factor_opt -> MINUS .)


state 122

    (2) push_operation -> empty .

    LPARENTHESIS    reduce using rule 2 (push_operation -> empty .)
    PLUS            reduce using rule 2 (push_operation -> empty .)
    MINUS           reduce using rule 2 (push_operation -> empty .)
    STRING          reduce using rule 2 (push_operation -> empty .)
    INT             reduce using rule 2 (push_operation -> empty .)
    DOUBLE          reduce using rule 2 (push_operation -> empty .)
    TRUE            reduce using rule 2 (push_operation -> empty .)
    FALSE           reduce using rule 2 (push_operation -> empty .)
    ID              reduce using rule 2 (push_operation -> empty .)
    READ            reduce using rule 2 (push_operation -> empty .)
    NUEVO           reduce using rule 2 (push_operation -> empty .)
    SEMICOLON       reduce using rule 2 (push_operation -> empty .)


state 123

    (59) ini_prim -> ASSIGN push_operation . logica
    (157) logica -> . expresion logica_loop
    (161) expresion -> . exp expresion_opt logica_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    expresion                      shift and go to state 119
    factor                         shift and go to state 113
    exp                            shift and go to state 115
    termino                        shift and go to state 120
    empty                          shift and go to state 117
    logica                         shift and go to state 194

state 124

    (69) fgra_nva -> empty .

    COMA            reduce using rule 69 (fgra_nva -> empty .)
    RBRACE          reduce using rule 69 (fgra_nva -> empty .)
    SEMICOLON       reduce using rule 69 (fgra_nva -> empty .)


state 125

    (68) fgra_nva -> NUEVO . fgra_atr
    (70) fgra_atr -> . PINCEL LPARENTHESIS fgra_atr_end
    (71) fgra_atr -> . CUAD LPARENTHESIS exp COMA fgra_atr_end
    (72) fgra_atr -> . CIRC LPARENTHESIS exp COMA fgra_atr_end
    (73) fgra_atr -> . RECT LPARENTHESIS exp COMA exp COMA fgra_atr_end
    (74) fgra_atr -> . TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end

    PINCEL          shift and go to state 196
    CUAD            shift and go to state 197
    CIRC            shift and go to state 198
    RECT            shift and go to state 199
    TRIANG          shift and go to state 200

    fgra_atr                       shift and go to state 195

state 126

    (63) ini_fgra -> ASSIGN fgra_nva .

    COMA            reduce using rule 63 (ini_fgra -> ASSIGN fgra_nva .)
    SEMICOLON       reduce using rule 63 (ini_fgra -> ASSIGN fgra_nva .)


state 127

    (55) tipo_opt_fig_2 -> LBRACKET logica . RBRACKET tipo_opt_fig_3

    RBRACKET        shift and go to state 201


state 128

    (51) tipo_opt_fig -> add_var_name figura ID add_var tipo_opt_fig_2 tipo_opt_fig_loop .

    SEMICOLON       reduce using rule 51 (tipo_opt_fig -> add_var_name figura ID add_var tipo_opt_fig_2 tipo_opt_fig_loop .)


state 129

    (52) tipo_opt_fig_loop -> COMA . tipo_opt_fig
    (51) tipo_opt_fig -> . add_var_name figura ID add_var tipo_opt_fig_2 tipo_opt_fig_loop
    (47) add_var_name -> . empty
    (13) empty -> .

    PINCEL          reduce using rule 13 (empty -> .)
    CUAD            reduce using rule 13 (empty -> .)
    RECT            reduce using rule 13 (empty -> .)
    CIRC            reduce using rule 13 (empty -> .)
    TRIANG          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 16
    tipo_opt_fig                   shift and go to state 202
    add_var_name                   shift and go to state 203

state 130

    (53) tipo_opt_fig_loop -> empty .

    SEMICOLON       reduce using rule 53 (tipo_opt_fig_loop -> empty .)


state 131

    (205) accion_pincel -> accion_pincel_opt . RPARENTHESIS

    RPARENTHESIS    shift and go to state 204


state 132

    (199) accion_figura_opt_2 -> ROTATE . accion_figura_opt_2_end
    (202) accion_figura_opt_2_end -> . LPARENTHESIS expresion

    LPARENTHESIS    shift and go to state 206

    accion_figura_opt_2_end        shift and go to state 205

state 133

    (198) accion_figura_opt_2 -> MOVEA . accion_figura_opt_2_end
    (202) accion_figura_opt_2_end -> . LPARENTHESIS expresion

    LPARENTHESIS    shift and go to state 206

    accion_figura_opt_2_end        shift and go to state 207

state 134

    (192) accion -> ID POINT accion_opt . SEMICOLON

    SEMICOLON       shift and go to state 208


state 135

    (194) accion_opt -> accion_pincel .

    SEMICOLON       reduce using rule 194 (accion_opt -> accion_pincel .)


state 136

    (203) accion_figura_opt_3 -> REMOVE . LPARENTHESIS

    LPARENTHESIS    shift and go to state 209


state 137

    (201) accion_figura_opt_2 -> THICK . accion_figura_opt_2_end
    (202) accion_figura_opt_2_end -> . LPARENTHESIS expresion

    LPARENTHESIS    shift and go to state 206

    accion_figura_opt_2_end        shift and go to state 210

state 138

    (209) accion_pincel_opt -> GRAPH . LPARENTHESIS CTEFUNCION COMA exp

    LPARENTHESIS    shift and go to state 211


state 139

    (200) accion_figura_opt_2 -> GROW . accion_figura_opt_2_end
    (202) accion_figura_opt_2_end -> . LPARENTHESIS expresion

    LPARENTHESIS    shift and go to state 206

    accion_figura_opt_2_end        shift and go to state 212

state 140

    (196) accion_figura_opt -> accion_figura_opt_2 .

    RPARENTHESIS    reduce using rule 196 (accion_figura_opt -> accion_figura_opt_2 .)


state 141

    (204) accion_figura_opt_3 -> FILL . LPARENTHESIS color

    LPARENTHESIS    shift and go to state 213


state 142

    (206) accion_pincel_opt -> COLOR . LPARENTHESIS color

    LPARENTHESIS    shift and go to state 214


state 143

    (208) accion_pincel_opt -> PAINT . accion_pincel_opt_end
    (210) accion_pincel_opt_end -> . LPARENTHESIS expresion COMA expresion

    LPARENTHESIS    shift and go to state 216

    accion_pincel_opt_end          shift and go to state 215

state 144

    (197) accion_figura_opt -> accion_figura_opt_3 .

    RPARENTHESIS    reduce using rule 197 (accion_figura_opt -> accion_figura_opt_3 .)


state 145

    (207) accion_pincel_opt -> DISPLACE . accion_pincel_opt_end
    (210) accion_pincel_opt_end -> . LPARENTHESIS expresion COMA expresion

    LPARENTHESIS    shift and go to state 216

    accion_pincel_opt_end          shift and go to state 217

state 146

    (195) accion_figura -> accion_figura_opt . RPARENTHESIS

    RPARENTHESIS    shift and go to state 218


state 147

    (193) accion_opt -> accion_figura .

    SEMICOLON       reduce using rule 193 (accion_opt -> accion_figura .)


state 148

    (152) llamada -> ID check_function LPARENTHESIS . llamada_param RPARENTHESIS SEMICOLON
    (153) llamada_param -> . exp llamada_loop
    (154) llamada_param -> . empty
    (169) exp -> . termino exp_loop
    (13) empty -> .
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty

    RPARENTHESIS    reduce using rule 13 (empty -> .)
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)
    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 219
    termino                        shift and go to state 120
    empty                          shift and go to state 220
    llamada_param                  shift and go to state 221

state 149

    (136) asignacion -> ID check_variable asignacion_opt . ASSIGN push_operation asignacion_opt_2 SEMICOLON

    ASSIGN          shift and go to state 222


state 150

    (137) asignacion_opt -> LBRACKET . logica RBRACKET
    (138) asignacion_opt -> LBRACKET . RBRACKET
    (157) logica -> . expresion logica_loop
    (161) expresion -> . exp expresion_opt logica_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    RBRACKET        shift and go to state 223
    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    expresion                      shift and go to state 119
    factor                         shift and go to state 113
    exp                            shift and go to state 115
    termino                        shift and go to state 120
    empty                          shift and go to state 117
    logica                         shift and go to state 224

state 151

    (139) asignacion_opt -> empty .

    ASSIGN          reduce using rule 139 (asignacion_opt -> empty .)


state 152

    (143) condicion -> IF condicion_loop condicion_opt .

    ID              reduce using rule 143 (condicion -> IF condicion_loop condicion_opt .)
    IF              reduce using rule 143 (condicion -> IF condicion_loop condicion_opt .)
    WHILE           reduce using rule 143 (condicion -> IF condicion_loop condicion_opt .)
    PRINT           reduce using rule 143 (condicion -> IF condicion_loop condicion_opt .)
    READ            reduce using rule 143 (condicion -> IF condicion_loop condicion_opt .)
    COMMENT         reduce using rule 143 (condicion -> IF condicion_loop condicion_opt .)
    RBRACE          reduce using rule 143 (condicion -> IF condicion_loop condicion_opt .)
    RETURN          reduce using rule 143 (condicion -> IF condicion_loop condicion_opt .)
    VAR             reduce using rule 143 (condicion -> IF condicion_loop condicion_opt .)


state 153

    (148) condicion_opt -> empty .

    VAR             reduce using rule 148 (condicion_opt -> empty .)
    ID              reduce using rule 148 (condicion_opt -> empty .)
    IF              reduce using rule 148 (condicion_opt -> empty .)
    WHILE           reduce using rule 148 (condicion_opt -> empty .)
    PRINT           reduce using rule 148 (condicion_opt -> empty .)
    READ            reduce using rule 148 (condicion_opt -> empty .)
    COMMENT         reduce using rule 148 (condicion_opt -> empty .)
    RBRACE          reduce using rule 148 (condicion_opt -> empty .)
    RETURN          reduce using rule 148 (condicion_opt -> empty .)


state 154

    (147) condicion_opt -> ELSE . bloque
    (105) bloque -> . LBRACE bloque_loop RBRACE

    LBRACE          shift and go to state 225

    bloque                         shift and go to state 226

state 155

    (144) condicion_loop -> LPARENTHESIS logica . RPARENTHESIS bloque condicion_loop_opt

    RPARENTHESIS    shift and go to state 227


state 156

    (151) lectura -> READ LPARENTHESIS RPARENTHESIS .

    VAR             reduce using rule 151 (lectura -> READ LPARENTHESIS RPARENTHESIS .)
    ID              reduce using rule 151 (lectura -> READ LPARENTHESIS RPARENTHESIS .)
    IF              reduce using rule 151 (lectura -> READ LPARENTHESIS RPARENTHESIS .)
    WHILE           reduce using rule 151 (lectura -> READ LPARENTHESIS RPARENTHESIS .)
    PRINT           reduce using rule 151 (lectura -> READ LPARENTHESIS RPARENTHESIS .)
    READ            reduce using rule 151 (lectura -> READ LPARENTHESIS RPARENTHESIS .)
    COMMENT         reduce using rule 151 (lectura -> READ LPARENTHESIS RPARENTHESIS .)
    RBRACE          reduce using rule 151 (lectura -> READ LPARENTHESIS RPARENTHESIS .)
    RETURN          reduce using rule 151 (lectura -> READ LPARENTHESIS RPARENTHESIS .)
    SEMICOLON       reduce using rule 151 (lectura -> READ LPARENTHESIS RPARENTHESIS .)


state 157

    (150) impresion -> PRINT LPARENTHESIS logica . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 228


state 158

    (149) ciclo -> WHILE LPARENTHESIS logica . RPARENTHESIS bloque

    RPARENTHESIS    shift and go to state 229


state 159

    (22) rutinas -> RUTINA FuncTypeNext rutina_opt COLON ID saveFuncName LPARENTHESIS . parametros RPARENTHESIS saveFuncParam bloque_rutina cleanFunc rutinas_loop
    (94) parametros -> . param_list parametros_loop
    (95) parametros -> . empty
    (98) param_list -> . paramTypeNext tipo_param COLON ID paramID param_list_loop
    (99) param_list -> . empty
    (13) empty -> .
    (33) paramTypeNext -> . empty

    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    TYPEINT         reduce using rule 13 (empty -> .)
    TYPEDOUBLE      reduce using rule 13 (empty -> .)
    TYPEBOOL        reduce using rule 13 (empty -> .)
    TYPESTRING      reduce using rule 13 (empty -> .)
    PINCEL          reduce using rule 13 (empty -> .)
    CUAD            reduce using rule 13 (empty -> .)
    RECT            reduce using rule 13 (empty -> .)
    CIRC            reduce using rule 13 (empty -> .)
    TRIANG          reduce using rule 13 (empty -> .)

    param_list                     shift and go to state 230
    parametros                     shift and go to state 231
    paramTypeNext                  shift and go to state 232
    empty                          shift and go to state 233

state 160

    (42) tipo_opt_prim_loop_2 -> COMA tipo_opt_prim_loop .

    SEMICOLON       reduce using rule 42 (tipo_opt_prim_loop_2 -> COMA tipo_opt_prim_loop .)


state 161

    (184) id_factor -> ID . check_variable
    (186) idllamada -> ID . check_function idllamada_opt
    (1) check_variable -> . empty
    (3) check_function -> . empty
    (13) empty -> .

    TIMES           reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    GTHAN           reduce using rule 13 (empty -> .)
    GETHAN          reduce using rule 13 (empty -> .)
    EQUAL           reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    LTHAN           reduce using rule 13 (empty -> .)
    LETHAN          reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)
    LPARENTHESIS    reduce using rule 13 (empty -> .)
    LBRACKET        reduce using rule 13 (empty -> .)

    empty                          shift and go to state 97
    check_function                 shift and go to state 234
    check_variable                 shift and go to state 235

state 162

    (178) factor -> factor_opt factor_opt_2 . factor_helper
    (17) factor_helper -> . empty
    (13) empty -> .

    TIMES           reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    GTHAN           reduce using rule 13 (empty -> .)
    GETHAN          reduce using rule 13 (empty -> .)
    EQUAL           reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    LTHAN           reduce using rule 13 (empty -> .)
    LETHAN          reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 236
    factor_helper                  shift and go to state 237

state 163

    (86) cte -> INT . push_int
    (91) push_int -> . empty
    (13) empty -> .

    TIMES           reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    GTHAN           reduce using rule 13 (empty -> .)
    GETHAN          reduce using rule 13 (empty -> .)
    EQUAL           reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    LTHAN           reduce using rule 13 (empty -> .)
    LETHAN          reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 238
    push_int                       shift and go to state 239

state 164

    (89) cte -> FALSE . push_bool
    (93) push_bool -> . empty
    (13) empty -> .

    TIMES           reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    GTHAN           reduce using rule 13 (empty -> .)
    GETHAN          reduce using rule 13 (empty -> .)
    EQUAL           reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    LTHAN           reduce using rule 13 (empty -> .)
    LETHAN          reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 240
    push_bool                      shift and go to state 241

state 165

    (183) factor_opt_2 -> id_factor .

    TIMES           reduce using rule 183 (factor_opt_2 -> id_factor .)
    DIVIDE          reduce using rule 183 (factor_opt_2 -> id_factor .)
    PLUS            reduce using rule 183 (factor_opt_2 -> id_factor .)
    MINUS           reduce using rule 183 (factor_opt_2 -> id_factor .)
    GTHAN           reduce using rule 183 (factor_opt_2 -> id_factor .)
    GETHAN          reduce using rule 183 (factor_opt_2 -> id_factor .)
    EQUAL           reduce using rule 183 (factor_opt_2 -> id_factor .)
    NOTEQUAL        reduce using rule 183 (factor_opt_2 -> id_factor .)
    LTHAN           reduce using rule 183 (factor_opt_2 -> id_factor .)
    LETHAN          reduce using rule 183 (factor_opt_2 -> id_factor .)
    AND             reduce using rule 183 (factor_opt_2 -> id_factor .)
    OR              reduce using rule 183 (factor_opt_2 -> id_factor .)
    RBRACKET        reduce using rule 183 (factor_opt_2 -> id_factor .)
    RPARENTHESIS    reduce using rule 183 (factor_opt_2 -> id_factor .)
    COMA            reduce using rule 183 (factor_opt_2 -> id_factor .)
    SEMICOLON       reduce using rule 183 (factor_opt_2 -> id_factor .)
    RBRACE          reduce using rule 183 (factor_opt_2 -> id_factor .)


state 166

    (185) id_factor -> idllamada .

    TIMES           reduce using rule 185 (id_factor -> idllamada .)
    DIVIDE          reduce using rule 185 (id_factor -> idllamada .)
    PLUS            reduce using rule 185 (id_factor -> idllamada .)
    MINUS           reduce using rule 185 (id_factor -> idllamada .)
    GTHAN           reduce using rule 185 (id_factor -> idllamada .)
    GETHAN          reduce using rule 185 (id_factor -> idllamada .)
    EQUAL           reduce using rule 185 (id_factor -> idllamada .)
    NOTEQUAL        reduce using rule 185 (id_factor -> idllamada .)
    LTHAN           reduce using rule 185 (id_factor -> idllamada .)
    LETHAN          reduce using rule 185 (id_factor -> idllamada .)
    AND             reduce using rule 185 (id_factor -> idllamada .)
    OR              reduce using rule 185 (id_factor -> idllamada .)
    RBRACKET        reduce using rule 185 (id_factor -> idllamada .)
    RPARENTHESIS    reduce using rule 185 (id_factor -> idllamada .)
    COMA            reduce using rule 185 (id_factor -> idllamada .)
    SEMICOLON       reduce using rule 185 (id_factor -> idllamada .)
    RBRACE          reduce using rule 185 (id_factor -> idllamada .)


state 167

    (85) cte -> STRING . push_string
    (90) push_string -> . empty
    (13) empty -> .

    TIMES           reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    GTHAN           reduce using rule 13 (empty -> .)
    GETHAN          reduce using rule 13 (empty -> .)
    EQUAL           reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    LTHAN           reduce using rule 13 (empty -> .)
    LETHAN          reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 242
    push_string                    shift and go to state 243

state 168

    (87) cte -> DOUBLE . push_double
    (92) push_double -> . empty
    (13) empty -> .

    TIMES           reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    GTHAN           reduce using rule 13 (empty -> .)
    GETHAN          reduce using rule 13 (empty -> .)
    EQUAL           reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    LTHAN           reduce using rule 13 (empty -> .)
    LETHAN          reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 244
    push_double                    shift and go to state 245

state 169

    (88) cte -> TRUE . push_bool
    (93) push_bool -> . empty
    (13) empty -> .

    TIMES           reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    GTHAN           reduce using rule 13 (empty -> .)
    GETHAN          reduce using rule 13 (empty -> .)
    EQUAL           reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    LTHAN           reduce using rule 13 (empty -> .)
    LETHAN          reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 240
    push_bool                      shift and go to state 246

state 170

    (182) factor_opt_2 -> cte .

    TIMES           reduce using rule 182 (factor_opt_2 -> cte .)
    DIVIDE          reduce using rule 182 (factor_opt_2 -> cte .)
    PLUS            reduce using rule 182 (factor_opt_2 -> cte .)
    MINUS           reduce using rule 182 (factor_opt_2 -> cte .)
    GTHAN           reduce using rule 182 (factor_opt_2 -> cte .)
    GETHAN          reduce using rule 182 (factor_opt_2 -> cte .)
    EQUAL           reduce using rule 182 (factor_opt_2 -> cte .)
    NOTEQUAL        reduce using rule 182 (factor_opt_2 -> cte .)
    LTHAN           reduce using rule 182 (factor_opt_2 -> cte .)
    LETHAN          reduce using rule 182 (factor_opt_2 -> cte .)
    AND             reduce using rule 182 (factor_opt_2 -> cte .)
    OR              reduce using rule 182 (factor_opt_2 -> cte .)
    RBRACKET        reduce using rule 182 (factor_opt_2 -> cte .)
    RPARENTHESIS    reduce using rule 182 (factor_opt_2 -> cte .)
    COMA            reduce using rule 182 (factor_opt_2 -> cte .)
    SEMICOLON       reduce using rule 182 (factor_opt_2 -> cte .)
    RBRACE          reduce using rule 182 (factor_opt_2 -> cte .)


state 171

    (176) termino_loop -> empty .

    TIMES           reduce using rule 176 (termino_loop -> empty .)
    DIVIDE          reduce using rule 176 (termino_loop -> empty .)
    PLUS            reduce using rule 176 (termino_loop -> empty .)
    MINUS           reduce using rule 176 (termino_loop -> empty .)
    GTHAN           reduce using rule 176 (termino_loop -> empty .)
    GETHAN          reduce using rule 176 (termino_loop -> empty .)
    EQUAL           reduce using rule 176 (termino_loop -> empty .)
    NOTEQUAL        reduce using rule 176 (termino_loop -> empty .)
    LTHAN           reduce using rule 176 (termino_loop -> empty .)
    LETHAN          reduce using rule 176 (termino_loop -> empty .)
    AND             reduce using rule 176 (termino_loop -> empty .)
    OR              reduce using rule 176 (termino_loop -> empty .)
    RBRACKET        reduce using rule 176 (termino_loop -> empty .)
    RPARENTHESIS    reduce using rule 176 (termino_loop -> empty .)
    COMA            reduce using rule 176 (termino_loop -> empty .)
    SEMICOLON       reduce using rule 176 (termino_loop -> empty .)
    RBRACE          reduce using rule 176 (termino_loop -> empty .)


state 172

    (173) termino -> factor termino_loop . exp_helper
    (9) exp_helper -> . empty
    (13) empty -> .

    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    GTHAN           reduce using rule 13 (empty -> .)
    GETHAN          reduce using rule 13 (empty -> .)
    EQUAL           reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    LTHAN           reduce using rule 13 (empty -> .)
    LETHAN          reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    TIMES           reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 247
    exp_helper                     shift and go to state 248

state 173

    (174) termino_loop -> TIMES . push_operation termino termino_loop
    (2) push_operation -> . empty
    (13) empty -> .

    LPARENTHESIS    reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    empty                          shift and go to state 122
    push_operation                 shift and go to state 249

state 174

    (175) termino_loop -> DIVIDE . push_operation termino termino_loop
    (2) push_operation -> . empty
    (13) empty -> .

    LPARENTHESIS    reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    empty                          shift and go to state 122
    push_operation                 shift and go to state 250

state 175

    (24) push_fake_bottom -> empty .

    LPARENTHESIS    reduce using rule 24 (push_fake_bottom -> empty .)
    PLUS            reduce using rule 24 (push_fake_bottom -> empty .)
    MINUS           reduce using rule 24 (push_fake_bottom -> empty .)
    STRING          reduce using rule 24 (push_fake_bottom -> empty .)
    INT             reduce using rule 24 (push_fake_bottom -> empty .)
    DOUBLE          reduce using rule 24 (push_fake_bottom -> empty .)
    TRUE            reduce using rule 24 (push_fake_bottom -> empty .)
    FALSE           reduce using rule 24 (push_fake_bottom -> empty .)
    ID              reduce using rule 24 (push_fake_bottom -> empty .)


state 176

    (177) factor -> LPARENTHESIS push_fake_bottom . expresion RPARENTHESIS pop_fake_bottom factor_helper
    (161) expresion -> . exp expresion_opt logica_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    expresion                      shift and go to state 251
    factor                         shift and go to state 113
    exp                            shift and go to state 115
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 177

    (164) expresion_opt -> GETHAN . push_operation exp expresion_helper
    (2) push_operation -> . empty
    (13) empty -> .

    LPARENTHESIS    reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    empty                          shift and go to state 122
    push_operation                 shift and go to state 252

state 178

    (163) expresion_opt -> GTHAN . push_operation exp expresion_helper
    (2) push_operation -> . empty
    (13) empty -> .

    LPARENTHESIS    reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    empty                          shift and go to state 122
    push_operation                 shift and go to state 253

state 179

    (161) expresion -> exp expresion_opt . logica_helper
    (4) logica_helper -> . empty
    (13) empty -> .

    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 254
    logica_helper                  shift and go to state 255

state 180

    (167) expresion_opt -> LTHAN . push_operation exp expresion_helper
    (2) push_operation -> . empty
    (13) empty -> .

    LPARENTHESIS    reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    empty                          shift and go to state 122
    push_operation                 shift and go to state 256

state 181

    (168) expresion_opt -> LETHAN . push_operation exp expresion_helper
    (2) push_operation -> . empty
    (13) empty -> .

    LPARENTHESIS    reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    empty                          shift and go to state 122
    push_operation                 shift and go to state 257

state 182

    (162) expresion_opt -> empty .

    AND             reduce using rule 162 (expresion_opt -> empty .)
    OR              reduce using rule 162 (expresion_opt -> empty .)
    RBRACKET        reduce using rule 162 (expresion_opt -> empty .)
    RPARENTHESIS    reduce using rule 162 (expresion_opt -> empty .)
    COMA            reduce using rule 162 (expresion_opt -> empty .)
    SEMICOLON       reduce using rule 162 (expresion_opt -> empty .)
    RBRACE          reduce using rule 162 (expresion_opt -> empty .)


state 183

    (165) expresion_opt -> EQUAL . push_operation exp expresion_helper
    (2) push_operation -> . empty
    (13) empty -> .

    LPARENTHESIS    reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    empty                          shift and go to state 122
    push_operation                 shift and go to state 258

state 184

    (166) expresion_opt -> NOTEQUAL . push_operation exp expresion_helper
    (2) push_operation -> . empty
    (13) empty -> .

    LPARENTHESIS    reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    empty                          shift and go to state 122
    push_operation                 shift and go to state 259

state 185

    (45) tipo_opt_prim_2 -> LBRACKET logica RBRACKET . tipo_opt_prim_3
    (48) tipo_opt_prim_3 -> . ini_prim_v
    (49) tipo_opt_prim_3 -> . empty
    (60) ini_prim_v -> . ASSIGN LBRACE logica ini_prim_v_loop RBRACE
    (13) empty -> .

    ASSIGN          shift and go to state 261
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)

    tipo_opt_prim_3                shift and go to state 260
    empty                          shift and go to state 262
    ini_prim_v                     shift and go to state 263

state 186

    (158) logica_loop -> AND . push_operation logica
    (2) push_operation -> . empty
    (13) empty -> .

    LPARENTHESIS    reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    empty                          shift and go to state 122
    push_operation                 shift and go to state 264

state 187

    (157) logica -> expresion logica_loop .

    RBRACKET        reduce using rule 157 (logica -> expresion logica_loop .)
    RPARENTHESIS    reduce using rule 157 (logica -> expresion logica_loop .)
    COMA            reduce using rule 157 (logica -> expresion logica_loop .)
    SEMICOLON       reduce using rule 157 (logica -> expresion logica_loop .)
    RBRACE          reduce using rule 157 (logica -> expresion logica_loop .)


state 188

    (159) logica_loop -> OR . push_operation logica
    (2) push_operation -> . empty
    (13) empty -> .

    LPARENTHESIS    reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    empty                          shift and go to state 122
    push_operation                 shift and go to state 265

state 189

    (160) logica_loop -> empty .

    RBRACKET        reduce using rule 160 (logica_loop -> empty .)
    RPARENTHESIS    reduce using rule 160 (logica_loop -> empty .)
    COMA            reduce using rule 160 (logica_loop -> empty .)
    SEMICOLON       reduce using rule 160 (logica_loop -> empty .)
    RBRACE          reduce using rule 160 (logica_loop -> empty .)


state 190

    (171) exp_loop -> MINUS . push_operation exp exp_loop
    (2) push_operation -> . empty
    (13) empty -> .

    LPARENTHESIS    reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    empty                          shift and go to state 122
    push_operation                 shift and go to state 266

state 191

    (169) exp -> termino exp_loop .

    GTHAN           reduce using rule 169 (exp -> termino exp_loop .)
    GETHAN          reduce using rule 169 (exp -> termino exp_loop .)
    EQUAL           reduce using rule 169 (exp -> termino exp_loop .)
    NOTEQUAL        reduce using rule 169 (exp -> termino exp_loop .)
    LTHAN           reduce using rule 169 (exp -> termino exp_loop .)
    LETHAN          reduce using rule 169 (exp -> termino exp_loop .)
    AND             reduce using rule 169 (exp -> termino exp_loop .)
    OR              reduce using rule 169 (exp -> termino exp_loop .)
    RBRACKET        reduce using rule 169 (exp -> termino exp_loop .)
    COMA            reduce using rule 169 (exp -> termino exp_loop .)
    PLUS            reduce using rule 169 (exp -> termino exp_loop .)
    MINUS           reduce using rule 169 (exp -> termino exp_loop .)
    RPARENTHESIS    reduce using rule 169 (exp -> termino exp_loop .)
    SEMICOLON       reduce using rule 169 (exp -> termino exp_loop .)
    RBRACE          reduce using rule 169 (exp -> termino exp_loop .)


state 192

    (172) exp_loop -> empty .

    PLUS            reduce using rule 172 (exp_loop -> empty .)
    MINUS           reduce using rule 172 (exp_loop -> empty .)
    GTHAN           reduce using rule 172 (exp_loop -> empty .)
    GETHAN          reduce using rule 172 (exp_loop -> empty .)
    EQUAL           reduce using rule 172 (exp_loop -> empty .)
    NOTEQUAL        reduce using rule 172 (exp_loop -> empty .)
    LTHAN           reduce using rule 172 (exp_loop -> empty .)
    LETHAN          reduce using rule 172 (exp_loop -> empty .)
    AND             reduce using rule 172 (exp_loop -> empty .)
    OR              reduce using rule 172 (exp_loop -> empty .)
    RBRACKET        reduce using rule 172 (exp_loop -> empty .)
    RPARENTHESIS    reduce using rule 172 (exp_loop -> empty .)
    COMA            reduce using rule 172 (exp_loop -> empty .)
    SEMICOLON       reduce using rule 172 (exp_loop -> empty .)
    RBRACE          reduce using rule 172 (exp_loop -> empty .)


state 193

    (170) exp_loop -> PLUS . push_operation exp exp_loop
    (2) push_operation -> . empty
    (13) empty -> .

    LPARENTHESIS    reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    empty                          shift and go to state 122
    push_operation                 shift and go to state 267

state 194

    (59) ini_prim -> ASSIGN push_operation logica .

    COMA            reduce using rule 59 (ini_prim -> ASSIGN push_operation logica .)
    SEMICOLON       reduce using rule 59 (ini_prim -> ASSIGN push_operation logica .)


state 195

    (68) fgra_nva -> NUEVO fgra_atr .

    COMA            reduce using rule 68 (fgra_nva -> NUEVO fgra_atr .)
    RBRACE          reduce using rule 68 (fgra_nva -> NUEVO fgra_atr .)
    SEMICOLON       reduce using rule 68 (fgra_nva -> NUEVO fgra_atr .)


state 196

    (70) fgra_atr -> PINCEL . LPARENTHESIS fgra_atr_end

    LPARENTHESIS    shift and go to state 268


state 197

    (71) fgra_atr -> CUAD . LPARENTHESIS exp COMA fgra_atr_end

    LPARENTHESIS    shift and go to state 269


state 198

    (72) fgra_atr -> CIRC . LPARENTHESIS exp COMA fgra_atr_end

    LPARENTHESIS    shift and go to state 270


state 199

    (73) fgra_atr -> RECT . LPARENTHESIS exp COMA exp COMA fgra_atr_end

    LPARENTHESIS    shift and go to state 271


state 200

    (74) fgra_atr -> TRIANG . LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end

    LPARENTHESIS    shift and go to state 272


state 201

    (55) tipo_opt_fig_2 -> LBRACKET logica RBRACKET . tipo_opt_fig_3
    (57) tipo_opt_fig_3 -> . ini_fgra_v
    (58) tipo_opt_fig_3 -> . empty
    (64) ini_fgra_v -> . ASSIGN LBRACE fgra_nva ini_fgras_v_loop RBRACE
    (65) ini_fgra_v -> . empty
    (13) empty -> .

    ASSIGN          shift and go to state 273
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)

    tipo_opt_fig_3                 shift and go to state 274
    ini_fgra_v                     shift and go to state 275
    empty                          shift and go to state 276

state 202

    (52) tipo_opt_fig_loop -> COMA tipo_opt_fig .

    SEMICOLON       reduce using rule 52 (tipo_opt_fig_loop -> COMA tipo_opt_fig .)


state 203

    (51) tipo_opt_fig -> add_var_name . figura ID add_var tipo_opt_fig_2 tipo_opt_fig_loop
    (80) figura -> . PINCEL saveType
    (81) figura -> . CUAD saveType
    (82) figura -> . RECT saveType
    (83) figura -> . CIRC saveType
    (84) figura -> . TRIANG saveType

    PINCEL          shift and go to state 24
    CUAD            shift and go to state 30
    RECT            shift and go to state 28
    CIRC            shift and go to state 31
    TRIANG          shift and go to state 32

    figura                         shift and go to state 25

state 204

    (205) accion_pincel -> accion_pincel_opt RPARENTHESIS .

    SEMICOLON       reduce using rule 205 (accion_pincel -> accion_pincel_opt RPARENTHESIS .)


state 205

    (199) accion_figura_opt_2 -> ROTATE accion_figura_opt_2_end .

    RPARENTHESIS    reduce using rule 199 (accion_figura_opt_2 -> ROTATE accion_figura_opt_2_end .)


state 206

    (202) accion_figura_opt_2_end -> LPARENTHESIS . expresion
    (161) expresion -> . exp expresion_opt logica_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    expresion                      shift and go to state 277
    factor                         shift and go to state 113
    exp                            shift and go to state 115
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 207

    (198) accion_figura_opt_2 -> MOVEA accion_figura_opt_2_end .

    RPARENTHESIS    reduce using rule 198 (accion_figura_opt_2 -> MOVEA accion_figura_opt_2_end .)


state 208

    (192) accion -> ID POINT accion_opt SEMICOLON .

    ID              reduce using rule 192 (accion -> ID POINT accion_opt SEMICOLON .)
    IF              reduce using rule 192 (accion -> ID POINT accion_opt SEMICOLON .)
    WHILE           reduce using rule 192 (accion -> ID POINT accion_opt SEMICOLON .)
    PRINT           reduce using rule 192 (accion -> ID POINT accion_opt SEMICOLON .)
    READ            reduce using rule 192 (accion -> ID POINT accion_opt SEMICOLON .)
    COMMENT         reduce using rule 192 (accion -> ID POINT accion_opt SEMICOLON .)
    RBRACE          reduce using rule 192 (accion -> ID POINT accion_opt SEMICOLON .)
    RETURN          reduce using rule 192 (accion -> ID POINT accion_opt SEMICOLON .)
    VAR             reduce using rule 192 (accion -> ID POINT accion_opt SEMICOLON .)


state 209

    (203) accion_figura_opt_3 -> REMOVE LPARENTHESIS .

    RPARENTHESIS    reduce using rule 203 (accion_figura_opt_3 -> REMOVE LPARENTHESIS .)


state 210

    (201) accion_figura_opt_2 -> THICK accion_figura_opt_2_end .

    RPARENTHESIS    reduce using rule 201 (accion_figura_opt_2 -> THICK accion_figura_opt_2_end .)


state 211

    (209) accion_pincel_opt -> GRAPH LPARENTHESIS . CTEFUNCION COMA exp

    CTEFUNCION      shift and go to state 278


state 212

    (200) accion_figura_opt_2 -> GROW accion_figura_opt_2_end .

    RPARENTHESIS    reduce using rule 200 (accion_figura_opt_2 -> GROW accion_figura_opt_2_end .)


state 213

    (204) accion_figura_opt_3 -> FILL LPARENTHESIS . color
    (211) color -> . CTECOLOR
    (212) color -> . CTEHEXCOLOR

    CTECOLOR        shift and go to state 280
    CTEHEXCOLOR     shift and go to state 279

    color                          shift and go to state 281

state 214

    (206) accion_pincel_opt -> COLOR LPARENTHESIS . color
    (211) color -> . CTECOLOR
    (212) color -> . CTEHEXCOLOR

    CTECOLOR        shift and go to state 280
    CTEHEXCOLOR     shift and go to state 279

    color                          shift and go to state 282

state 215

    (208) accion_pincel_opt -> PAINT accion_pincel_opt_end .

    RPARENTHESIS    reduce using rule 208 (accion_pincel_opt -> PAINT accion_pincel_opt_end .)


state 216

    (210) accion_pincel_opt_end -> LPARENTHESIS . expresion COMA expresion
    (161) expresion -> . exp expresion_opt logica_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    expresion                      shift and go to state 283
    factor                         shift and go to state 113
    exp                            shift and go to state 115
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 217

    (207) accion_pincel_opt -> DISPLACE accion_pincel_opt_end .

    RPARENTHESIS    reduce using rule 207 (accion_pincel_opt -> DISPLACE accion_pincel_opt_end .)


state 218

    (195) accion_figura -> accion_figura_opt RPARENTHESIS .

    SEMICOLON       reduce using rule 195 (accion_figura -> accion_figura_opt RPARENTHESIS .)


state 219

    (153) llamada_param -> exp . llamada_loop
    (155) llamada_loop -> . COMA exp llamada_loop
    (156) llamada_loop -> . empty
    (13) empty -> .

    COMA            shift and go to state 286
    RPARENTHESIS    reduce using rule 13 (empty -> .)

    llamada_loop                   shift and go to state 284
    empty                          shift and go to state 285

state 220

    (154) llamada_param -> empty .
    (181) factor_opt -> empty .

    RPARENTHESIS    reduce using rule 154 (llamada_param -> empty .)
    STRING          reduce using rule 181 (factor_opt -> empty .)
    INT             reduce using rule 181 (factor_opt -> empty .)
    DOUBLE          reduce using rule 181 (factor_opt -> empty .)
    TRUE            reduce using rule 181 (factor_opt -> empty .)
    FALSE           reduce using rule 181 (factor_opt -> empty .)
    ID              reduce using rule 181 (factor_opt -> empty .)


state 221

    (152) llamada -> ID check_function LPARENTHESIS llamada_param . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 287


state 222

    (136) asignacion -> ID check_variable asignacion_opt ASSIGN . push_operation asignacion_opt_2 SEMICOLON
    (2) push_operation -> . empty
    (13) empty -> .

    READ            reduce using rule 13 (empty -> .)
    NUEVO           reduce using rule 13 (empty -> .)
    LPARENTHESIS    reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    empty                          shift and go to state 122
    push_operation                 shift and go to state 288

state 223

    (138) asignacion_opt -> LBRACKET RBRACKET .

    ASSIGN          reduce using rule 138 (asignacion_opt -> LBRACKET RBRACKET .)


state 224

    (137) asignacion_opt -> LBRACKET logica . RBRACKET

    RBRACKET        shift and go to state 289


state 225

    (105) bloque -> LBRACE . bloque_loop RBRACE
    (106) bloque_loop -> . estatuto bloque_loop
    (107) bloque_loop -> . empty
    (118) estatuto -> . asignacion
    (119) estatuto -> . condicion
    (120) estatuto -> . ciclo
    (121) estatuto -> . impresion
    (122) estatuto -> . lectura
    (123) estatuto -> . accion
    (124) estatuto -> . llamada
    (125) estatuto -> . comentario
    (13) empty -> .
    (136) asignacion -> . ID check_variable asignacion_opt ASSIGN push_operation asignacion_opt_2 SEMICOLON
    (143) condicion -> . IF condicion_loop condicion_opt
    (149) ciclo -> . WHILE LPARENTHESIS logica RPARENTHESIS bloque
    (150) impresion -> . PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON
    (151) lectura -> . READ LPARENTHESIS RPARENTHESIS
    (192) accion -> . ID POINT accion_opt SEMICOLON
    (152) llamada -> . ID check_function LPARENTHESIS llamada_param RPARENTHESIS SEMICOLON
    (135) comentario -> . COMMENT

    RBRACE          reduce using rule 13 (empty -> .)
    ID              shift and go to state 70
    IF              shift and go to state 71
    WHILE           shift and go to state 84
    PRINT           shift and go to state 83
    READ            shift and go to state 75
    COMMENT         shift and go to state 80

    llamada                        shift and go to state 290
    ciclo                          shift and go to state 291
    lectura                        shift and go to state 293
    condicion                      shift and go to state 294
    empty                          shift and go to state 292
    accion                         shift and go to state 295
    comentario                     shift and go to state 296
    bloque_loop                    shift and go to state 297
    impresion                      shift and go to state 298
    asignacion                     shift and go to state 299
    estatuto                       shift and go to state 300

state 226

    (147) condicion_opt -> ELSE bloque .

    VAR             reduce using rule 147 (condicion_opt -> ELSE bloque .)
    ID              reduce using rule 147 (condicion_opt -> ELSE bloque .)
    IF              reduce using rule 147 (condicion_opt -> ELSE bloque .)
    WHILE           reduce using rule 147 (condicion_opt -> ELSE bloque .)
    PRINT           reduce using rule 147 (condicion_opt -> ELSE bloque .)
    READ            reduce using rule 147 (condicion_opt -> ELSE bloque .)
    COMMENT         reduce using rule 147 (condicion_opt -> ELSE bloque .)
    RBRACE          reduce using rule 147 (condicion_opt -> ELSE bloque .)
    RETURN          reduce using rule 147 (condicion_opt -> ELSE bloque .)


state 227

    (144) condicion_loop -> LPARENTHESIS logica RPARENTHESIS . bloque condicion_loop_opt
    (105) bloque -> . LBRACE bloque_loop RBRACE

    LBRACE          shift and go to state 225

    bloque                         shift and go to state 301

state 228

    (150) impresion -> PRINT LPARENTHESIS logica RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 302


state 229

    (149) ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS . bloque
    (105) bloque -> . LBRACE bloque_loop RBRACE

    LBRACE          shift and go to state 225

    bloque                         shift and go to state 303

state 230

    (94) parametros -> param_list . parametros_loop
    (96) parametros_loop -> . COMA parametros
    (97) parametros_loop -> . empty
    (13) empty -> .

    COMA            shift and go to state 305
    RPARENTHESIS    reduce using rule 13 (empty -> .)

    empty                          shift and go to state 304
    parametros_loop                shift and go to state 306

state 231

    (22) rutinas -> RUTINA FuncTypeNext rutina_opt COLON ID saveFuncName LPARENTHESIS parametros . RPARENTHESIS saveFuncParam bloque_rutina cleanFunc rutinas_loop

    RPARENTHESIS    shift and go to state 307


state 232

    (98) param_list -> paramTypeNext . tipo_param COLON ID paramID param_list_loop
    (102) tipo_param -> . primitivo
    (103) tipo_param -> . figura
    (76) primitivo -> . TYPEINT saveType
    (77) primitivo -> . TYPEDOUBLE saveType
    (78) primitivo -> . TYPEBOOL saveType
    (79) primitivo -> . TYPESTRING saveType
    (80) figura -> . PINCEL saveType
    (81) figura -> . CUAD saveType
    (82) figura -> . RECT saveType
    (83) figura -> . CIRC saveType
    (84) figura -> . TRIANG saveType

    TYPEINT         shift and go to state 26
    TYPEDOUBLE      shift and go to state 27
    TYPEBOOL        shift and go to state 33
    TYPESTRING      shift and go to state 29
    PINCEL          shift and go to state 24
    CUAD            shift and go to state 30
    RECT            shift and go to state 28
    CIRC            shift and go to state 31
    TRIANG          shift and go to state 32

    figura                         shift and go to state 308
    primitivo                      shift and go to state 310
    tipo_param                     shift and go to state 309

state 233

    (95) parametros -> empty .
    (99) param_list -> empty .
    (33) paramTypeNext -> empty .

  ! reduce/reduce conflict for RPARENTHESIS resolved using rule 95 (parametros -> empty .)
    RPARENTHESIS    reduce using rule 95 (parametros -> empty .)
    COMA            reduce using rule 99 (param_list -> empty .)
    TYPEINT         reduce using rule 33 (paramTypeNext -> empty .)
    TYPEDOUBLE      reduce using rule 33 (paramTypeNext -> empty .)
    TYPEBOOL        reduce using rule 33 (paramTypeNext -> empty .)
    TYPESTRING      reduce using rule 33 (paramTypeNext -> empty .)
    PINCEL          reduce using rule 33 (paramTypeNext -> empty .)
    CUAD            reduce using rule 33 (paramTypeNext -> empty .)
    RECT            reduce using rule 33 (paramTypeNext -> empty .)
    CIRC            reduce using rule 33 (paramTypeNext -> empty .)
    TRIANG          reduce using rule 33 (paramTypeNext -> empty .)

  ! RPARENTHESIS    [ reduce using rule 99 (param_list -> empty .) ]


state 234

    (186) idllamada -> ID check_function . idllamada_opt
    (187) idllamada_opt -> . LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS
    (188) idllamada_opt -> . LPARENTHESIS idllamada_opt_loop RPARENTHESIS
    (189) idllamada_opt -> . LBRACKET expresion RBRACKET

    LPARENTHESIS    shift and go to state 313
    LBRACKET        shift and go to state 311

    idllamada_opt                  shift and go to state 312

state 235

    (184) id_factor -> ID check_variable .

    TIMES           reduce using rule 184 (id_factor -> ID check_variable .)
    DIVIDE          reduce using rule 184 (id_factor -> ID check_variable .)
    PLUS            reduce using rule 184 (id_factor -> ID check_variable .)
    MINUS           reduce using rule 184 (id_factor -> ID check_variable .)
    GTHAN           reduce using rule 184 (id_factor -> ID check_variable .)
    GETHAN          reduce using rule 184 (id_factor -> ID check_variable .)
    EQUAL           reduce using rule 184 (id_factor -> ID check_variable .)
    NOTEQUAL        reduce using rule 184 (id_factor -> ID check_variable .)
    LTHAN           reduce using rule 184 (id_factor -> ID check_variable .)
    LETHAN          reduce using rule 184 (id_factor -> ID check_variable .)
    AND             reduce using rule 184 (id_factor -> ID check_variable .)
    OR              reduce using rule 184 (id_factor -> ID check_variable .)
    RBRACKET        reduce using rule 184 (id_factor -> ID check_variable .)
    RPARENTHESIS    reduce using rule 184 (id_factor -> ID check_variable .)
    COMA            reduce using rule 184 (id_factor -> ID check_variable .)
    SEMICOLON       reduce using rule 184 (id_factor -> ID check_variable .)
    RBRACE          reduce using rule 184 (id_factor -> ID check_variable .)


state 236

    (17) factor_helper -> empty .

    TIMES           reduce using rule 17 (factor_helper -> empty .)
    DIVIDE          reduce using rule 17 (factor_helper -> empty .)
    PLUS            reduce using rule 17 (factor_helper -> empty .)
    MINUS           reduce using rule 17 (factor_helper -> empty .)
    GTHAN           reduce using rule 17 (factor_helper -> empty .)
    GETHAN          reduce using rule 17 (factor_helper -> empty .)
    EQUAL           reduce using rule 17 (factor_helper -> empty .)
    NOTEQUAL        reduce using rule 17 (factor_helper -> empty .)
    LTHAN           reduce using rule 17 (factor_helper -> empty .)
    LETHAN          reduce using rule 17 (factor_helper -> empty .)
    AND             reduce using rule 17 (factor_helper -> empty .)
    OR              reduce using rule 17 (factor_helper -> empty .)
    RBRACKET        reduce using rule 17 (factor_helper -> empty .)
    RPARENTHESIS    reduce using rule 17 (factor_helper -> empty .)
    COMA            reduce using rule 17 (factor_helper -> empty .)
    SEMICOLON       reduce using rule 17 (factor_helper -> empty .)
    RBRACE          reduce using rule 17 (factor_helper -> empty .)


state 237

    (178) factor -> factor_opt factor_opt_2 factor_helper .

    TIMES           reduce using rule 178 (factor -> factor_opt factor_opt_2 factor_helper .)
    DIVIDE          reduce using rule 178 (factor -> factor_opt factor_opt_2 factor_helper .)
    PLUS            reduce using rule 178 (factor -> factor_opt factor_opt_2 factor_helper .)
    MINUS           reduce using rule 178 (factor -> factor_opt factor_opt_2 factor_helper .)
    GTHAN           reduce using rule 178 (factor -> factor_opt factor_opt_2 factor_helper .)
    GETHAN          reduce using rule 178 (factor -> factor_opt factor_opt_2 factor_helper .)
    EQUAL           reduce using rule 178 (factor -> factor_opt factor_opt_2 factor_helper .)
    NOTEQUAL        reduce using rule 178 (factor -> factor_opt factor_opt_2 factor_helper .)
    LTHAN           reduce using rule 178 (factor -> factor_opt factor_opt_2 factor_helper .)
    LETHAN          reduce using rule 178 (factor -> factor_opt factor_opt_2 factor_helper .)
    AND             reduce using rule 178 (factor -> factor_opt factor_opt_2 factor_helper .)
    OR              reduce using rule 178 (factor -> factor_opt factor_opt_2 factor_helper .)
    COMA            reduce using rule 178 (factor -> factor_opt factor_opt_2 factor_helper .)
    RBRACE          reduce using rule 178 (factor -> factor_opt factor_opt_2 factor_helper .)
    RPARENTHESIS    reduce using rule 178 (factor -> factor_opt factor_opt_2 factor_helper .)
    RBRACKET        reduce using rule 178 (factor -> factor_opt factor_opt_2 factor_helper .)
    SEMICOLON       reduce using rule 178 (factor -> factor_opt factor_opt_2 factor_helper .)


state 238

    (91) push_int -> empty .

    TIMES           reduce using rule 91 (push_int -> empty .)
    DIVIDE          reduce using rule 91 (push_int -> empty .)
    PLUS            reduce using rule 91 (push_int -> empty .)
    MINUS           reduce using rule 91 (push_int -> empty .)
    GTHAN           reduce using rule 91 (push_int -> empty .)
    GETHAN          reduce using rule 91 (push_int -> empty .)
    EQUAL           reduce using rule 91 (push_int -> empty .)
    NOTEQUAL        reduce using rule 91 (push_int -> empty .)
    LTHAN           reduce using rule 91 (push_int -> empty .)
    LETHAN          reduce using rule 91 (push_int -> empty .)
    AND             reduce using rule 91 (push_int -> empty .)
    OR              reduce using rule 91 (push_int -> empty .)
    RBRACKET        reduce using rule 91 (push_int -> empty .)
    RPARENTHESIS    reduce using rule 91 (push_int -> empty .)
    COMA            reduce using rule 91 (push_int -> empty .)
    SEMICOLON       reduce using rule 91 (push_int -> empty .)
    RBRACE          reduce using rule 91 (push_int -> empty .)


state 239

    (86) cte -> INT push_int .

    TIMES           reduce using rule 86 (cte -> INT push_int .)
    DIVIDE          reduce using rule 86 (cte -> INT push_int .)
    PLUS            reduce using rule 86 (cte -> INT push_int .)
    MINUS           reduce using rule 86 (cte -> INT push_int .)
    GTHAN           reduce using rule 86 (cte -> INT push_int .)
    GETHAN          reduce using rule 86 (cte -> INT push_int .)
    EQUAL           reduce using rule 86 (cte -> INT push_int .)
    NOTEQUAL        reduce using rule 86 (cte -> INT push_int .)
    LTHAN           reduce using rule 86 (cte -> INT push_int .)
    LETHAN          reduce using rule 86 (cte -> INT push_int .)
    AND             reduce using rule 86 (cte -> INT push_int .)
    OR              reduce using rule 86 (cte -> INT push_int .)
    RBRACKET        reduce using rule 86 (cte -> INT push_int .)
    RPARENTHESIS    reduce using rule 86 (cte -> INT push_int .)
    COMA            reduce using rule 86 (cte -> INT push_int .)
    SEMICOLON       reduce using rule 86 (cte -> INT push_int .)
    RBRACE          reduce using rule 86 (cte -> INT push_int .)


state 240

    (93) push_bool -> empty .

    TIMES           reduce using rule 93 (push_bool -> empty .)
    DIVIDE          reduce using rule 93 (push_bool -> empty .)
    PLUS            reduce using rule 93 (push_bool -> empty .)
    MINUS           reduce using rule 93 (push_bool -> empty .)
    GTHAN           reduce using rule 93 (push_bool -> empty .)
    GETHAN          reduce using rule 93 (push_bool -> empty .)
    EQUAL           reduce using rule 93 (push_bool -> empty .)
    NOTEQUAL        reduce using rule 93 (push_bool -> empty .)
    LTHAN           reduce using rule 93 (push_bool -> empty .)
    LETHAN          reduce using rule 93 (push_bool -> empty .)
    AND             reduce using rule 93 (push_bool -> empty .)
    OR              reduce using rule 93 (push_bool -> empty .)
    RBRACKET        reduce using rule 93 (push_bool -> empty .)
    RPARENTHESIS    reduce using rule 93 (push_bool -> empty .)
    COMA            reduce using rule 93 (push_bool -> empty .)
    SEMICOLON       reduce using rule 93 (push_bool -> empty .)
    RBRACE          reduce using rule 93 (push_bool -> empty .)


state 241

    (89) cte -> FALSE push_bool .

    TIMES           reduce using rule 89 (cte -> FALSE push_bool .)
    DIVIDE          reduce using rule 89 (cte -> FALSE push_bool .)
    PLUS            reduce using rule 89 (cte -> FALSE push_bool .)
    MINUS           reduce using rule 89 (cte -> FALSE push_bool .)
    GTHAN           reduce using rule 89 (cte -> FALSE push_bool .)
    GETHAN          reduce using rule 89 (cte -> FALSE push_bool .)
    EQUAL           reduce using rule 89 (cte -> FALSE push_bool .)
    NOTEQUAL        reduce using rule 89 (cte -> FALSE push_bool .)
    LTHAN           reduce using rule 89 (cte -> FALSE push_bool .)
    LETHAN          reduce using rule 89 (cte -> FALSE push_bool .)
    AND             reduce using rule 89 (cte -> FALSE push_bool .)
    OR              reduce using rule 89 (cte -> FALSE push_bool .)
    RBRACKET        reduce using rule 89 (cte -> FALSE push_bool .)
    RPARENTHESIS    reduce using rule 89 (cte -> FALSE push_bool .)
    COMA            reduce using rule 89 (cte -> FALSE push_bool .)
    SEMICOLON       reduce using rule 89 (cte -> FALSE push_bool .)
    RBRACE          reduce using rule 89 (cte -> FALSE push_bool .)


state 242

    (90) push_string -> empty .

    TIMES           reduce using rule 90 (push_string -> empty .)
    DIVIDE          reduce using rule 90 (push_string -> empty .)
    PLUS            reduce using rule 90 (push_string -> empty .)
    MINUS           reduce using rule 90 (push_string -> empty .)
    GTHAN           reduce using rule 90 (push_string -> empty .)
    GETHAN          reduce using rule 90 (push_string -> empty .)
    EQUAL           reduce using rule 90 (push_string -> empty .)
    NOTEQUAL        reduce using rule 90 (push_string -> empty .)
    LTHAN           reduce using rule 90 (push_string -> empty .)
    LETHAN          reduce using rule 90 (push_string -> empty .)
    AND             reduce using rule 90 (push_string -> empty .)
    OR              reduce using rule 90 (push_string -> empty .)
    RBRACKET        reduce using rule 90 (push_string -> empty .)
    RPARENTHESIS    reduce using rule 90 (push_string -> empty .)
    COMA            reduce using rule 90 (push_string -> empty .)
    SEMICOLON       reduce using rule 90 (push_string -> empty .)
    RBRACE          reduce using rule 90 (push_string -> empty .)


state 243

    (85) cte -> STRING push_string .

    TIMES           reduce using rule 85 (cte -> STRING push_string .)
    DIVIDE          reduce using rule 85 (cte -> STRING push_string .)
    PLUS            reduce using rule 85 (cte -> STRING push_string .)
    MINUS           reduce using rule 85 (cte -> STRING push_string .)
    GTHAN           reduce using rule 85 (cte -> STRING push_string .)
    GETHAN          reduce using rule 85 (cte -> STRING push_string .)
    EQUAL           reduce using rule 85 (cte -> STRING push_string .)
    NOTEQUAL        reduce using rule 85 (cte -> STRING push_string .)
    LTHAN           reduce using rule 85 (cte -> STRING push_string .)
    LETHAN          reduce using rule 85 (cte -> STRING push_string .)
    AND             reduce using rule 85 (cte -> STRING push_string .)
    OR              reduce using rule 85 (cte -> STRING push_string .)
    RBRACKET        reduce using rule 85 (cte -> STRING push_string .)
    RPARENTHESIS    reduce using rule 85 (cte -> STRING push_string .)
    COMA            reduce using rule 85 (cte -> STRING push_string .)
    SEMICOLON       reduce using rule 85 (cte -> STRING push_string .)
    RBRACE          reduce using rule 85 (cte -> STRING push_string .)


state 244

    (92) push_double -> empty .

    TIMES           reduce using rule 92 (push_double -> empty .)
    DIVIDE          reduce using rule 92 (push_double -> empty .)
    PLUS            reduce using rule 92 (push_double -> empty .)
    MINUS           reduce using rule 92 (push_double -> empty .)
    GTHAN           reduce using rule 92 (push_double -> empty .)
    GETHAN          reduce using rule 92 (push_double -> empty .)
    EQUAL           reduce using rule 92 (push_double -> empty .)
    NOTEQUAL        reduce using rule 92 (push_double -> empty .)
    LTHAN           reduce using rule 92 (push_double -> empty .)
    LETHAN          reduce using rule 92 (push_double -> empty .)
    AND             reduce using rule 92 (push_double -> empty .)
    OR              reduce using rule 92 (push_double -> empty .)
    RBRACKET        reduce using rule 92 (push_double -> empty .)
    RPARENTHESIS    reduce using rule 92 (push_double -> empty .)
    COMA            reduce using rule 92 (push_double -> empty .)
    SEMICOLON       reduce using rule 92 (push_double -> empty .)
    RBRACE          reduce using rule 92 (push_double -> empty .)


state 245

    (87) cte -> DOUBLE push_double .

    TIMES           reduce using rule 87 (cte -> DOUBLE push_double .)
    DIVIDE          reduce using rule 87 (cte -> DOUBLE push_double .)
    PLUS            reduce using rule 87 (cte -> DOUBLE push_double .)
    MINUS           reduce using rule 87 (cte -> DOUBLE push_double .)
    GTHAN           reduce using rule 87 (cte -> DOUBLE push_double .)
    GETHAN          reduce using rule 87 (cte -> DOUBLE push_double .)
    EQUAL           reduce using rule 87 (cte -> DOUBLE push_double .)
    NOTEQUAL        reduce using rule 87 (cte -> DOUBLE push_double .)
    LTHAN           reduce using rule 87 (cte -> DOUBLE push_double .)
    LETHAN          reduce using rule 87 (cte -> DOUBLE push_double .)
    AND             reduce using rule 87 (cte -> DOUBLE push_double .)
    OR              reduce using rule 87 (cte -> DOUBLE push_double .)
    RBRACKET        reduce using rule 87 (cte -> DOUBLE push_double .)
    RPARENTHESIS    reduce using rule 87 (cte -> DOUBLE push_double .)
    COMA            reduce using rule 87 (cte -> DOUBLE push_double .)
    SEMICOLON       reduce using rule 87 (cte -> DOUBLE push_double .)
    RBRACE          reduce using rule 87 (cte -> DOUBLE push_double .)


state 246

    (88) cte -> TRUE push_bool .

    TIMES           reduce using rule 88 (cte -> TRUE push_bool .)
    DIVIDE          reduce using rule 88 (cte -> TRUE push_bool .)
    PLUS            reduce using rule 88 (cte -> TRUE push_bool .)
    MINUS           reduce using rule 88 (cte -> TRUE push_bool .)
    GTHAN           reduce using rule 88 (cte -> TRUE push_bool .)
    GETHAN          reduce using rule 88 (cte -> TRUE push_bool .)
    EQUAL           reduce using rule 88 (cte -> TRUE push_bool .)
    NOTEQUAL        reduce using rule 88 (cte -> TRUE push_bool .)
    LTHAN           reduce using rule 88 (cte -> TRUE push_bool .)
    LETHAN          reduce using rule 88 (cte -> TRUE push_bool .)
    AND             reduce using rule 88 (cte -> TRUE push_bool .)
    OR              reduce using rule 88 (cte -> TRUE push_bool .)
    RBRACKET        reduce using rule 88 (cte -> TRUE push_bool .)
    RPARENTHESIS    reduce using rule 88 (cte -> TRUE push_bool .)
    COMA            reduce using rule 88 (cte -> TRUE push_bool .)
    SEMICOLON       reduce using rule 88 (cte -> TRUE push_bool .)
    RBRACE          reduce using rule 88 (cte -> TRUE push_bool .)


state 247

    (9) exp_helper -> empty .

    PLUS            reduce using rule 9 (exp_helper -> empty .)
    MINUS           reduce using rule 9 (exp_helper -> empty .)
    GTHAN           reduce using rule 9 (exp_helper -> empty .)
    GETHAN          reduce using rule 9 (exp_helper -> empty .)
    EQUAL           reduce using rule 9 (exp_helper -> empty .)
    NOTEQUAL        reduce using rule 9 (exp_helper -> empty .)
    LTHAN           reduce using rule 9 (exp_helper -> empty .)
    LETHAN          reduce using rule 9 (exp_helper -> empty .)
    AND             reduce using rule 9 (exp_helper -> empty .)
    OR              reduce using rule 9 (exp_helper -> empty .)
    RBRACKET        reduce using rule 9 (exp_helper -> empty .)
    RPARENTHESIS    reduce using rule 9 (exp_helper -> empty .)
    COMA            reduce using rule 9 (exp_helper -> empty .)
    SEMICOLON       reduce using rule 9 (exp_helper -> empty .)
    TIMES           reduce using rule 9 (exp_helper -> empty .)
    DIVIDE          reduce using rule 9 (exp_helper -> empty .)
    RBRACE          reduce using rule 9 (exp_helper -> empty .)


state 248

    (173) termino -> factor termino_loop exp_helper .

    PLUS            reduce using rule 173 (termino -> factor termino_loop exp_helper .)
    MINUS           reduce using rule 173 (termino -> factor termino_loop exp_helper .)
    GTHAN           reduce using rule 173 (termino -> factor termino_loop exp_helper .)
    GETHAN          reduce using rule 173 (termino -> factor termino_loop exp_helper .)
    EQUAL           reduce using rule 173 (termino -> factor termino_loop exp_helper .)
    NOTEQUAL        reduce using rule 173 (termino -> factor termino_loop exp_helper .)
    LTHAN           reduce using rule 173 (termino -> factor termino_loop exp_helper .)
    LETHAN          reduce using rule 173 (termino -> factor termino_loop exp_helper .)
    AND             reduce using rule 173 (termino -> factor termino_loop exp_helper .)
    OR              reduce using rule 173 (termino -> factor termino_loop exp_helper .)
    RBRACKET        reduce using rule 173 (termino -> factor termino_loop exp_helper .)
    RPARENTHESIS    reduce using rule 173 (termino -> factor termino_loop exp_helper .)
    COMA            reduce using rule 173 (termino -> factor termino_loop exp_helper .)
    SEMICOLON       reduce using rule 173 (termino -> factor termino_loop exp_helper .)
    RBRACE          reduce using rule 173 (termino -> factor termino_loop exp_helper .)
    TIMES           reduce using rule 173 (termino -> factor termino_loop exp_helper .)
    DIVIDE          reduce using rule 173 (termino -> factor termino_loop exp_helper .)


state 249

    (174) termino_loop -> TIMES push_operation . termino termino_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    termino                        shift and go to state 314
    empty                          shift and go to state 117

state 250

    (175) termino_loop -> DIVIDE push_operation . termino termino_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    termino                        shift and go to state 315
    empty                          shift and go to state 117

state 251

    (177) factor -> LPARENTHESIS push_fake_bottom expresion . RPARENTHESIS pop_fake_bottom factor_helper

    RPARENTHESIS    shift and go to state 316


state 252

    (164) expresion_opt -> GETHAN push_operation . exp expresion_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 317
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 253

    (163) expresion_opt -> GTHAN push_operation . exp expresion_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 318
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 254

    (4) logica_helper -> empty .

    AND             reduce using rule 4 (logica_helper -> empty .)
    OR              reduce using rule 4 (logica_helper -> empty .)
    RBRACKET        reduce using rule 4 (logica_helper -> empty .)
    RPARENTHESIS    reduce using rule 4 (logica_helper -> empty .)
    COMA            reduce using rule 4 (logica_helper -> empty .)
    SEMICOLON       reduce using rule 4 (logica_helper -> empty .)
    RBRACE          reduce using rule 4 (logica_helper -> empty .)


state 255

    (161) expresion -> exp expresion_opt logica_helper .

    AND             reduce using rule 161 (expresion -> exp expresion_opt logica_helper .)
    OR              reduce using rule 161 (expresion -> exp expresion_opt logica_helper .)
    RBRACKET        reduce using rule 161 (expresion -> exp expresion_opt logica_helper .)
    RPARENTHESIS    reduce using rule 161 (expresion -> exp expresion_opt logica_helper .)
    COMA            reduce using rule 161 (expresion -> exp expresion_opt logica_helper .)
    SEMICOLON       reduce using rule 161 (expresion -> exp expresion_opt logica_helper .)
    RBRACE          reduce using rule 161 (expresion -> exp expresion_opt logica_helper .)


state 256

    (167) expresion_opt -> LTHAN push_operation . exp expresion_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 319
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 257

    (168) expresion_opt -> LETHAN push_operation . exp expresion_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 320
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 258

    (165) expresion_opt -> EQUAL push_operation . exp expresion_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 321
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 259

    (166) expresion_opt -> NOTEQUAL push_operation . exp expresion_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 322
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 260

    (45) tipo_opt_prim_2 -> LBRACKET logica RBRACKET tipo_opt_prim_3 .

    COMA            reduce using rule 45 (tipo_opt_prim_2 -> LBRACKET logica RBRACKET tipo_opt_prim_3 .)
    SEMICOLON       reduce using rule 45 (tipo_opt_prim_2 -> LBRACKET logica RBRACKET tipo_opt_prim_3 .)


state 261

    (60) ini_prim_v -> ASSIGN . LBRACE logica ini_prim_v_loop RBRACE

    LBRACE          shift and go to state 323


state 262

    (49) tipo_opt_prim_3 -> empty .

    COMA            reduce using rule 49 (tipo_opt_prim_3 -> empty .)
    SEMICOLON       reduce using rule 49 (tipo_opt_prim_3 -> empty .)


state 263

    (48) tipo_opt_prim_3 -> ini_prim_v .

    COMA            reduce using rule 48 (tipo_opt_prim_3 -> ini_prim_v .)
    SEMICOLON       reduce using rule 48 (tipo_opt_prim_3 -> ini_prim_v .)


state 264

    (158) logica_loop -> AND push_operation . logica
    (157) logica -> . expresion logica_loop
    (161) expresion -> . exp expresion_opt logica_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    expresion                      shift and go to state 119
    factor                         shift and go to state 113
    exp                            shift and go to state 115
    termino                        shift and go to state 120
    empty                          shift and go to state 117
    logica                         shift and go to state 324

state 265

    (159) logica_loop -> OR push_operation . logica
    (157) logica -> . expresion logica_loop
    (161) expresion -> . exp expresion_opt logica_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    expresion                      shift and go to state 119
    factor                         shift and go to state 113
    exp                            shift and go to state 115
    termino                        shift and go to state 120
    empty                          shift and go to state 117
    logica                         shift and go to state 325

state 266

    (171) exp_loop -> MINUS push_operation . exp exp_loop
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 326
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 267

    (170) exp_loop -> PLUS push_operation . exp exp_loop
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 327
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 268

    (70) fgra_atr -> PINCEL LPARENTHESIS . fgra_atr_end
    (75) fgra_atr_end -> . exp COMA exp COMA color RPARENTHESIS
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 328
    termino                        shift and go to state 120
    empty                          shift and go to state 117
    fgra_atr_end                   shift and go to state 329

state 269

    (71) fgra_atr -> CUAD LPARENTHESIS . exp COMA fgra_atr_end
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 330
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 270

    (72) fgra_atr -> CIRC LPARENTHESIS . exp COMA fgra_atr_end
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 331
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 271

    (73) fgra_atr -> RECT LPARENTHESIS . exp COMA exp COMA fgra_atr_end
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 332
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 272

    (74) fgra_atr -> TRIANG LPARENTHESIS . exp COMA exp COMA exp COMA exp COMA fgra_atr_end
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 333
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 273

    (64) ini_fgra_v -> ASSIGN . LBRACE fgra_nva ini_fgras_v_loop RBRACE

    LBRACE          shift and go to state 334


state 274

    (55) tipo_opt_fig_2 -> LBRACKET logica RBRACKET tipo_opt_fig_3 .

    COMA            reduce using rule 55 (tipo_opt_fig_2 -> LBRACKET logica RBRACKET tipo_opt_fig_3 .)
    SEMICOLON       reduce using rule 55 (tipo_opt_fig_2 -> LBRACKET logica RBRACKET tipo_opt_fig_3 .)


state 275

    (57) tipo_opt_fig_3 -> ini_fgra_v .

    COMA            reduce using rule 57 (tipo_opt_fig_3 -> ini_fgra_v .)
    SEMICOLON       reduce using rule 57 (tipo_opt_fig_3 -> ini_fgra_v .)


state 276

    (58) tipo_opt_fig_3 -> empty .
    (65) ini_fgra_v -> empty .

  ! reduce/reduce conflict for COMA resolved using rule 58 (tipo_opt_fig_3 -> empty .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 58 (tipo_opt_fig_3 -> empty .)
    COMA            reduce using rule 58 (tipo_opt_fig_3 -> empty .)
    SEMICOLON       reduce using rule 58 (tipo_opt_fig_3 -> empty .)

  ! COMA            [ reduce using rule 65 (ini_fgra_v -> empty .) ]
  ! SEMICOLON       [ reduce using rule 65 (ini_fgra_v -> empty .) ]


state 277

    (202) accion_figura_opt_2_end -> LPARENTHESIS expresion .

    RPARENTHESIS    reduce using rule 202 (accion_figura_opt_2_end -> LPARENTHESIS expresion .)


state 278

    (209) accion_pincel_opt -> GRAPH LPARENTHESIS CTEFUNCION . COMA exp

    COMA            shift and go to state 335


state 279

    (212) color -> CTEHEXCOLOR .

    RPARENTHESIS    reduce using rule 212 (color -> CTEHEXCOLOR .)


state 280

    (211) color -> CTECOLOR .

    RPARENTHESIS    reduce using rule 211 (color -> CTECOLOR .)


state 281

    (204) accion_figura_opt_3 -> FILL LPARENTHESIS color .

    RPARENTHESIS    reduce using rule 204 (accion_figura_opt_3 -> FILL LPARENTHESIS color .)


state 282

    (206) accion_pincel_opt -> COLOR LPARENTHESIS color .

    RPARENTHESIS    reduce using rule 206 (accion_pincel_opt -> COLOR LPARENTHESIS color .)


state 283

    (210) accion_pincel_opt_end -> LPARENTHESIS expresion . COMA expresion

    COMA            shift and go to state 336


state 284

    (153) llamada_param -> exp llamada_loop .

    RPARENTHESIS    reduce using rule 153 (llamada_param -> exp llamada_loop .)


state 285

    (156) llamada_loop -> empty .

    RPARENTHESIS    reduce using rule 156 (llamada_loop -> empty .)


state 286

    (155) llamada_loop -> COMA . exp llamada_loop
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 337
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 287

    (152) llamada -> ID check_function LPARENTHESIS llamada_param RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 338


state 288

    (136) asignacion -> ID check_variable asignacion_opt ASSIGN push_operation . asignacion_opt_2 SEMICOLON
    (140) asignacion_opt_2 -> . logica
    (141) asignacion_opt_2 -> . lectura
    (142) asignacion_opt_2 -> . fgra_nva
    (157) logica -> . expresion logica_loop
    (151) lectura -> . READ LPARENTHESIS RPARENTHESIS
    (68) fgra_nva -> . NUEVO fgra_atr
    (69) fgra_nva -> . empty
    (161) expresion -> . exp expresion_opt logica_helper
    (13) empty -> .
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty

    READ            shift and go to state 75
    NUEVO           shift and go to state 125
    SEMICOLON       reduce using rule 13 (empty -> .)
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)
    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121

    factor_opt                     shift and go to state 112
    asignacion_opt_2               shift and go to state 339
    factor                         shift and go to state 113
    exp                            shift and go to state 115
    lectura                        shift and go to state 340
    empty                          shift and go to state 341
    logica                         shift and go to state 342
    fgra_nva                       shift and go to state 343
    expresion                      shift and go to state 119
    termino                        shift and go to state 120

state 289

    (137) asignacion_opt -> LBRACKET logica RBRACKET .

    ASSIGN          reduce using rule 137 (asignacion_opt -> LBRACKET logica RBRACKET .)


state 290

    (124) estatuto -> llamada .

    ID              reduce using rule 124 (estatuto -> llamada .)
    IF              reduce using rule 124 (estatuto -> llamada .)
    WHILE           reduce using rule 124 (estatuto -> llamada .)
    PRINT           reduce using rule 124 (estatuto -> llamada .)
    READ            reduce using rule 124 (estatuto -> llamada .)
    COMMENT         reduce using rule 124 (estatuto -> llamada .)
    RETURN          reduce using rule 124 (estatuto -> llamada .)
    RBRACE          reduce using rule 124 (estatuto -> llamada .)


state 291

    (120) estatuto -> ciclo .

    ID              reduce using rule 120 (estatuto -> ciclo .)
    IF              reduce using rule 120 (estatuto -> ciclo .)
    WHILE           reduce using rule 120 (estatuto -> ciclo .)
    PRINT           reduce using rule 120 (estatuto -> ciclo .)
    READ            reduce using rule 120 (estatuto -> ciclo .)
    COMMENT         reduce using rule 120 (estatuto -> ciclo .)
    RETURN          reduce using rule 120 (estatuto -> ciclo .)
    RBRACE          reduce using rule 120 (estatuto -> ciclo .)


state 292

    (107) bloque_loop -> empty .

    RBRACE          reduce using rule 107 (bloque_loop -> empty .)


state 293

    (122) estatuto -> lectura .

    ID              reduce using rule 122 (estatuto -> lectura .)
    IF              reduce using rule 122 (estatuto -> lectura .)
    WHILE           reduce using rule 122 (estatuto -> lectura .)
    PRINT           reduce using rule 122 (estatuto -> lectura .)
    READ            reduce using rule 122 (estatuto -> lectura .)
    COMMENT         reduce using rule 122 (estatuto -> lectura .)
    RETURN          reduce using rule 122 (estatuto -> lectura .)
    RBRACE          reduce using rule 122 (estatuto -> lectura .)


state 294

    (119) estatuto -> condicion .

    ID              reduce using rule 119 (estatuto -> condicion .)
    IF              reduce using rule 119 (estatuto -> condicion .)
    WHILE           reduce using rule 119 (estatuto -> condicion .)
    PRINT           reduce using rule 119 (estatuto -> condicion .)
    READ            reduce using rule 119 (estatuto -> condicion .)
    COMMENT         reduce using rule 119 (estatuto -> condicion .)
    RETURN          reduce using rule 119 (estatuto -> condicion .)
    RBRACE          reduce using rule 119 (estatuto -> condicion .)


state 295

    (123) estatuto -> accion .

    ID              reduce using rule 123 (estatuto -> accion .)
    IF              reduce using rule 123 (estatuto -> accion .)
    WHILE           reduce using rule 123 (estatuto -> accion .)
    PRINT           reduce using rule 123 (estatuto -> accion .)
    READ            reduce using rule 123 (estatuto -> accion .)
    COMMENT         reduce using rule 123 (estatuto -> accion .)
    RETURN          reduce using rule 123 (estatuto -> accion .)
    RBRACE          reduce using rule 123 (estatuto -> accion .)


state 296

    (125) estatuto -> comentario .

    ID              reduce using rule 125 (estatuto -> comentario .)
    IF              reduce using rule 125 (estatuto -> comentario .)
    WHILE           reduce using rule 125 (estatuto -> comentario .)
    PRINT           reduce using rule 125 (estatuto -> comentario .)
    READ            reduce using rule 125 (estatuto -> comentario .)
    COMMENT         reduce using rule 125 (estatuto -> comentario .)
    RETURN          reduce using rule 125 (estatuto -> comentario .)
    RBRACE          reduce using rule 125 (estatuto -> comentario .)


state 297

    (105) bloque -> LBRACE bloque_loop . RBRACE

    RBRACE          shift and go to state 344


state 298

    (121) estatuto -> impresion .

    ID              reduce using rule 121 (estatuto -> impresion .)
    IF              reduce using rule 121 (estatuto -> impresion .)
    WHILE           reduce using rule 121 (estatuto -> impresion .)
    PRINT           reduce using rule 121 (estatuto -> impresion .)
    READ            reduce using rule 121 (estatuto -> impresion .)
    COMMENT         reduce using rule 121 (estatuto -> impresion .)
    RETURN          reduce using rule 121 (estatuto -> impresion .)
    RBRACE          reduce using rule 121 (estatuto -> impresion .)


state 299

    (118) estatuto -> asignacion .

    ID              reduce using rule 118 (estatuto -> asignacion .)
    IF              reduce using rule 118 (estatuto -> asignacion .)
    WHILE           reduce using rule 118 (estatuto -> asignacion .)
    PRINT           reduce using rule 118 (estatuto -> asignacion .)
    READ            reduce using rule 118 (estatuto -> asignacion .)
    COMMENT         reduce using rule 118 (estatuto -> asignacion .)
    RETURN          reduce using rule 118 (estatuto -> asignacion .)
    RBRACE          reduce using rule 118 (estatuto -> asignacion .)


state 300

    (106) bloque_loop -> estatuto . bloque_loop
    (106) bloque_loop -> . estatuto bloque_loop
    (107) bloque_loop -> . empty
    (118) estatuto -> . asignacion
    (119) estatuto -> . condicion
    (120) estatuto -> . ciclo
    (121) estatuto -> . impresion
    (122) estatuto -> . lectura
    (123) estatuto -> . accion
    (124) estatuto -> . llamada
    (125) estatuto -> . comentario
    (13) empty -> .
    (136) asignacion -> . ID check_variable asignacion_opt ASSIGN push_operation asignacion_opt_2 SEMICOLON
    (143) condicion -> . IF condicion_loop condicion_opt
    (149) ciclo -> . WHILE LPARENTHESIS logica RPARENTHESIS bloque
    (150) impresion -> . PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON
    (151) lectura -> . READ LPARENTHESIS RPARENTHESIS
    (192) accion -> . ID POINT accion_opt SEMICOLON
    (152) llamada -> . ID check_function LPARENTHESIS llamada_param RPARENTHESIS SEMICOLON
    (135) comentario -> . COMMENT

    RBRACE          reduce using rule 13 (empty -> .)
    ID              shift and go to state 70
    IF              shift and go to state 71
    WHILE           shift and go to state 84
    PRINT           shift and go to state 83
    READ            shift and go to state 75
    COMMENT         shift and go to state 80

    llamada                        shift and go to state 290
    ciclo                          shift and go to state 291
    lectura                        shift and go to state 293
    condicion                      shift and go to state 294
    empty                          shift and go to state 292
    accion                         shift and go to state 295
    comentario                     shift and go to state 296
    bloque_loop                    shift and go to state 345
    impresion                      shift and go to state 298
    asignacion                     shift and go to state 299
    estatuto                       shift and go to state 300

state 301

    (144) condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque . condicion_loop_opt
    (145) condicion_loop_opt -> . ELIF condicion_loop
    (146) condicion_loop_opt -> . empty
    (13) empty -> .

    ELIF            shift and go to state 348
    ELSE            reduce using rule 13 (empty -> .)
    VAR             reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)
    IF              reduce using rule 13 (empty -> .)
    WHILE           reduce using rule 13 (empty -> .)
    PRINT           reduce using rule 13 (empty -> .)
    READ            reduce using rule 13 (empty -> .)
    COMMENT         reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)
    RETURN          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 347
    condicion_loop_opt             shift and go to state 346

state 302

    (150) impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON .

    VAR             reduce using rule 150 (impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON .)
    ID              reduce using rule 150 (impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON .)
    IF              reduce using rule 150 (impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 150 (impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 150 (impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON .)
    READ            reduce using rule 150 (impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON .)
    COMMENT         reduce using rule 150 (impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON .)
    RBRACE          reduce using rule 150 (impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 150 (impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON .)


state 303

    (149) ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque .

    ID              reduce using rule 149 (ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque .)
    IF              reduce using rule 149 (ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque .)
    WHILE           reduce using rule 149 (ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque .)
    PRINT           reduce using rule 149 (ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque .)
    READ            reduce using rule 149 (ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque .)
    COMMENT         reduce using rule 149 (ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque .)
    RBRACE          reduce using rule 149 (ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque .)
    VAR             reduce using rule 149 (ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque .)
    RETURN          reduce using rule 149 (ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque .)


state 304

    (97) parametros_loop -> empty .

    RPARENTHESIS    reduce using rule 97 (parametros_loop -> empty .)


state 305

    (96) parametros_loop -> COMA . parametros
    (94) parametros -> . param_list parametros_loop
    (95) parametros -> . empty
    (98) param_list -> . paramTypeNext tipo_param COLON ID paramID param_list_loop
    (99) param_list -> . empty
    (13) empty -> .
    (33) paramTypeNext -> . empty

    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    TYPEINT         reduce using rule 13 (empty -> .)
    TYPEDOUBLE      reduce using rule 13 (empty -> .)
    TYPEBOOL        reduce using rule 13 (empty -> .)
    TYPESTRING      reduce using rule 13 (empty -> .)
    PINCEL          reduce using rule 13 (empty -> .)
    CUAD            reduce using rule 13 (empty -> .)
    RECT            reduce using rule 13 (empty -> .)
    CIRC            reduce using rule 13 (empty -> .)
    TRIANG          reduce using rule 13 (empty -> .)

    paramTypeNext                  shift and go to state 232
    empty                          shift and go to state 233
    param_list                     shift and go to state 230
    parametros                     shift and go to state 349

state 306

    (94) parametros -> param_list parametros_loop .

    RPARENTHESIS    reduce using rule 94 (parametros -> param_list parametros_loop .)


state 307

    (22) rutinas -> RUTINA FuncTypeNext rutina_opt COLON ID saveFuncName LPARENTHESIS parametros RPARENTHESIS . saveFuncParam bloque_rutina cleanFunc rutinas_loop
    (5) saveFuncParam -> . empty
    (13) empty -> .

    LBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 350
    saveFuncParam                  shift and go to state 351

state 308

    (103) tipo_param -> figura .

    COLON           reduce using rule 103 (tipo_param -> figura .)


state 309

    (98) param_list -> paramTypeNext tipo_param . COLON ID paramID param_list_loop

    COLON           shift and go to state 352


state 310

    (102) tipo_param -> primitivo .

    COLON           reduce using rule 102 (tipo_param -> primitivo .)


state 311

    (189) idllamada_opt -> LBRACKET . expresion RBRACKET
    (161) expresion -> . exp expresion_opt logica_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    expresion                      shift and go to state 353
    factor                         shift and go to state 113
    exp                            shift and go to state 115
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 312

    (186) idllamada -> ID check_function idllamada_opt .

    TIMES           reduce using rule 186 (idllamada -> ID check_function idllamada_opt .)
    DIVIDE          reduce using rule 186 (idllamada -> ID check_function idllamada_opt .)
    PLUS            reduce using rule 186 (idllamada -> ID check_function idllamada_opt .)
    MINUS           reduce using rule 186 (idllamada -> ID check_function idllamada_opt .)
    GTHAN           reduce using rule 186 (idllamada -> ID check_function idllamada_opt .)
    GETHAN          reduce using rule 186 (idllamada -> ID check_function idllamada_opt .)
    EQUAL           reduce using rule 186 (idllamada -> ID check_function idllamada_opt .)
    NOTEQUAL        reduce using rule 186 (idllamada -> ID check_function idllamada_opt .)
    LTHAN           reduce using rule 186 (idllamada -> ID check_function idllamada_opt .)
    LETHAN          reduce using rule 186 (idllamada -> ID check_function idllamada_opt .)
    AND             reduce using rule 186 (idllamada -> ID check_function idllamada_opt .)
    OR              reduce using rule 186 (idllamada -> ID check_function idllamada_opt .)
    RBRACKET        reduce using rule 186 (idllamada -> ID check_function idllamada_opt .)
    RPARENTHESIS    reduce using rule 186 (idllamada -> ID check_function idllamada_opt .)
    COMA            reduce using rule 186 (idllamada -> ID check_function idllamada_opt .)
    SEMICOLON       reduce using rule 186 (idllamada -> ID check_function idllamada_opt .)
    RBRACE          reduce using rule 186 (idllamada -> ID check_function idllamada_opt .)


state 313

    (187) idllamada_opt -> LPARENTHESIS . exp idllamada_opt_loop RPARENTHESIS
    (188) idllamada_opt -> LPARENTHESIS . idllamada_opt_loop RPARENTHESIS
    (169) exp -> . termino exp_loop
    (190) idllamada_opt_loop -> . COMA exp idllamada_opt_loop
    (191) idllamada_opt_loop -> . empty
    (173) termino -> . factor termino_loop exp_helper
    (13) empty -> .
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty

    COMA            shift and go to state 354
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)
    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 355
    termino                        shift and go to state 120
    empty                          shift and go to state 356
    idllamada_opt_loop             shift and go to state 357

state 314

    (174) termino_loop -> TIMES push_operation termino . termino_loop
    (174) termino_loop -> . TIMES push_operation termino termino_loop
    (175) termino_loop -> . DIVIDE push_operation termino termino_loop
    (176) termino_loop -> . empty
    (13) empty -> .

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    TIMES           shift and go to state 173
    DIVIDE          shift and go to state 174
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    GTHAN           reduce using rule 13 (empty -> .)
    GETHAN          reduce using rule 13 (empty -> .)
    EQUAL           reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    LTHAN           reduce using rule 13 (empty -> .)
    LETHAN          reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

  ! TIMES           [ reduce using rule 13 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 13 (empty -> .) ]

    empty                          shift and go to state 171
    termino_loop                   shift and go to state 358

state 315

    (175) termino_loop -> DIVIDE push_operation termino . termino_loop
    (174) termino_loop -> . TIMES push_operation termino termino_loop
    (175) termino_loop -> . DIVIDE push_operation termino termino_loop
    (176) termino_loop -> . empty
    (13) empty -> .

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    TIMES           shift and go to state 173
    DIVIDE          shift and go to state 174
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    GTHAN           reduce using rule 13 (empty -> .)
    GETHAN          reduce using rule 13 (empty -> .)
    EQUAL           reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    LTHAN           reduce using rule 13 (empty -> .)
    LETHAN          reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

  ! TIMES           [ reduce using rule 13 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 13 (empty -> .) ]

    empty                          shift and go to state 171
    termino_loop                   shift and go to state 359

state 316

    (177) factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS . pop_fake_bottom factor_helper
    (25) pop_fake_bottom -> . empty
    (13) empty -> .

    TIMES           reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    GTHAN           reduce using rule 13 (empty -> .)
    GETHAN          reduce using rule 13 (empty -> .)
    EQUAL           reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    LTHAN           reduce using rule 13 (empty -> .)
    LETHAN          reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 361
    pop_fake_bottom                shift and go to state 360

state 317

    (164) expresion_opt -> GETHAN push_operation exp . expresion_helper
    (6) expresion_helper -> . empty
    (13) empty -> .

    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 362
    expresion_helper               shift and go to state 363

state 318

    (163) expresion_opt -> GTHAN push_operation exp . expresion_helper
    (6) expresion_helper -> . empty
    (13) empty -> .

    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 362
    expresion_helper               shift and go to state 364

state 319

    (167) expresion_opt -> LTHAN push_operation exp . expresion_helper
    (6) expresion_helper -> . empty
    (13) empty -> .

    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 362
    expresion_helper               shift and go to state 365

state 320

    (168) expresion_opt -> LETHAN push_operation exp . expresion_helper
    (6) expresion_helper -> . empty
    (13) empty -> .

    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 362
    expresion_helper               shift and go to state 366

state 321

    (165) expresion_opt -> EQUAL push_operation exp . expresion_helper
    (6) expresion_helper -> . empty
    (13) empty -> .

    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 362
    expresion_helper               shift and go to state 367

state 322

    (166) expresion_opt -> NOTEQUAL push_operation exp . expresion_helper
    (6) expresion_helper -> . empty
    (13) empty -> .

    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 362
    expresion_helper               shift and go to state 368

state 323

    (60) ini_prim_v -> ASSIGN LBRACE . logica ini_prim_v_loop RBRACE
    (157) logica -> . expresion logica_loop
    (161) expresion -> . exp expresion_opt logica_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    expresion                      shift and go to state 119
    factor                         shift and go to state 113
    exp                            shift and go to state 115
    termino                        shift and go to state 120
    empty                          shift and go to state 117
    logica                         shift and go to state 369

state 324

    (158) logica_loop -> AND push_operation logica .

    RBRACKET        reduce using rule 158 (logica_loop -> AND push_operation logica .)
    RPARENTHESIS    reduce using rule 158 (logica_loop -> AND push_operation logica .)
    COMA            reduce using rule 158 (logica_loop -> AND push_operation logica .)
    SEMICOLON       reduce using rule 158 (logica_loop -> AND push_operation logica .)
    RBRACE          reduce using rule 158 (logica_loop -> AND push_operation logica .)


state 325

    (159) logica_loop -> OR push_operation logica .

    RBRACKET        reduce using rule 159 (logica_loop -> OR push_operation logica .)
    RPARENTHESIS    reduce using rule 159 (logica_loop -> OR push_operation logica .)
    COMA            reduce using rule 159 (logica_loop -> OR push_operation logica .)
    SEMICOLON       reduce using rule 159 (logica_loop -> OR push_operation logica .)
    RBRACE          reduce using rule 159 (logica_loop -> OR push_operation logica .)


state 326

    (171) exp_loop -> MINUS push_operation exp . exp_loop
    (170) exp_loop -> . PLUS push_operation exp exp_loop
    (171) exp_loop -> . MINUS push_operation exp exp_loop
    (172) exp_loop -> . empty
    (13) empty -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    PLUS            shift and go to state 193
    MINUS           shift and go to state 190
    GTHAN           reduce using rule 13 (empty -> .)
    GETHAN          reduce using rule 13 (empty -> .)
    EQUAL           reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    LTHAN           reduce using rule 13 (empty -> .)
    LETHAN          reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

  ! PLUS            [ reduce using rule 13 (empty -> .) ]
  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    empty                          shift and go to state 192
    exp_loop                       shift and go to state 370

state 327

    (170) exp_loop -> PLUS push_operation exp . exp_loop
    (170) exp_loop -> . PLUS push_operation exp exp_loop
    (171) exp_loop -> . MINUS push_operation exp exp_loop
    (172) exp_loop -> . empty
    (13) empty -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    PLUS            shift and go to state 193
    MINUS           shift and go to state 190
    GTHAN           reduce using rule 13 (empty -> .)
    GETHAN          reduce using rule 13 (empty -> .)
    EQUAL           reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    LTHAN           reduce using rule 13 (empty -> .)
    LETHAN          reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

  ! PLUS            [ reduce using rule 13 (empty -> .) ]
  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    empty                          shift and go to state 192
    exp_loop                       shift and go to state 371

state 328

    (75) fgra_atr_end -> exp . COMA exp COMA color RPARENTHESIS

    COMA            shift and go to state 372


state 329

    (70) fgra_atr -> PINCEL LPARENTHESIS fgra_atr_end .

    COMA            reduce using rule 70 (fgra_atr -> PINCEL LPARENTHESIS fgra_atr_end .)
    SEMICOLON       reduce using rule 70 (fgra_atr -> PINCEL LPARENTHESIS fgra_atr_end .)
    RBRACE          reduce using rule 70 (fgra_atr -> PINCEL LPARENTHESIS fgra_atr_end .)


state 330

    (71) fgra_atr -> CUAD LPARENTHESIS exp . COMA fgra_atr_end

    COMA            shift and go to state 373


state 331

    (72) fgra_atr -> CIRC LPARENTHESIS exp . COMA fgra_atr_end

    COMA            shift and go to state 374


state 332

    (73) fgra_atr -> RECT LPARENTHESIS exp . COMA exp COMA fgra_atr_end

    COMA            shift and go to state 375


state 333

    (74) fgra_atr -> TRIANG LPARENTHESIS exp . COMA exp COMA exp COMA exp COMA fgra_atr_end

    COMA            shift and go to state 376


state 334

    (64) ini_fgra_v -> ASSIGN LBRACE . fgra_nva ini_fgras_v_loop RBRACE
    (68) fgra_nva -> . NUEVO fgra_atr
    (69) fgra_nva -> . empty
    (13) empty -> .

    NUEVO           shift and go to state 125
    COMA            reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 124
    fgra_nva                       shift and go to state 377

state 335

    (209) accion_pincel_opt -> GRAPH LPARENTHESIS CTEFUNCION COMA . exp
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 378
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 336

    (210) accion_pincel_opt_end -> LPARENTHESIS expresion COMA . expresion
    (161) expresion -> . exp expresion_opt logica_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    expresion                      shift and go to state 379
    factor                         shift and go to state 113
    exp                            shift and go to state 115
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 337

    (155) llamada_loop -> COMA exp . llamada_loop
    (155) llamada_loop -> . COMA exp llamada_loop
    (156) llamada_loop -> . empty
    (13) empty -> .

    COMA            shift and go to state 286
    RPARENTHESIS    reduce using rule 13 (empty -> .)

    llamada_loop                   shift and go to state 380
    empty                          shift and go to state 285

state 338

    (152) llamada -> ID check_function LPARENTHESIS llamada_param RPARENTHESIS SEMICOLON .

    VAR             reduce using rule 152 (llamada -> ID check_function LPARENTHESIS llamada_param RPARENTHESIS SEMICOLON .)
    ID              reduce using rule 152 (llamada -> ID check_function LPARENTHESIS llamada_param RPARENTHESIS SEMICOLON .)
    IF              reduce using rule 152 (llamada -> ID check_function LPARENTHESIS llamada_param RPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 152 (llamada -> ID check_function LPARENTHESIS llamada_param RPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 152 (llamada -> ID check_function LPARENTHESIS llamada_param RPARENTHESIS SEMICOLON .)
    READ            reduce using rule 152 (llamada -> ID check_function LPARENTHESIS llamada_param RPARENTHESIS SEMICOLON .)
    COMMENT         reduce using rule 152 (llamada -> ID check_function LPARENTHESIS llamada_param RPARENTHESIS SEMICOLON .)
    RBRACE          reduce using rule 152 (llamada -> ID check_function LPARENTHESIS llamada_param RPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 152 (llamada -> ID check_function LPARENTHESIS llamada_param RPARENTHESIS SEMICOLON .)


state 339

    (136) asignacion -> ID check_variable asignacion_opt ASSIGN push_operation asignacion_opt_2 . SEMICOLON

    SEMICOLON       shift and go to state 381


state 340

    (141) asignacion_opt_2 -> lectura .

    SEMICOLON       reduce using rule 141 (asignacion_opt_2 -> lectura .)


state 341

    (69) fgra_nva -> empty .
    (181) factor_opt -> empty .

    SEMICOLON       reduce using rule 69 (fgra_nva -> empty .)
    STRING          reduce using rule 181 (factor_opt -> empty .)
    INT             reduce using rule 181 (factor_opt -> empty .)
    DOUBLE          reduce using rule 181 (factor_opt -> empty .)
    TRUE            reduce using rule 181 (factor_opt -> empty .)
    FALSE           reduce using rule 181 (factor_opt -> empty .)
    ID              reduce using rule 181 (factor_opt -> empty .)


state 342

    (140) asignacion_opt_2 -> logica .

    SEMICOLON       reduce using rule 140 (asignacion_opt_2 -> logica .)


state 343

    (142) asignacion_opt_2 -> fgra_nva .

    SEMICOLON       reduce using rule 142 (asignacion_opt_2 -> fgra_nva .)


state 344

    (105) bloque -> LBRACE bloque_loop RBRACE .

    VAR             reduce using rule 105 (bloque -> LBRACE bloque_loop RBRACE .)
    ID              reduce using rule 105 (bloque -> LBRACE bloque_loop RBRACE .)
    IF              reduce using rule 105 (bloque -> LBRACE bloque_loop RBRACE .)
    WHILE           reduce using rule 105 (bloque -> LBRACE bloque_loop RBRACE .)
    PRINT           reduce using rule 105 (bloque -> LBRACE bloque_loop RBRACE .)
    READ            reduce using rule 105 (bloque -> LBRACE bloque_loop RBRACE .)
    COMMENT         reduce using rule 105 (bloque -> LBRACE bloque_loop RBRACE .)
    RBRACE          reduce using rule 105 (bloque -> LBRACE bloque_loop RBRACE .)
    RETURN          reduce using rule 105 (bloque -> LBRACE bloque_loop RBRACE .)
    ELIF            reduce using rule 105 (bloque -> LBRACE bloque_loop RBRACE .)
    ELSE            reduce using rule 105 (bloque -> LBRACE bloque_loop RBRACE .)


state 345

    (106) bloque_loop -> estatuto bloque_loop .

    RBRACE          reduce using rule 106 (bloque_loop -> estatuto bloque_loop .)


state 346

    (144) condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .

    ELSE            reduce using rule 144 (condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .)
    VAR             reduce using rule 144 (condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .)
    ID              reduce using rule 144 (condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .)
    IF              reduce using rule 144 (condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .)
    WHILE           reduce using rule 144 (condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .)
    PRINT           reduce using rule 144 (condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .)
    READ            reduce using rule 144 (condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .)
    COMMENT         reduce using rule 144 (condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .)
    RBRACE          reduce using rule 144 (condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .)
    RETURN          reduce using rule 144 (condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .)


state 347

    (146) condicion_loop_opt -> empty .

    ELSE            reduce using rule 146 (condicion_loop_opt -> empty .)
    VAR             reduce using rule 146 (condicion_loop_opt -> empty .)
    ID              reduce using rule 146 (condicion_loop_opt -> empty .)
    IF              reduce using rule 146 (condicion_loop_opt -> empty .)
    WHILE           reduce using rule 146 (condicion_loop_opt -> empty .)
    PRINT           reduce using rule 146 (condicion_loop_opt -> empty .)
    READ            reduce using rule 146 (condicion_loop_opt -> empty .)
    COMMENT         reduce using rule 146 (condicion_loop_opt -> empty .)
    RBRACE          reduce using rule 146 (condicion_loop_opt -> empty .)
    RETURN          reduce using rule 146 (condicion_loop_opt -> empty .)


state 348

    (145) condicion_loop_opt -> ELIF . condicion_loop
    (144) condicion_loop -> . LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt

    LPARENTHESIS    shift and go to state 101

    condicion_loop                 shift and go to state 382

state 349

    (96) parametros_loop -> COMA parametros .

    RPARENTHESIS    reduce using rule 96 (parametros_loop -> COMA parametros .)


state 350

    (5) saveFuncParam -> empty .

    LBRACE          reduce using rule 5 (saveFuncParam -> empty .)


state 351

    (22) rutinas -> RUTINA FuncTypeNext rutina_opt COLON ID saveFuncName LPARENTHESIS parametros RPARENTHESIS saveFuncParam . bloque_rutina cleanFunc rutinas_loop
    (108) bloque_rutina -> . LBRACE bloque_rutina_opt bloque_rutina_loop bloque_rutina_opt_2 RBRACE

    LBRACE          shift and go to state 384

    bloque_rutina                  shift and go to state 383

state 352

    (98) param_list -> paramTypeNext tipo_param COLON . ID paramID param_list_loop

    ID              shift and go to state 385


state 353

    (189) idllamada_opt -> LBRACKET expresion . RBRACKET

    RBRACKET        shift and go to state 386


state 354

    (190) idllamada_opt_loop -> COMA . exp idllamada_opt_loop
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 387
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 355

    (187) idllamada_opt -> LPARENTHESIS exp . idllamada_opt_loop RPARENTHESIS
    (190) idllamada_opt_loop -> . COMA exp idllamada_opt_loop
    (191) idllamada_opt_loop -> . empty
    (13) empty -> .

    COMA            shift and go to state 354
    RPARENTHESIS    reduce using rule 13 (empty -> .)

    empty                          shift and go to state 388
    idllamada_opt_loop             shift and go to state 389

state 356

    (191) idllamada_opt_loop -> empty .
    (181) factor_opt -> empty .

    RPARENTHESIS    reduce using rule 191 (idllamada_opt_loop -> empty .)
    STRING          reduce using rule 181 (factor_opt -> empty .)
    INT             reduce using rule 181 (factor_opt -> empty .)
    DOUBLE          reduce using rule 181 (factor_opt -> empty .)
    TRUE            reduce using rule 181 (factor_opt -> empty .)
    FALSE           reduce using rule 181 (factor_opt -> empty .)
    ID              reduce using rule 181 (factor_opt -> empty .)


state 357

    (188) idllamada_opt -> LPARENTHESIS idllamada_opt_loop . RPARENTHESIS

    RPARENTHESIS    shift and go to state 390


state 358

    (174) termino_loop -> TIMES push_operation termino termino_loop .

    TIMES           reduce using rule 174 (termino_loop -> TIMES push_operation termino termino_loop .)
    DIVIDE          reduce using rule 174 (termino_loop -> TIMES push_operation termino termino_loop .)
    PLUS            reduce using rule 174 (termino_loop -> TIMES push_operation termino termino_loop .)
    MINUS           reduce using rule 174 (termino_loop -> TIMES push_operation termino termino_loop .)
    GTHAN           reduce using rule 174 (termino_loop -> TIMES push_operation termino termino_loop .)
    GETHAN          reduce using rule 174 (termino_loop -> TIMES push_operation termino termino_loop .)
    EQUAL           reduce using rule 174 (termino_loop -> TIMES push_operation termino termino_loop .)
    NOTEQUAL        reduce using rule 174 (termino_loop -> TIMES push_operation termino termino_loop .)
    LTHAN           reduce using rule 174 (termino_loop -> TIMES push_operation termino termino_loop .)
    LETHAN          reduce using rule 174 (termino_loop -> TIMES push_operation termino termino_loop .)
    AND             reduce using rule 174 (termino_loop -> TIMES push_operation termino termino_loop .)
    OR              reduce using rule 174 (termino_loop -> TIMES push_operation termino termino_loop .)
    RBRACKET        reduce using rule 174 (termino_loop -> TIMES push_operation termino termino_loop .)
    RPARENTHESIS    reduce using rule 174 (termino_loop -> TIMES push_operation termino termino_loop .)
    COMA            reduce using rule 174 (termino_loop -> TIMES push_operation termino termino_loop .)
    SEMICOLON       reduce using rule 174 (termino_loop -> TIMES push_operation termino termino_loop .)
    RBRACE          reduce using rule 174 (termino_loop -> TIMES push_operation termino termino_loop .)


state 359

    (175) termino_loop -> DIVIDE push_operation termino termino_loop .

    TIMES           reduce using rule 175 (termino_loop -> DIVIDE push_operation termino termino_loop .)
    DIVIDE          reduce using rule 175 (termino_loop -> DIVIDE push_operation termino termino_loop .)
    PLUS            reduce using rule 175 (termino_loop -> DIVIDE push_operation termino termino_loop .)
    MINUS           reduce using rule 175 (termino_loop -> DIVIDE push_operation termino termino_loop .)
    GTHAN           reduce using rule 175 (termino_loop -> DIVIDE push_operation termino termino_loop .)
    GETHAN          reduce using rule 175 (termino_loop -> DIVIDE push_operation termino termino_loop .)
    EQUAL           reduce using rule 175 (termino_loop -> DIVIDE push_operation termino termino_loop .)
    NOTEQUAL        reduce using rule 175 (termino_loop -> DIVIDE push_operation termino termino_loop .)
    LTHAN           reduce using rule 175 (termino_loop -> DIVIDE push_operation termino termino_loop .)
    LETHAN          reduce using rule 175 (termino_loop -> DIVIDE push_operation termino termino_loop .)
    AND             reduce using rule 175 (termino_loop -> DIVIDE push_operation termino termino_loop .)
    OR              reduce using rule 175 (termino_loop -> DIVIDE push_operation termino termino_loop .)
    RBRACKET        reduce using rule 175 (termino_loop -> DIVIDE push_operation termino termino_loop .)
    RPARENTHESIS    reduce using rule 175 (termino_loop -> DIVIDE push_operation termino termino_loop .)
    COMA            reduce using rule 175 (termino_loop -> DIVIDE push_operation termino termino_loop .)
    SEMICOLON       reduce using rule 175 (termino_loop -> DIVIDE push_operation termino termino_loop .)
    RBRACE          reduce using rule 175 (termino_loop -> DIVIDE push_operation termino termino_loop .)


state 360

    (177) factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom . factor_helper
    (17) factor_helper -> . empty
    (13) empty -> .

    TIMES           reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MINUS           reduce using rule 13 (empty -> .)
    GTHAN           reduce using rule 13 (empty -> .)
    GETHAN          reduce using rule 13 (empty -> .)
    EQUAL           reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    LTHAN           reduce using rule 13 (empty -> .)
    LETHAN          reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    RBRACKET        reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    COMA            reduce using rule 13 (empty -> .)
    SEMICOLON       reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 236
    factor_helper                  shift and go to state 391

state 361

    (25) pop_fake_bottom -> empty .

    TIMES           reduce using rule 25 (pop_fake_bottom -> empty .)
    DIVIDE          reduce using rule 25 (pop_fake_bottom -> empty .)
    PLUS            reduce using rule 25 (pop_fake_bottom -> empty .)
    MINUS           reduce using rule 25 (pop_fake_bottom -> empty .)
    GTHAN           reduce using rule 25 (pop_fake_bottom -> empty .)
    GETHAN          reduce using rule 25 (pop_fake_bottom -> empty .)
    EQUAL           reduce using rule 25 (pop_fake_bottom -> empty .)
    NOTEQUAL        reduce using rule 25 (pop_fake_bottom -> empty .)
    LTHAN           reduce using rule 25 (pop_fake_bottom -> empty .)
    LETHAN          reduce using rule 25 (pop_fake_bottom -> empty .)
    AND             reduce using rule 25 (pop_fake_bottom -> empty .)
    OR              reduce using rule 25 (pop_fake_bottom -> empty .)
    RBRACKET        reduce using rule 25 (pop_fake_bottom -> empty .)
    RPARENTHESIS    reduce using rule 25 (pop_fake_bottom -> empty .)
    COMA            reduce using rule 25 (pop_fake_bottom -> empty .)
    SEMICOLON       reduce using rule 25 (pop_fake_bottom -> empty .)
    RBRACE          reduce using rule 25 (pop_fake_bottom -> empty .)


state 362

    (6) expresion_helper -> empty .

    AND             reduce using rule 6 (expresion_helper -> empty .)
    OR              reduce using rule 6 (expresion_helper -> empty .)
    RBRACKET        reduce using rule 6 (expresion_helper -> empty .)
    RPARENTHESIS    reduce using rule 6 (expresion_helper -> empty .)
    COMA            reduce using rule 6 (expresion_helper -> empty .)
    SEMICOLON       reduce using rule 6 (expresion_helper -> empty .)
    RBRACE          reduce using rule 6 (expresion_helper -> empty .)


state 363

    (164) expresion_opt -> GETHAN push_operation exp expresion_helper .

    AND             reduce using rule 164 (expresion_opt -> GETHAN push_operation exp expresion_helper .)
    OR              reduce using rule 164 (expresion_opt -> GETHAN push_operation exp expresion_helper .)
    RBRACKET        reduce using rule 164 (expresion_opt -> GETHAN push_operation exp expresion_helper .)
    RPARENTHESIS    reduce using rule 164 (expresion_opt -> GETHAN push_operation exp expresion_helper .)
    COMA            reduce using rule 164 (expresion_opt -> GETHAN push_operation exp expresion_helper .)
    SEMICOLON       reduce using rule 164 (expresion_opt -> GETHAN push_operation exp expresion_helper .)
    RBRACE          reduce using rule 164 (expresion_opt -> GETHAN push_operation exp expresion_helper .)


state 364

    (163) expresion_opt -> GTHAN push_operation exp expresion_helper .

    AND             reduce using rule 163 (expresion_opt -> GTHAN push_operation exp expresion_helper .)
    OR              reduce using rule 163 (expresion_opt -> GTHAN push_operation exp expresion_helper .)
    RBRACKET        reduce using rule 163 (expresion_opt -> GTHAN push_operation exp expresion_helper .)
    RPARENTHESIS    reduce using rule 163 (expresion_opt -> GTHAN push_operation exp expresion_helper .)
    COMA            reduce using rule 163 (expresion_opt -> GTHAN push_operation exp expresion_helper .)
    SEMICOLON       reduce using rule 163 (expresion_opt -> GTHAN push_operation exp expresion_helper .)
    RBRACE          reduce using rule 163 (expresion_opt -> GTHAN push_operation exp expresion_helper .)


state 365

    (167) expresion_opt -> LTHAN push_operation exp expresion_helper .

    AND             reduce using rule 167 (expresion_opt -> LTHAN push_operation exp expresion_helper .)
    OR              reduce using rule 167 (expresion_opt -> LTHAN push_operation exp expresion_helper .)
    RBRACKET        reduce using rule 167 (expresion_opt -> LTHAN push_operation exp expresion_helper .)
    RPARENTHESIS    reduce using rule 167 (expresion_opt -> LTHAN push_operation exp expresion_helper .)
    COMA            reduce using rule 167 (expresion_opt -> LTHAN push_operation exp expresion_helper .)
    SEMICOLON       reduce using rule 167 (expresion_opt -> LTHAN push_operation exp expresion_helper .)
    RBRACE          reduce using rule 167 (expresion_opt -> LTHAN push_operation exp expresion_helper .)


state 366

    (168) expresion_opt -> LETHAN push_operation exp expresion_helper .

    AND             reduce using rule 168 (expresion_opt -> LETHAN push_operation exp expresion_helper .)
    OR              reduce using rule 168 (expresion_opt -> LETHAN push_operation exp expresion_helper .)
    RBRACKET        reduce using rule 168 (expresion_opt -> LETHAN push_operation exp expresion_helper .)
    RPARENTHESIS    reduce using rule 168 (expresion_opt -> LETHAN push_operation exp expresion_helper .)
    COMA            reduce using rule 168 (expresion_opt -> LETHAN push_operation exp expresion_helper .)
    SEMICOLON       reduce using rule 168 (expresion_opt -> LETHAN push_operation exp expresion_helper .)
    RBRACE          reduce using rule 168 (expresion_opt -> LETHAN push_operation exp expresion_helper .)


state 367

    (165) expresion_opt -> EQUAL push_operation exp expresion_helper .

    AND             reduce using rule 165 (expresion_opt -> EQUAL push_operation exp expresion_helper .)
    OR              reduce using rule 165 (expresion_opt -> EQUAL push_operation exp expresion_helper .)
    RBRACKET        reduce using rule 165 (expresion_opt -> EQUAL push_operation exp expresion_helper .)
    RPARENTHESIS    reduce using rule 165 (expresion_opt -> EQUAL push_operation exp expresion_helper .)
    COMA            reduce using rule 165 (expresion_opt -> EQUAL push_operation exp expresion_helper .)
    SEMICOLON       reduce using rule 165 (expresion_opt -> EQUAL push_operation exp expresion_helper .)
    RBRACE          reduce using rule 165 (expresion_opt -> EQUAL push_operation exp expresion_helper .)


state 368

    (166) expresion_opt -> NOTEQUAL push_operation exp expresion_helper .

    AND             reduce using rule 166 (expresion_opt -> NOTEQUAL push_operation exp expresion_helper .)
    OR              reduce using rule 166 (expresion_opt -> NOTEQUAL push_operation exp expresion_helper .)
    RBRACKET        reduce using rule 166 (expresion_opt -> NOTEQUAL push_operation exp expresion_helper .)
    RPARENTHESIS    reduce using rule 166 (expresion_opt -> NOTEQUAL push_operation exp expresion_helper .)
    COMA            reduce using rule 166 (expresion_opt -> NOTEQUAL push_operation exp expresion_helper .)
    SEMICOLON       reduce using rule 166 (expresion_opt -> NOTEQUAL push_operation exp expresion_helper .)
    RBRACE          reduce using rule 166 (expresion_opt -> NOTEQUAL push_operation exp expresion_helper .)


state 369

    (60) ini_prim_v -> ASSIGN LBRACE logica . ini_prim_v_loop RBRACE
    (61) ini_prim_v_loop -> . COMA logica ini_prim_v_loop
    (62) ini_prim_v_loop -> . empty
    (13) empty -> .

    COMA            shift and go to state 394
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 392
    ini_prim_v_loop                shift and go to state 393

state 370

    (171) exp_loop -> MINUS push_operation exp exp_loop .

    PLUS            reduce using rule 171 (exp_loop -> MINUS push_operation exp exp_loop .)
    MINUS           reduce using rule 171 (exp_loop -> MINUS push_operation exp exp_loop .)
    GTHAN           reduce using rule 171 (exp_loop -> MINUS push_operation exp exp_loop .)
    GETHAN          reduce using rule 171 (exp_loop -> MINUS push_operation exp exp_loop .)
    EQUAL           reduce using rule 171 (exp_loop -> MINUS push_operation exp exp_loop .)
    NOTEQUAL        reduce using rule 171 (exp_loop -> MINUS push_operation exp exp_loop .)
    LTHAN           reduce using rule 171 (exp_loop -> MINUS push_operation exp exp_loop .)
    LETHAN          reduce using rule 171 (exp_loop -> MINUS push_operation exp exp_loop .)
    AND             reduce using rule 171 (exp_loop -> MINUS push_operation exp exp_loop .)
    OR              reduce using rule 171 (exp_loop -> MINUS push_operation exp exp_loop .)
    RBRACKET        reduce using rule 171 (exp_loop -> MINUS push_operation exp exp_loop .)
    RPARENTHESIS    reduce using rule 171 (exp_loop -> MINUS push_operation exp exp_loop .)
    COMA            reduce using rule 171 (exp_loop -> MINUS push_operation exp exp_loop .)
    SEMICOLON       reduce using rule 171 (exp_loop -> MINUS push_operation exp exp_loop .)
    RBRACE          reduce using rule 171 (exp_loop -> MINUS push_operation exp exp_loop .)


state 371

    (170) exp_loop -> PLUS push_operation exp exp_loop .

    PLUS            reduce using rule 170 (exp_loop -> PLUS push_operation exp exp_loop .)
    MINUS           reduce using rule 170 (exp_loop -> PLUS push_operation exp exp_loop .)
    GTHAN           reduce using rule 170 (exp_loop -> PLUS push_operation exp exp_loop .)
    GETHAN          reduce using rule 170 (exp_loop -> PLUS push_operation exp exp_loop .)
    EQUAL           reduce using rule 170 (exp_loop -> PLUS push_operation exp exp_loop .)
    NOTEQUAL        reduce using rule 170 (exp_loop -> PLUS push_operation exp exp_loop .)
    LTHAN           reduce using rule 170 (exp_loop -> PLUS push_operation exp exp_loop .)
    LETHAN          reduce using rule 170 (exp_loop -> PLUS push_operation exp exp_loop .)
    AND             reduce using rule 170 (exp_loop -> PLUS push_operation exp exp_loop .)
    OR              reduce using rule 170 (exp_loop -> PLUS push_operation exp exp_loop .)
    RBRACKET        reduce using rule 170 (exp_loop -> PLUS push_operation exp exp_loop .)
    RPARENTHESIS    reduce using rule 170 (exp_loop -> PLUS push_operation exp exp_loop .)
    COMA            reduce using rule 170 (exp_loop -> PLUS push_operation exp exp_loop .)
    SEMICOLON       reduce using rule 170 (exp_loop -> PLUS push_operation exp exp_loop .)
    RBRACE          reduce using rule 170 (exp_loop -> PLUS push_operation exp exp_loop .)


state 372

    (75) fgra_atr_end -> exp COMA . exp COMA color RPARENTHESIS
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 395
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 373

    (71) fgra_atr -> CUAD LPARENTHESIS exp COMA . fgra_atr_end
    (75) fgra_atr_end -> . exp COMA exp COMA color RPARENTHESIS
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 328
    termino                        shift and go to state 120
    empty                          shift and go to state 117
    fgra_atr_end                   shift and go to state 396

state 374

    (72) fgra_atr -> CIRC LPARENTHESIS exp COMA . fgra_atr_end
    (75) fgra_atr_end -> . exp COMA exp COMA color RPARENTHESIS
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 328
    termino                        shift and go to state 120
    empty                          shift and go to state 117
    fgra_atr_end                   shift and go to state 397

state 375

    (73) fgra_atr -> RECT LPARENTHESIS exp COMA . exp COMA fgra_atr_end
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 398
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 376

    (74) fgra_atr -> TRIANG LPARENTHESIS exp COMA . exp COMA exp COMA exp COMA fgra_atr_end
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 399
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 377

    (64) ini_fgra_v -> ASSIGN LBRACE fgra_nva . ini_fgras_v_loop RBRACE
    (66) ini_fgras_v_loop -> . COMA fgra_nva ini_fgras_v_loop
    (67) ini_fgras_v_loop -> . empty
    (13) empty -> .

    COMA            shift and go to state 401
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 400
    ini_fgras_v_loop               shift and go to state 402

state 378

    (209) accion_pincel_opt -> GRAPH LPARENTHESIS CTEFUNCION COMA exp .

    RPARENTHESIS    reduce using rule 209 (accion_pincel_opt -> GRAPH LPARENTHESIS CTEFUNCION COMA exp .)


state 379

    (210) accion_pincel_opt_end -> LPARENTHESIS expresion COMA expresion .

    RPARENTHESIS    reduce using rule 210 (accion_pincel_opt_end -> LPARENTHESIS expresion COMA expresion .)


state 380

    (155) llamada_loop -> COMA exp llamada_loop .

    RPARENTHESIS    reduce using rule 155 (llamada_loop -> COMA exp llamada_loop .)


state 381

    (136) asignacion -> ID check_variable asignacion_opt ASSIGN push_operation asignacion_opt_2 SEMICOLON .

    VAR             reduce using rule 136 (asignacion -> ID check_variable asignacion_opt ASSIGN push_operation asignacion_opt_2 SEMICOLON .)
    ID              reduce using rule 136 (asignacion -> ID check_variable asignacion_opt ASSIGN push_operation asignacion_opt_2 SEMICOLON .)
    IF              reduce using rule 136 (asignacion -> ID check_variable asignacion_opt ASSIGN push_operation asignacion_opt_2 SEMICOLON .)
    WHILE           reduce using rule 136 (asignacion -> ID check_variable asignacion_opt ASSIGN push_operation asignacion_opt_2 SEMICOLON .)
    PRINT           reduce using rule 136 (asignacion -> ID check_variable asignacion_opt ASSIGN push_operation asignacion_opt_2 SEMICOLON .)
    READ            reduce using rule 136 (asignacion -> ID check_variable asignacion_opt ASSIGN push_operation asignacion_opt_2 SEMICOLON .)
    COMMENT         reduce using rule 136 (asignacion -> ID check_variable asignacion_opt ASSIGN push_operation asignacion_opt_2 SEMICOLON .)
    RBRACE          reduce using rule 136 (asignacion -> ID check_variable asignacion_opt ASSIGN push_operation asignacion_opt_2 SEMICOLON .)
    RETURN          reduce using rule 136 (asignacion -> ID check_variable asignacion_opt ASSIGN push_operation asignacion_opt_2 SEMICOLON .)


state 382

    (145) condicion_loop_opt -> ELIF condicion_loop .

    ELSE            reduce using rule 145 (condicion_loop_opt -> ELIF condicion_loop .)
    VAR             reduce using rule 145 (condicion_loop_opt -> ELIF condicion_loop .)
    ID              reduce using rule 145 (condicion_loop_opt -> ELIF condicion_loop .)
    IF              reduce using rule 145 (condicion_loop_opt -> ELIF condicion_loop .)
    WHILE           reduce using rule 145 (condicion_loop_opt -> ELIF condicion_loop .)
    PRINT           reduce using rule 145 (condicion_loop_opt -> ELIF condicion_loop .)
    READ            reduce using rule 145 (condicion_loop_opt -> ELIF condicion_loop .)
    COMMENT         reduce using rule 145 (condicion_loop_opt -> ELIF condicion_loop .)
    RBRACE          reduce using rule 145 (condicion_loop_opt -> ELIF condicion_loop .)
    RETURN          reduce using rule 145 (condicion_loop_opt -> ELIF condicion_loop .)


state 383

    (22) rutinas -> RUTINA FuncTypeNext rutina_opt COLON ID saveFuncName LPARENTHESIS parametros RPARENTHESIS saveFuncParam bloque_rutina . cleanFunc rutinas_loop
    (10) cleanFunc -> . empty
    (13) empty -> .

    RUTINA          reduce using rule 13 (empty -> .)
    MAIN            reduce using rule 13 (empty -> .)

    cleanFunc                      shift and go to state 403
    empty                          shift and go to state 404

state 384

    (108) bloque_rutina -> LBRACE . bloque_rutina_opt bloque_rutina_loop bloque_rutina_opt_2 RBRACE
    (109) bloque_rutina_opt -> . vars
    (110) bloque_rutina_opt -> . empty
    (16) vars -> . VAR tipo SEMICOLON vars_loop
    (13) empty -> .

    VAR             shift and go to state 8
    ID              reduce using rule 13 (empty -> .)
    IF              reduce using rule 13 (empty -> .)
    WHILE           reduce using rule 13 (empty -> .)
    PRINT           reduce using rule 13 (empty -> .)
    READ            reduce using rule 13 (empty -> .)
    COMMENT         reduce using rule 13 (empty -> .)
    RETURN          reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    bloque_rutina_opt              shift and go to state 406
    vars                           shift and go to state 407
    empty                          shift and go to state 405

state 385

    (98) param_list -> paramTypeNext tipo_param COLON ID . paramID param_list_loop
    (30) paramID -> . empty
    (13) empty -> .

    COMA            reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)

    empty                          shift and go to state 408
    paramID                        shift and go to state 409

state 386

    (189) idllamada_opt -> LBRACKET expresion RBRACKET .

    TIMES           reduce using rule 189 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    DIVIDE          reduce using rule 189 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    PLUS            reduce using rule 189 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    MINUS           reduce using rule 189 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    GTHAN           reduce using rule 189 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    GETHAN          reduce using rule 189 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    EQUAL           reduce using rule 189 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    NOTEQUAL        reduce using rule 189 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    LTHAN           reduce using rule 189 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    LETHAN          reduce using rule 189 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    AND             reduce using rule 189 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    OR              reduce using rule 189 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    RBRACKET        reduce using rule 189 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    RPARENTHESIS    reduce using rule 189 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    COMA            reduce using rule 189 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    SEMICOLON       reduce using rule 189 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    RBRACE          reduce using rule 189 (idllamada_opt -> LBRACKET expresion RBRACKET .)


state 387

    (190) idllamada_opt_loop -> COMA exp . idllamada_opt_loop
    (190) idllamada_opt_loop -> . COMA exp idllamada_opt_loop
    (191) idllamada_opt_loop -> . empty
    (13) empty -> .

    COMA            shift and go to state 354
    RPARENTHESIS    reduce using rule 13 (empty -> .)

    empty                          shift and go to state 388
    idllamada_opt_loop             shift and go to state 410

state 388

    (191) idllamada_opt_loop -> empty .

    RPARENTHESIS    reduce using rule 191 (idllamada_opt_loop -> empty .)


state 389

    (187) idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop . RPARENTHESIS

    RPARENTHESIS    shift and go to state 411


state 390

    (188) idllamada_opt -> LPARENTHESIS idllamada_opt_loop RPARENTHESIS .

    TIMES           reduce using rule 188 (idllamada_opt -> LPARENTHESIS idllamada_opt_loop RPARENTHESIS .)
    DIVIDE          reduce using rule 188 (idllamada_opt -> LPARENTHESIS idllamada_opt_loop RPARENTHESIS .)
    PLUS            reduce using rule 188 (idllamada_opt -> LPARENTHESIS idllamada_opt_loop RPARENTHESIS .)
    MINUS           reduce using rule 188 (idllamada_opt -> LPARENTHESIS idllamada_opt_loop RPARENTHESIS .)
    GTHAN           reduce using rule 188 (idllamada_opt -> LPARENTHESIS idllamada_opt_loop RPARENTHESIS .)
    GETHAN          reduce using rule 188 (idllamada_opt -> LPARENTHESIS idllamada_opt_loop RPARENTHESIS .)
    EQUAL           reduce using rule 188 (idllamada_opt -> LPARENTHESIS idllamada_opt_loop RPARENTHESIS .)
    NOTEQUAL        reduce using rule 188 (idllamada_opt -> LPARENTHESIS idllamada_opt_loop RPARENTHESIS .)
    LTHAN           reduce using rule 188 (idllamada_opt -> LPARENTHESIS idllamada_opt_loop RPARENTHESIS .)
    LETHAN          reduce using rule 188 (idllamada_opt -> LPARENTHESIS idllamada_opt_loop RPARENTHESIS .)
    AND             reduce using rule 188 (idllamada_opt -> LPARENTHESIS idllamada_opt_loop RPARENTHESIS .)
    OR              reduce using rule 188 (idllamada_opt -> LPARENTHESIS idllamada_opt_loop RPARENTHESIS .)
    RBRACKET        reduce using rule 188 (idllamada_opt -> LPARENTHESIS idllamada_opt_loop RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 188 (idllamada_opt -> LPARENTHESIS idllamada_opt_loop RPARENTHESIS .)
    COMA            reduce using rule 188 (idllamada_opt -> LPARENTHESIS idllamada_opt_loop RPARENTHESIS .)
    SEMICOLON       reduce using rule 188 (idllamada_opt -> LPARENTHESIS idllamada_opt_loop RPARENTHESIS .)
    RBRACE          reduce using rule 188 (idllamada_opt -> LPARENTHESIS idllamada_opt_loop RPARENTHESIS .)


state 391

    (177) factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper .

    TIMES           reduce using rule 177 (factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper .)
    DIVIDE          reduce using rule 177 (factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper .)
    PLUS            reduce using rule 177 (factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper .)
    MINUS           reduce using rule 177 (factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper .)
    GTHAN           reduce using rule 177 (factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper .)
    GETHAN          reduce using rule 177 (factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper .)
    EQUAL           reduce using rule 177 (factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper .)
    NOTEQUAL        reduce using rule 177 (factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper .)
    LTHAN           reduce using rule 177 (factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper .)
    LETHAN          reduce using rule 177 (factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper .)
    AND             reduce using rule 177 (factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper .)
    OR              reduce using rule 177 (factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper .)
    COMA            reduce using rule 177 (factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper .)
    RBRACE          reduce using rule 177 (factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper .)
    RPARENTHESIS    reduce using rule 177 (factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper .)
    RBRACKET        reduce using rule 177 (factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper .)
    SEMICOLON       reduce using rule 177 (factor -> LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper .)


state 392

    (62) ini_prim_v_loop -> empty .

    RBRACE          reduce using rule 62 (ini_prim_v_loop -> empty .)


state 393

    (60) ini_prim_v -> ASSIGN LBRACE logica ini_prim_v_loop . RBRACE

    RBRACE          shift and go to state 412


state 394

    (61) ini_prim_v_loop -> COMA . logica ini_prim_v_loop
    (157) logica -> . expresion logica_loop
    (161) expresion -> . exp expresion_opt logica_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    expresion                      shift and go to state 119
    factor                         shift and go to state 113
    exp                            shift and go to state 115
    termino                        shift and go to state 120
    empty                          shift and go to state 117
    logica                         shift and go to state 413

state 395

    (75) fgra_atr_end -> exp COMA exp . COMA color RPARENTHESIS

    COMA            shift and go to state 414


state 396

    (71) fgra_atr -> CUAD LPARENTHESIS exp COMA fgra_atr_end .

    COMA            reduce using rule 71 (fgra_atr -> CUAD LPARENTHESIS exp COMA fgra_atr_end .)
    SEMICOLON       reduce using rule 71 (fgra_atr -> CUAD LPARENTHESIS exp COMA fgra_atr_end .)
    RBRACE          reduce using rule 71 (fgra_atr -> CUAD LPARENTHESIS exp COMA fgra_atr_end .)


state 397

    (72) fgra_atr -> CIRC LPARENTHESIS exp COMA fgra_atr_end .

    COMA            reduce using rule 72 (fgra_atr -> CIRC LPARENTHESIS exp COMA fgra_atr_end .)
    SEMICOLON       reduce using rule 72 (fgra_atr -> CIRC LPARENTHESIS exp COMA fgra_atr_end .)
    RBRACE          reduce using rule 72 (fgra_atr -> CIRC LPARENTHESIS exp COMA fgra_atr_end .)


state 398

    (73) fgra_atr -> RECT LPARENTHESIS exp COMA exp . COMA fgra_atr_end

    COMA            shift and go to state 415


state 399

    (74) fgra_atr -> TRIANG LPARENTHESIS exp COMA exp . COMA exp COMA exp COMA fgra_atr_end

    COMA            shift and go to state 416


state 400

    (67) ini_fgras_v_loop -> empty .

    RBRACE          reduce using rule 67 (ini_fgras_v_loop -> empty .)


state 401

    (66) ini_fgras_v_loop -> COMA . fgra_nva ini_fgras_v_loop
    (68) fgra_nva -> . NUEVO fgra_atr
    (69) fgra_nva -> . empty
    (13) empty -> .

    NUEVO           shift and go to state 125
    COMA            reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 124
    fgra_nva                       shift and go to state 417

state 402

    (64) ini_fgra_v -> ASSIGN LBRACE fgra_nva ini_fgras_v_loop . RBRACE

    RBRACE          shift and go to state 418


state 403

    (22) rutinas -> RUTINA FuncTypeNext rutina_opt COLON ID saveFuncName LPARENTHESIS parametros RPARENTHESIS saveFuncParam bloque_rutina cleanFunc . rutinas_loop
    (31) rutinas_loop -> . rutinas
    (32) rutinas_loop -> . empty
    (22) rutinas -> . RUTINA FuncTypeNext rutina_opt COLON ID saveFuncName LPARENTHESIS parametros RPARENTHESIS saveFuncParam bloque_rutina cleanFunc rutinas_loop
    (23) rutinas -> . empty
    (13) empty -> .

    RUTINA          shift and go to state 12
    MAIN            reduce using rule 13 (empty -> .)

    rutinas                        shift and go to state 421
    empty                          shift and go to state 420
    rutinas_loop                   shift and go to state 419

state 404

    (10) cleanFunc -> empty .

    RUTINA          reduce using rule 10 (cleanFunc -> empty .)
    MAIN            reduce using rule 10 (cleanFunc -> empty .)


state 405

    (110) bloque_rutina_opt -> empty .

    ID              reduce using rule 110 (bloque_rutina_opt -> empty .)
    IF              reduce using rule 110 (bloque_rutina_opt -> empty .)
    WHILE           reduce using rule 110 (bloque_rutina_opt -> empty .)
    PRINT           reduce using rule 110 (bloque_rutina_opt -> empty .)
    READ            reduce using rule 110 (bloque_rutina_opt -> empty .)
    COMMENT         reduce using rule 110 (bloque_rutina_opt -> empty .)
    RETURN          reduce using rule 110 (bloque_rutina_opt -> empty .)
    RBRACE          reduce using rule 110 (bloque_rutina_opt -> empty .)


state 406

    (108) bloque_rutina -> LBRACE bloque_rutina_opt . bloque_rutina_loop bloque_rutina_opt_2 RBRACE
    (111) bloque_rutina_loop -> . estatuto bloque_rutina_loop
    (112) bloque_rutina_loop -> . empty
    (118) estatuto -> . asignacion
    (119) estatuto -> . condicion
    (120) estatuto -> . ciclo
    (121) estatuto -> . impresion
    (122) estatuto -> . lectura
    (123) estatuto -> . accion
    (124) estatuto -> . llamada
    (125) estatuto -> . comentario
    (13) empty -> .
    (136) asignacion -> . ID check_variable asignacion_opt ASSIGN push_operation asignacion_opt_2 SEMICOLON
    (143) condicion -> . IF condicion_loop condicion_opt
    (149) ciclo -> . WHILE LPARENTHESIS logica RPARENTHESIS bloque
    (150) impresion -> . PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON
    (151) lectura -> . READ LPARENTHESIS RPARENTHESIS
    (192) accion -> . ID POINT accion_opt SEMICOLON
    (152) llamada -> . ID check_function LPARENTHESIS llamada_param RPARENTHESIS SEMICOLON
    (135) comentario -> . COMMENT

    RETURN          reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)
    ID              shift and go to state 70
    IF              shift and go to state 71
    WHILE           shift and go to state 84
    PRINT           shift and go to state 83
    READ            shift and go to state 75
    COMMENT         shift and go to state 80

    llamada                        shift and go to state 290
    ciclo                          shift and go to state 291
    bloque_rutina_loop             shift and go to state 423
    condicion                      shift and go to state 294
    empty                          shift and go to state 422
    accion                         shift and go to state 295
    comentario                     shift and go to state 296
    impresion                      shift and go to state 298
    asignacion                     shift and go to state 299
    lectura                        shift and go to state 293
    estatuto                       shift and go to state 424

state 407

    (109) bloque_rutina_opt -> vars .

    ID              reduce using rule 109 (bloque_rutina_opt -> vars .)
    IF              reduce using rule 109 (bloque_rutina_opt -> vars .)
    WHILE           reduce using rule 109 (bloque_rutina_opt -> vars .)
    PRINT           reduce using rule 109 (bloque_rutina_opt -> vars .)
    READ            reduce using rule 109 (bloque_rutina_opt -> vars .)
    COMMENT         reduce using rule 109 (bloque_rutina_opt -> vars .)
    RETURN          reduce using rule 109 (bloque_rutina_opt -> vars .)
    RBRACE          reduce using rule 109 (bloque_rutina_opt -> vars .)


state 408

    (30) paramID -> empty .

    COMA            reduce using rule 30 (paramID -> empty .)
    RPARENTHESIS    reduce using rule 30 (paramID -> empty .)


state 409

    (98) param_list -> paramTypeNext tipo_param COLON ID paramID . param_list_loop
    (100) param_list_loop -> . COMA param_list
    (101) param_list_loop -> . empty
    (13) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
    COMA            shift and go to state 425
    RPARENTHESIS    reduce using rule 13 (empty -> .)

  ! COMA            [ reduce using rule 13 (empty -> .) ]

    param_list_loop                shift and go to state 426
    empty                          shift and go to state 427

state 410

    (190) idllamada_opt_loop -> COMA exp idllamada_opt_loop .

    RPARENTHESIS    reduce using rule 190 (idllamada_opt_loop -> COMA exp idllamada_opt_loop .)


state 411

    (187) idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .

    TIMES           reduce using rule 187 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    DIVIDE          reduce using rule 187 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    PLUS            reduce using rule 187 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    MINUS           reduce using rule 187 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    GTHAN           reduce using rule 187 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    GETHAN          reduce using rule 187 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    EQUAL           reduce using rule 187 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    NOTEQUAL        reduce using rule 187 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    LTHAN           reduce using rule 187 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    LETHAN          reduce using rule 187 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    AND             reduce using rule 187 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    OR              reduce using rule 187 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    RBRACKET        reduce using rule 187 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 187 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    COMA            reduce using rule 187 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    SEMICOLON       reduce using rule 187 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    RBRACE          reduce using rule 187 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)


state 412

    (60) ini_prim_v -> ASSIGN LBRACE logica ini_prim_v_loop RBRACE .

    COMA            reduce using rule 60 (ini_prim_v -> ASSIGN LBRACE logica ini_prim_v_loop RBRACE .)
    SEMICOLON       reduce using rule 60 (ini_prim_v -> ASSIGN LBRACE logica ini_prim_v_loop RBRACE .)


state 413

    (61) ini_prim_v_loop -> COMA logica . ini_prim_v_loop
    (61) ini_prim_v_loop -> . COMA logica ini_prim_v_loop
    (62) ini_prim_v_loop -> . empty
    (13) empty -> .

    COMA            shift and go to state 394
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 392
    ini_prim_v_loop                shift and go to state 428

state 414

    (75) fgra_atr_end -> exp COMA exp COMA . color RPARENTHESIS
    (211) color -> . CTECOLOR
    (212) color -> . CTEHEXCOLOR

    CTECOLOR        shift and go to state 280
    CTEHEXCOLOR     shift and go to state 279

    color                          shift and go to state 429

state 415

    (73) fgra_atr -> RECT LPARENTHESIS exp COMA exp COMA . fgra_atr_end
    (75) fgra_atr_end -> . exp COMA exp COMA color RPARENTHESIS
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 328
    termino                        shift and go to state 120
    empty                          shift and go to state 117
    fgra_atr_end                   shift and go to state 430

state 416

    (74) fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA . exp COMA exp COMA fgra_atr_end
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 431
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 417

    (66) ini_fgras_v_loop -> COMA fgra_nva . ini_fgras_v_loop
    (66) ini_fgras_v_loop -> . COMA fgra_nva ini_fgras_v_loop
    (67) ini_fgras_v_loop -> . empty
    (13) empty -> .

    COMA            shift and go to state 401
    RBRACE          reduce using rule 13 (empty -> .)

    empty                          shift and go to state 400
    ini_fgras_v_loop               shift and go to state 432

state 418

    (64) ini_fgra_v -> ASSIGN LBRACE fgra_nva ini_fgras_v_loop RBRACE .

    COMA            reduce using rule 64 (ini_fgra_v -> ASSIGN LBRACE fgra_nva ini_fgras_v_loop RBRACE .)
    SEMICOLON       reduce using rule 64 (ini_fgra_v -> ASSIGN LBRACE fgra_nva ini_fgras_v_loop RBRACE .)


state 419

    (22) rutinas -> RUTINA FuncTypeNext rutina_opt COLON ID saveFuncName LPARENTHESIS parametros RPARENTHESIS saveFuncParam bloque_rutina cleanFunc rutinas_loop .

    MAIN            reduce using rule 22 (rutinas -> RUTINA FuncTypeNext rutina_opt COLON ID saveFuncName LPARENTHESIS parametros RPARENTHESIS saveFuncParam bloque_rutina cleanFunc rutinas_loop .)


state 420

    (32) rutinas_loop -> empty .
    (23) rutinas -> empty .

  ! reduce/reduce conflict for MAIN resolved using rule 23 (rutinas -> empty .)
    MAIN            reduce using rule 23 (rutinas -> empty .)

  ! MAIN            [ reduce using rule 32 (rutinas_loop -> empty .) ]


state 421

    (31) rutinas_loop -> rutinas .

    MAIN            reduce using rule 31 (rutinas_loop -> rutinas .)


state 422

    (112) bloque_rutina_loop -> empty .

    RETURN          reduce using rule 112 (bloque_rutina_loop -> empty .)
    RBRACE          reduce using rule 112 (bloque_rutina_loop -> empty .)


state 423

    (108) bloque_rutina -> LBRACE bloque_rutina_opt bloque_rutina_loop . bloque_rutina_opt_2 RBRACE
    (113) bloque_rutina_opt_2 -> . RETURN logica SEMICOLON
    (114) bloque_rutina_opt_2 -> . empty
    (13) empty -> .

    RETURN          shift and go to state 434
    RBRACE          reduce using rule 13 (empty -> .)

    bloque_rutina_opt_2            shift and go to state 433
    empty                          shift and go to state 435

state 424

    (111) bloque_rutina_loop -> estatuto . bloque_rutina_loop
    (111) bloque_rutina_loop -> . estatuto bloque_rutina_loop
    (112) bloque_rutina_loop -> . empty
    (118) estatuto -> . asignacion
    (119) estatuto -> . condicion
    (120) estatuto -> . ciclo
    (121) estatuto -> . impresion
    (122) estatuto -> . lectura
    (123) estatuto -> . accion
    (124) estatuto -> . llamada
    (125) estatuto -> . comentario
    (13) empty -> .
    (136) asignacion -> . ID check_variable asignacion_opt ASSIGN push_operation asignacion_opt_2 SEMICOLON
    (143) condicion -> . IF condicion_loop condicion_opt
    (149) ciclo -> . WHILE LPARENTHESIS logica RPARENTHESIS bloque
    (150) impresion -> . PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON
    (151) lectura -> . READ LPARENTHESIS RPARENTHESIS
    (192) accion -> . ID POINT accion_opt SEMICOLON
    (152) llamada -> . ID check_function LPARENTHESIS llamada_param RPARENTHESIS SEMICOLON
    (135) comentario -> . COMMENT

    RETURN          reduce using rule 13 (empty -> .)
    RBRACE          reduce using rule 13 (empty -> .)
    ID              shift and go to state 70
    IF              shift and go to state 71
    WHILE           shift and go to state 84
    PRINT           shift and go to state 83
    READ            shift and go to state 75
    COMMENT         shift and go to state 80

    llamada                        shift and go to state 290
    ciclo                          shift and go to state 291
    bloque_rutina_loop             shift and go to state 436
    condicion                      shift and go to state 294
    empty                          shift and go to state 422
    accion                         shift and go to state 295
    comentario                     shift and go to state 296
    impresion                      shift and go to state 298
    asignacion                     shift and go to state 299
    lectura                        shift and go to state 293
    estatuto                       shift and go to state 424

state 425

    (100) param_list_loop -> COMA . param_list
    (98) param_list -> . paramTypeNext tipo_param COLON ID paramID param_list_loop
    (99) param_list -> . empty
    (33) paramTypeNext -> . empty
    (13) empty -> .

    COMA            reduce using rule 13 (empty -> .)
    RPARENTHESIS    reduce using rule 13 (empty -> .)
    TYPEINT         reduce using rule 13 (empty -> .)
    TYPEDOUBLE      reduce using rule 13 (empty -> .)
    TYPEBOOL        reduce using rule 13 (empty -> .)
    TYPESTRING      reduce using rule 13 (empty -> .)
    PINCEL          reduce using rule 13 (empty -> .)
    CUAD            reduce using rule 13 (empty -> .)
    RECT            reduce using rule 13 (empty -> .)
    CIRC            reduce using rule 13 (empty -> .)
    TRIANG          reduce using rule 13 (empty -> .)

    paramTypeNext                  shift and go to state 232
    empty                          shift and go to state 437
    param_list                     shift and go to state 438

state 426

    (98) param_list -> paramTypeNext tipo_param COLON ID paramID param_list_loop .

    COMA            reduce using rule 98 (param_list -> paramTypeNext tipo_param COLON ID paramID param_list_loop .)
    RPARENTHESIS    reduce using rule 98 (param_list -> paramTypeNext tipo_param COLON ID paramID param_list_loop .)


state 427

    (101) param_list_loop -> empty .

    COMA            reduce using rule 101 (param_list_loop -> empty .)
    RPARENTHESIS    reduce using rule 101 (param_list_loop -> empty .)


state 428

    (61) ini_prim_v_loop -> COMA logica ini_prim_v_loop .

    RBRACE          reduce using rule 61 (ini_prim_v_loop -> COMA logica ini_prim_v_loop .)


state 429

    (75) fgra_atr_end -> exp COMA exp COMA color . RPARENTHESIS

    RPARENTHESIS    shift and go to state 439


state 430

    (73) fgra_atr -> RECT LPARENTHESIS exp COMA exp COMA fgra_atr_end .

    COMA            reduce using rule 73 (fgra_atr -> RECT LPARENTHESIS exp COMA exp COMA fgra_atr_end .)
    SEMICOLON       reduce using rule 73 (fgra_atr -> RECT LPARENTHESIS exp COMA exp COMA fgra_atr_end .)
    RBRACE          reduce using rule 73 (fgra_atr -> RECT LPARENTHESIS exp COMA exp COMA fgra_atr_end .)


state 431

    (74) fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp . COMA exp COMA fgra_atr_end

    COMA            shift and go to state 440


state 432

    (66) ini_fgras_v_loop -> COMA fgra_nva ini_fgras_v_loop .

    RBRACE          reduce using rule 66 (ini_fgras_v_loop -> COMA fgra_nva ini_fgras_v_loop .)


state 433

    (108) bloque_rutina -> LBRACE bloque_rutina_opt bloque_rutina_loop bloque_rutina_opt_2 . RBRACE

    RBRACE          shift and go to state 441


state 434

    (113) bloque_rutina_opt_2 -> RETURN . logica SEMICOLON
    (157) logica -> . expresion logica_loop
    (161) expresion -> . exp expresion_opt logica_helper
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    expresion                      shift and go to state 119
    factor                         shift and go to state 113
    exp                            shift and go to state 115
    termino                        shift and go to state 120
    empty                          shift and go to state 117
    logica                         shift and go to state 442

state 435

    (114) bloque_rutina_opt_2 -> empty .

    RBRACE          reduce using rule 114 (bloque_rutina_opt_2 -> empty .)


state 436

    (111) bloque_rutina_loop -> estatuto bloque_rutina_loop .

    RETURN          reduce using rule 111 (bloque_rutina_loop -> estatuto bloque_rutina_loop .)
    RBRACE          reduce using rule 111 (bloque_rutina_loop -> estatuto bloque_rutina_loop .)


state 437

    (99) param_list -> empty .
    (33) paramTypeNext -> empty .

    COMA            reduce using rule 99 (param_list -> empty .)
    RPARENTHESIS    reduce using rule 99 (param_list -> empty .)
    TYPEINT         reduce using rule 33 (paramTypeNext -> empty .)
    TYPEDOUBLE      reduce using rule 33 (paramTypeNext -> empty .)
    TYPEBOOL        reduce using rule 33 (paramTypeNext -> empty .)
    TYPESTRING      reduce using rule 33 (paramTypeNext -> empty .)
    PINCEL          reduce using rule 33 (paramTypeNext -> empty .)
    CUAD            reduce using rule 33 (paramTypeNext -> empty .)
    RECT            reduce using rule 33 (paramTypeNext -> empty .)
    CIRC            reduce using rule 33 (paramTypeNext -> empty .)
    TRIANG          reduce using rule 33 (paramTypeNext -> empty .)


state 438

    (100) param_list_loop -> COMA param_list .

    COMA            reduce using rule 100 (param_list_loop -> COMA param_list .)
    RPARENTHESIS    reduce using rule 100 (param_list_loop -> COMA param_list .)


state 439

    (75) fgra_atr_end -> exp COMA exp COMA color RPARENTHESIS .

    COMA            reduce using rule 75 (fgra_atr_end -> exp COMA exp COMA color RPARENTHESIS .)
    SEMICOLON       reduce using rule 75 (fgra_atr_end -> exp COMA exp COMA color RPARENTHESIS .)
    RBRACE          reduce using rule 75 (fgra_atr_end -> exp COMA exp COMA color RPARENTHESIS .)


state 440

    (74) fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA . exp COMA fgra_atr_end
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 443
    termino                        shift and go to state 120
    empty                          shift and go to state 117

state 441

    (108) bloque_rutina -> LBRACE bloque_rutina_opt bloque_rutina_loop bloque_rutina_opt_2 RBRACE .

    RUTINA          reduce using rule 108 (bloque_rutina -> LBRACE bloque_rutina_opt bloque_rutina_loop bloque_rutina_opt_2 RBRACE .)
    MAIN            reduce using rule 108 (bloque_rutina -> LBRACE bloque_rutina_opt bloque_rutina_loop bloque_rutina_opt_2 RBRACE .)


state 442

    (113) bloque_rutina_opt_2 -> RETURN logica . SEMICOLON

    SEMICOLON       shift and go to state 444


state 443

    (74) fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp . COMA fgra_atr_end

    COMA            shift and go to state 445


state 444

    (113) bloque_rutina_opt_2 -> RETURN logica SEMICOLON .

    RBRACE          reduce using rule 113 (bloque_rutina_opt_2 -> RETURN logica SEMICOLON .)


state 445

    (74) fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA . fgra_atr_end
    (75) fgra_atr_end -> . exp COMA exp COMA color RPARENTHESIS
    (169) exp -> . termino exp_loop
    (173) termino -> . factor termino_loop exp_helper
    (177) factor -> . LPARENTHESIS push_fake_bottom expresion RPARENTHESIS pop_fake_bottom factor_helper
    (178) factor -> . factor_opt factor_opt_2 factor_helper
    (179) factor_opt -> . PLUS
    (180) factor_opt -> . MINUS
    (181) factor_opt -> . empty
    (13) empty -> .

    LPARENTHESIS    shift and go to state 114
    PLUS            shift and go to state 116
    MINUS           shift and go to state 121
    STRING          reduce using rule 13 (empty -> .)
    INT             reduce using rule 13 (empty -> .)
    DOUBLE          reduce using rule 13 (empty -> .)
    TRUE            reduce using rule 13 (empty -> .)
    FALSE           reduce using rule 13 (empty -> .)
    ID              reduce using rule 13 (empty -> .)

    factor_opt                     shift and go to state 112
    factor                         shift and go to state 113
    exp                            shift and go to state 328
    termino                        shift and go to state 120
    empty                          shift and go to state 117
    fgra_atr_end                   shift and go to state 446

state 446

    (74) fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end .

    COMA            reduce using rule 74 (fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end .)
    SEMICOLON       reduce using rule 74 (fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end .)
    RBRACE          reduce using rule 74 (fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 34 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 113 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 113 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 120 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 120 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 314 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 314 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 315 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 315 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 326 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 326 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 327 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 327 resolved as shift
WARNING: shift/reduce conflict for COMA in state 409 resolved as shift
WARNING: reduce/reduce conflict in state 97 resolved using rule (check_variable -> empty)
WARNING: rejected rule (check_function -> empty) in state 97
WARNING: reduce/reduce conflict in state 233 resolved using rule (parametros -> empty)
WARNING: rejected rule (param_list -> empty) in state 233
WARNING: reduce/reduce conflict in state 276 resolved using rule (tipo_opt_fig_3 -> empty)
WARNING: rejected rule (ini_fgra_v -> empty) in state 276
WARNING: reduce/reduce conflict in state 420 resolved using rule (rutinas -> empty)
WARNING: rejected rule (rutinas_loop -> empty) in state 420
WARNING: Rule (ini_fgra_v -> empty) is never reduced
WARNING: Rule (rutinas_loop -> empty) is never reduced
