Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    NULL
    COMMENT
    EXPONENTIAL
    MOD

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID vars_opt rutinas_loop lienzo
Rule 2     vars_opt -> vars
Rule 3     vars_opt -> empty
Rule 4     rutinas_loop -> rutinas_loop rutinas
Rule 5     rutinas_loop -> empty
Rule 6     empty -> <empty>
Rule 7     vars -> VAR tipo COLON vars_loop
Rule 8     vars_loop -> vars
Rule 9     vars_loop -> empty
Rule 10    rutinas -> RUTINA rutina_opt COLON ID LPARENTHESIS parametros RPARENTHESIS bloque_rutina rutinas_loop_2
Rule 11    rutina_opt -> primitivo
Rule 12    rutina_opt -> figura
Rule 13    rutina_opt -> VOID
Rule 14    rutinas_loop_2 -> rutinas
Rule 15    rutinas_loop_2 -> empty
Rule 16    tipo -> tipo_opt SEMICOLON
Rule 17    tipo_opt -> tipo_opt_prim
Rule 18    tipo_opt -> tipo_opt_fig
Rule 19    tipo_opt_prim -> primitivo ID tipo_opt_prim_2 tipo_opt_prim_loop
Rule 20    tipo_opt_prim_loop -> COMA tipo_opt_prim
Rule 21    tipo_opt_prim_loop -> empty
Rule 22    tipo_opt_prim_2 -> ini_prim
Rule 23    tipo_opt_prim_2 -> LBRACKET logica RBRACKET tipo_opt_prim_3
Rule 24    tipo_opt_prim_2 -> empty
Rule 25    tipo_opt_prim_3 -> ini_prim_v
Rule 26    tipo_opt_prim_3 -> empty
Rule 27    tipo_opt_fig -> figura ID tipo_opt_fig_2
Rule 28    tipo_opt_fig_loop -> COMA tipo_opt_fig
Rule 29    tipo_opt_fig_loop -> empty
Rule 30    tipo_opt_fig_2 -> ini_fgra
Rule 31    tipo_opt_fig_2 -> LBRACKET logica RBRACKET tipo_opt_fig_3
Rule 32    tipo_opt_fig_2 -> empty
Rule 33    tipo_opt_fig_3 -> ini_fgra_v
Rule 34    tipo_opt_fig_3 -> empty
Rule 35    ini_prim -> ASIGN logica
Rule 36    ini_prim_v -> ASIGN LBRACE logica ini_prim_v_loop RBRACE
Rule 37    ini_prim_v_loop -> COMA logica ini_prim_v_loop
Rule 38    ini_prim_v_loop -> empty
Rule 39    ini_fgra -> ASIGN fgra_nva
Rule 40    ini_fgra_v -> COMA logica ini_fgras_v_loop
Rule 41    ini_fgra_v -> empty
Rule 42    ini_fgras_v_loop -> COMA logica ini_fgras_v_loop
Rule 43    ini_fgras_v_loop -> empty
Rule 44    fgra_nva -> NUEVO fgra_atr
Rule 45    fgra_nva -> empty
Rule 46    fgra_atr -> PINCEL LPARENTHESIS fgra_atr_end
Rule 47    fgra_atr -> CUAD LPARENTHESIS exp COMA fgra_atr_end
Rule 48    fgra_atr -> CIRC LPARENTHESIS exp COMA fgra_atr_end
Rule 49    fgra_atr -> RECT LPARENTHESIS exp COMA exp COMA fgra_atr_end
Rule 50    fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end
Rule 51    fgra_atr_end -> exp COMA exp COMA color RPARENTHESIS
Rule 52    primitivo -> TYPEINT
Rule 53    primitivo -> TYPEDOUBLE
Rule 54    primitivo -> TYPEBOOL
Rule 55    primitivo -> TYPESTRING
Rule 56    figura -> PINCEL
Rule 57    figura -> CUAD
Rule 58    figura -> RECT
Rule 59    figura -> CIRC
Rule 60    figura -> TRIANG
Rule 61    cte -> STRING
Rule 62    cte -> INT
Rule 63    cte -> DOUBLE
Rule 64    cte -> BOOL
Rule 65    parametros -> tipo COLON ID parametros_loop
Rule 66    parametros_loop -> COMA parametros
Rule 67    parametros_loop -> empty
Rule 68    lienzo -> MAIN bloque_lienzo
Rule 69    bloque -> LBRACE bloque_loop RBRACE
Rule 70    bloque_loop -> estatuto bloque_loop
Rule 71    bloque_loop -> empty
Rule 72    bloque_rutina -> LBRACE bloque_rutina_opt bloque_rutina_loop bloque_rutina_opt_2 RBRACE
Rule 73    bloque_rutina_opt -> vars
Rule 74    bloque_rutina_opt -> empty
Rule 75    bloque_rutina_loop -> estatuto bloque_rutina_loop
Rule 76    bloque_rutina_loop -> empty
Rule 77    bloque_rutina_opt_2 -> RETURN logica
Rule 78    bloque_rutina_opt_2 -> empty
Rule 79    bloque_lienzo -> LBRACE bloque_lienzo_loop RBRACE
Rule 80    bloque_lienzo_loop -> estatuto_lienzo bloque_lienzo_loop
Rule 81    bloque_lienzo_loop -> empty
Rule 82    estatuto -> asignacion
Rule 83    estatuto -> condicion
Rule 84    estatuto -> ciclo
Rule 85    estatuto -> impresion
Rule 86    estatuto -> lectura
Rule 87    estatuto -> accion
Rule 88    estatuto -> llamada
Rule 89    estatuto_lienzo -> vars
Rule 90    estatuto_lienzo -> asignacion
Rule 91    estatuto_lienzo -> condicion
Rule 92    estatuto_lienzo -> ciclo
Rule 93    estatuto_lienzo -> impresion
Rule 94    estatuto_lienzo -> lectura
Rule 95    estatuto_lienzo -> accion
Rule 96    estatuto_lienzo -> llamada
Rule 97    asignacion -> ID asignacion_opt ASIGN asignacion_opt_2
Rule 98    asignacion_opt -> LBRACKET logica RBRACKET
Rule 99    asignacion_opt -> empty
Rule 100   asignacion_opt_2 -> logica
Rule 101   asignacion_opt_2 -> lectura
Rule 102   asignacion_opt_2 -> fgra_nva
Rule 103   condicion -> IF condicion_loop condicion_opt
Rule 104   condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt
Rule 105   condicion_loop_opt -> ELIF condicion_loop
Rule 106   condicion_loop_opt -> empty
Rule 107   condicion_opt -> ELSE bloque
Rule 108   condicion_opt -> empty
Rule 109   ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque
Rule 110   impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON
Rule 111   lectura -> READ LPARENTHESIS RPARENTHESIS SEMICOLON
Rule 112   llamada -> ID LPARENTHESIS exp llamada_loop RPARENTHESIS COLON
Rule 113   llamada_loop -> COMA exp llamada_loop
Rule 114   llamada_loop -> empty
Rule 115   logica -> expresion logica_loop
Rule 116   logica_loop -> AND logica
Rule 117   logica_loop -> OR logica
Rule 118   logica_loop -> empty
Rule 119   expresion -> exp expresion_opt
Rule 120   expresion_opt -> expresion_opt_opt exp
Rule 121   expresion_opt -> empty
Rule 122   expresion_opt_opt -> GTHAN
Rule 123   expresion_opt_opt -> GETHAN
Rule 124   expresion_opt_opt -> ASIGN ASIGN
Rule 125   expresion_opt_opt -> NOTEQUAL
Rule 126   expresion_opt_opt -> LTHAN
Rule 127   expresion_opt_opt -> LETHAN
Rule 128   exp -> termino exp_loop
Rule 129   exp_loop -> PLUS exp
Rule 130   exp_loop -> MINUS exp
Rule 131   exp_loop -> empty
Rule 132   termino -> factor termino_loop
Rule 133   termino_loop -> TIMES termino
Rule 134   termino_loop -> DIVIDE termino
Rule 135   termino_loop -> empty
Rule 136   factor -> LPARENTHESIS expresion RPARENTHESIS
Rule 137   factor -> factor_opt factor_opt_2
Rule 138   factor_opt -> PLUS
Rule 139   factor_opt -> MINUS
Rule 140   factor_opt -> empty
Rule 141   factor_opt_2 -> cte
Rule 142   factor_opt_2 -> idllamada
Rule 143   idllamada -> ID idllamada_opt
Rule 144   idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS
Rule 145   idllamada_opt -> LBRACKET expresion RBRACKET
Rule 146   idllamada_opt -> empty
Rule 147   idllamada_opt_loop -> COMA exp idllamada_opt_loop
Rule 148   idllamada_opt_loop -> empty
Rule 149   accion -> ID POINT accion_opt COLON
Rule 150   accion_opt -> accion_figura
Rule 151   accion_opt -> accion_pincel
Rule 152   accion_figura -> accion_figura_opt LPARENTHESIS
Rule 153   accion_figura_opt -> accion_figura_opt_2
Rule 154   accion_figura_opt -> accion_figura_opt_3
Rule 155   accion_figura_opt_2 -> MOVEA accion_figura_opt_2_end
Rule 156   accion_figura_opt_2 -> ROTATE accion_figura_opt_2_end
Rule 157   accion_figura_opt_2 -> GROW accion_figura_opt_2_end
Rule 158   accion_figura_opt_2 -> THICK accion_figura_opt_2_end
Rule 159   accion_figura_opt_2_end -> RPARENTHESIS expresion
Rule 160   accion_figura_opt_3 -> REMOVE LPARENTHESIS
Rule 161   accion_figura_opt_3 -> FILL LPARENTHESIS color
Rule 162   accion_pincel -> accion_pincel_opt RPARENTHESIS
Rule 163   accion_pincel_opt -> COLOR LPARENTHESIS color
Rule 164   accion_pincel_opt -> DISPLACE accion_pincel_opt_end
Rule 165   accion_pincel_opt -> PAINT accion_pincel_opt_end
Rule 166   accion_pincel_opt -> GRAPH LPARENTHESIS CTEFUNCION COMA exp
Rule 167   accion_pincel_opt_end -> LPARENTHESIS expresion COMA expresion
Rule 168   color -> CTECOLOR
Rule 169   color -> CTEHEXCOLOR

Terminals, with rules where they appear

AND                  : 116
ASIGN                : 35 36 39 97 124 124
BOOL                 : 64
CIRC                 : 48 59
COLON                : 7 10 65 112 149
COLOR                : 163
COMA                 : 20 28 37 40 42 47 48 49 49 50 50 50 50 51 51 66 113 147 166 167
COMMENT              : 
CTECOLOR             : 168
CTEFUNCION           : 166
CTEHEXCOLOR          : 169
CUAD                 : 47 57
DISPLACE             : 164
DIVIDE               : 134
DOUBLE               : 63
ELIF                 : 105
ELSE                 : 107
EXPONENTIAL          : 
FILL                 : 161
GETHAN               : 123
GRAPH                : 166
GROW                 : 157
GTHAN                : 122
ID                   : 1 10 19 27 65 97 112 143 149
IF                   : 103
INT                  : 62
LBRACE               : 36 69 72 79
LBRACKET             : 23 31 98 145
LETHAN               : 127
LPARENTHESIS         : 10 46 47 48 49 50 104 109 110 111 112 136 144 152 160 161 163 166 167
LTHAN                : 126
MAIN                 : 68
MINUS                : 130 139
MOD                  : 
MOVEA                : 155
NOTEQUAL             : 125
NUEVO                : 44
NULL                 : 
OR                   : 117
PAINT                : 165
PINCEL               : 46 56
PLUS                 : 129 138
POINT                : 149
PRINT                : 110
PROGRAMA             : 1
RBRACE               : 36 69 72 79
RBRACKET             : 23 31 98 145
READ                 : 111
RECT                 : 49 58
REMOVE               : 160
RETURN               : 77
ROTATE               : 156
RPARENTHESIS         : 10 51 104 109 110 111 112 136 144 159 162
RUTINA               : 10
SEMICOLON            : 16 110 111
STRING               : 61
THICK                : 158
TIMES                : 133
TRIANG               : 50 60
TYPEBOOL             : 54
TYPEDOUBLE           : 53
TYPEINT              : 52
TYPESTRING           : 55
VAR                  : 7
VOID                 : 13
WHILE                : 109
error                : 

Nonterminals, with rules where they appear

accion               : 87 95
accion_figura        : 150
accion_figura_opt    : 152
accion_figura_opt_2  : 153
accion_figura_opt_2_end : 155 156 157 158
accion_figura_opt_3  : 154
accion_opt           : 149
accion_pincel        : 151
accion_pincel_opt    : 162
accion_pincel_opt_end : 164 165
asignacion           : 82 90
asignacion_opt       : 97
asignacion_opt_2     : 97
bloque               : 104 107 109
bloque_lienzo        : 68
bloque_lienzo_loop   : 79 80
bloque_loop          : 69 70
bloque_rutina        : 10
bloque_rutina_loop   : 72 75
bloque_rutina_opt    : 72
bloque_rutina_opt_2  : 72
ciclo                : 84 92
color                : 51 161 163
condicion            : 83 91
condicion_loop       : 103 105
condicion_loop_opt   : 104
condicion_opt        : 103
cte                  : 141
empty                : 3 5 9 15 21 24 26 29 32 34 38 41 43 45 67 71 74 76 78 81 99 106 108 114 118 121 131 135 140 146 148
estatuto             : 70 75
estatuto_lienzo      : 80
exp                  : 47 48 49 49 50 50 50 50 51 51 112 113 119 120 129 130 144 147 166
exp_loop             : 128
expresion            : 115 136 145 159 167 167
expresion_opt        : 119
expresion_opt_opt    : 120
factor               : 132
factor_opt           : 137
factor_opt_2         : 137
fgra_atr             : 44
fgra_atr_end         : 46 47 48 49 50
fgra_nva             : 39 102
figura               : 12 27
idllamada            : 142
idllamada_opt        : 143
idllamada_opt_loop   : 144 147
impresion            : 85 93
ini_fgra             : 30
ini_fgra_v           : 33
ini_fgras_v_loop     : 40 42
ini_prim             : 22
ini_prim_v           : 25
ini_prim_v_loop      : 36 37
lectura              : 86 94 101
lienzo               : 1
llamada              : 88 96
llamada_loop         : 112 113
logica               : 23 31 35 36 37 40 42 77 98 100 104 109 110 116 117
logica_loop          : 115
parametros           : 10 66
parametros_loop      : 65
primitivo            : 11 19
programa             : 0
rutina_opt           : 10
rutinas              : 4 14
rutinas_loop         : 1 4
rutinas_loop_2       : 10
termino              : 128 133 134
termino_loop         : 132
tipo                 : 7 65
tipo_opt             : 16
tipo_opt_fig         : 18 28
tipo_opt_fig_2       : 27
tipo_opt_fig_3       : 31
tipo_opt_fig_loop    : 
tipo_opt_prim        : 17 20
tipo_opt_prim_2      : 19
tipo_opt_prim_3      : 23
tipo_opt_prim_loop   : 19
vars                 : 2 8 73 89
vars_loop            : 7
vars_opt             : 1

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID vars_opt rutinas_loop lienzo

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID vars_opt rutinas_loop lienzo

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . vars_opt rutinas_loop lienzo
    (2) vars_opt -> . vars
    (3) vars_opt -> . empty
    (7) vars -> . VAR tipo COLON vars_loop
    (6) empty -> .

    VAR             shift and go to state 6
    MAIN            reduce using rule 6 (empty -> .)
    RUTINA          reduce using rule 6 (empty -> .)

    vars                           shift and go to state 4
    vars_opt                       shift and go to state 5
    empty                          shift and go to state 7

state 4

    (2) vars_opt -> vars .

    MAIN            reduce using rule 2 (vars_opt -> vars .)
    RUTINA          reduce using rule 2 (vars_opt -> vars .)


state 5

    (1) programa -> PROGRAMA ID vars_opt . rutinas_loop lienzo
    (4) rutinas_loop -> . rutinas_loop rutinas
    (5) rutinas_loop -> . empty
    (6) empty -> .

    MAIN            reduce using rule 6 (empty -> .)
    RUTINA          reduce using rule 6 (empty -> .)

    rutinas_loop                   shift and go to state 8
    empty                          shift and go to state 9

state 6

    (7) vars -> VAR . tipo COLON vars_loop
    (16) tipo -> . tipo_opt SEMICOLON
    (17) tipo_opt -> . tipo_opt_prim
    (18) tipo_opt -> . tipo_opt_fig
    (19) tipo_opt_prim -> . primitivo ID tipo_opt_prim_2 tipo_opt_prim_loop
    (27) tipo_opt_fig -> . figura ID tipo_opt_fig_2
    (52) primitivo -> . TYPEINT
    (53) primitivo -> . TYPEDOUBLE
    (54) primitivo -> . TYPEBOOL
    (55) primitivo -> . TYPESTRING
    (56) figura -> . PINCEL
    (57) figura -> . CUAD
    (58) figura -> . RECT
    (59) figura -> . CIRC
    (60) figura -> . TRIANG

    TYPEINT         shift and go to state 22
    TYPEDOUBLE      shift and go to state 14
    TYPEBOOL        shift and go to state 15
    TYPESTRING      shift and go to state 21
    PINCEL          shift and go to state 13
    CUAD            shift and go to state 24
    RECT            shift and go to state 16
    CIRC            shift and go to state 23
    TRIANG          shift and go to state 11

    tipo_opt_prim                  shift and go to state 20
    tipo_opt_fig                   shift and go to state 17
    tipo                           shift and go to state 18
    tipo_opt                       shift and go to state 12
    figura                         shift and go to state 10
    primitivo                      shift and go to state 19

state 7

    (3) vars_opt -> empty .

    MAIN            reduce using rule 3 (vars_opt -> empty .)
    RUTINA          reduce using rule 3 (vars_opt -> empty .)


state 8

    (1) programa -> PROGRAMA ID vars_opt rutinas_loop . lienzo
    (4) rutinas_loop -> rutinas_loop . rutinas
    (68) lienzo -> . MAIN bloque_lienzo
    (10) rutinas -> . RUTINA rutina_opt COLON ID LPARENTHESIS parametros RPARENTHESIS bloque_rutina rutinas_loop_2

    MAIN            shift and go to state 28
    RUTINA          shift and go to state 27

    rutinas                        shift and go to state 25
    lienzo                         shift and go to state 26

state 9

    (5) rutinas_loop -> empty .

    MAIN            reduce using rule 5 (rutinas_loop -> empty .)
    RUTINA          reduce using rule 5 (rutinas_loop -> empty .)


state 10

    (27) tipo_opt_fig -> figura . ID tipo_opt_fig_2

    ID              shift and go to state 29


state 11

    (60) figura -> TRIANG .

    ID              reduce using rule 60 (figura -> TRIANG .)
    COLON           reduce using rule 60 (figura -> TRIANG .)


state 12

    (16) tipo -> tipo_opt . SEMICOLON

    SEMICOLON       shift and go to state 30


state 13

    (56) figura -> PINCEL .

    ID              reduce using rule 56 (figura -> PINCEL .)
    COLON           reduce using rule 56 (figura -> PINCEL .)


state 14

    (53) primitivo -> TYPEDOUBLE .

    COLON           reduce using rule 53 (primitivo -> TYPEDOUBLE .)
    ID              reduce using rule 53 (primitivo -> TYPEDOUBLE .)


state 15

    (54) primitivo -> TYPEBOOL .

    COLON           reduce using rule 54 (primitivo -> TYPEBOOL .)
    ID              reduce using rule 54 (primitivo -> TYPEBOOL .)


state 16

    (58) figura -> RECT .

    ID              reduce using rule 58 (figura -> RECT .)
    COLON           reduce using rule 58 (figura -> RECT .)


state 17

    (18) tipo_opt -> tipo_opt_fig .

    SEMICOLON       reduce using rule 18 (tipo_opt -> tipo_opt_fig .)


state 18

    (7) vars -> VAR tipo . COLON vars_loop

    COLON           shift and go to state 31


state 19

    (19) tipo_opt_prim -> primitivo . ID tipo_opt_prim_2 tipo_opt_prim_loop

    ID              shift and go to state 32


state 20

    (17) tipo_opt -> tipo_opt_prim .

    SEMICOLON       reduce using rule 17 (tipo_opt -> tipo_opt_prim .)


state 21

    (55) primitivo -> TYPESTRING .

    COLON           reduce using rule 55 (primitivo -> TYPESTRING .)
    ID              reduce using rule 55 (primitivo -> TYPESTRING .)


state 22

    (52) primitivo -> TYPEINT .

    COLON           reduce using rule 52 (primitivo -> TYPEINT .)
    ID              reduce using rule 52 (primitivo -> TYPEINT .)


state 23

    (59) figura -> CIRC .

    ID              reduce using rule 59 (figura -> CIRC .)
    COLON           reduce using rule 59 (figura -> CIRC .)


state 24

    (57) figura -> CUAD .

    ID              reduce using rule 57 (figura -> CUAD .)
    COLON           reduce using rule 57 (figura -> CUAD .)


state 25

    (4) rutinas_loop -> rutinas_loop rutinas .

    MAIN            reduce using rule 4 (rutinas_loop -> rutinas_loop rutinas .)
    RUTINA          reduce using rule 4 (rutinas_loop -> rutinas_loop rutinas .)


state 26

    (1) programa -> PROGRAMA ID vars_opt rutinas_loop lienzo .

    $end            reduce using rule 1 (programa -> PROGRAMA ID vars_opt rutinas_loop lienzo .)


state 27

    (10) rutinas -> RUTINA . rutina_opt COLON ID LPARENTHESIS parametros RPARENTHESIS bloque_rutina rutinas_loop_2
    (11) rutina_opt -> . primitivo
    (12) rutina_opt -> . figura
    (13) rutina_opt -> . VOID
    (52) primitivo -> . TYPEINT
    (53) primitivo -> . TYPEDOUBLE
    (54) primitivo -> . TYPEBOOL
    (55) primitivo -> . TYPESTRING
    (56) figura -> . PINCEL
    (57) figura -> . CUAD
    (58) figura -> . RECT
    (59) figura -> . CIRC
    (60) figura -> . TRIANG

    VOID            shift and go to state 36
    TYPEINT         shift and go to state 22
    TYPEDOUBLE      shift and go to state 14
    TYPEBOOL        shift and go to state 15
    TYPESTRING      shift and go to state 21
    PINCEL          shift and go to state 13
    CUAD            shift and go to state 24
    RECT            shift and go to state 16
    CIRC            shift and go to state 23
    TRIANG          shift and go to state 11

    rutina_opt                     shift and go to state 33
    figura                         shift and go to state 34
    primitivo                      shift and go to state 35

state 28

    (68) lienzo -> MAIN . bloque_lienzo
    (79) bloque_lienzo -> . LBRACE bloque_lienzo_loop RBRACE

    LBRACE          shift and go to state 38

    bloque_lienzo                  shift and go to state 37

state 29

    (27) tipo_opt_fig -> figura ID . tipo_opt_fig_2
    (30) tipo_opt_fig_2 -> . ini_fgra
    (31) tipo_opt_fig_2 -> . LBRACKET logica RBRACKET tipo_opt_fig_3
    (32) tipo_opt_fig_2 -> . empty
    (39) ini_fgra -> . ASIGN fgra_nva
    (6) empty -> .

    LBRACKET        shift and go to state 42
    ASIGN           shift and go to state 41
    SEMICOLON       reduce using rule 6 (empty -> .)

    ini_fgra                       shift and go to state 39
    tipo_opt_fig_2                 shift and go to state 40
    empty                          shift and go to state 43

state 30

    (16) tipo -> tipo_opt SEMICOLON .

    COLON           reduce using rule 16 (tipo -> tipo_opt SEMICOLON .)


state 31

    (7) vars -> VAR tipo COLON . vars_loop
    (8) vars_loop -> . vars
    (9) vars_loop -> . empty
    (7) vars -> . VAR tipo COLON vars_loop
    (6) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 6
    MAIN            reduce using rule 6 (empty -> .)
    RUTINA          reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)
    IF              reduce using rule 6 (empty -> .)
    WHILE           reduce using rule 6 (empty -> .)
    PRINT           reduce using rule 6 (empty -> .)
    READ            reduce using rule 6 (empty -> .)
    RBRACE          reduce using rule 6 (empty -> .)
    RETURN          reduce using rule 6 (empty -> .)

  ! VAR             [ reduce using rule 6 (empty -> .) ]

    vars_loop                      shift and go to state 45
    empty                          shift and go to state 46
    vars                           shift and go to state 44

state 32

    (19) tipo_opt_prim -> primitivo ID . tipo_opt_prim_2 tipo_opt_prim_loop
    (22) tipo_opt_prim_2 -> . ini_prim
    (23) tipo_opt_prim_2 -> . LBRACKET logica RBRACKET tipo_opt_prim_3
    (24) tipo_opt_prim_2 -> . empty
    (35) ini_prim -> . ASIGN logica
    (6) empty -> .

    LBRACKET        shift and go to state 49
    ASIGN           shift and go to state 48
    COMA            reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)

    tipo_opt_prim_2                shift and go to state 47
    ini_prim                       shift and go to state 50
    empty                          shift and go to state 51

state 33

    (10) rutinas -> RUTINA rutina_opt . COLON ID LPARENTHESIS parametros RPARENTHESIS bloque_rutina rutinas_loop_2

    COLON           shift and go to state 52


state 34

    (12) rutina_opt -> figura .

    COLON           reduce using rule 12 (rutina_opt -> figura .)


state 35

    (11) rutina_opt -> primitivo .

    COLON           reduce using rule 11 (rutina_opt -> primitivo .)


state 36

    (13) rutina_opt -> VOID .

    COLON           reduce using rule 13 (rutina_opt -> VOID .)


state 37

    (68) lienzo -> MAIN bloque_lienzo .

    $end            reduce using rule 68 (lienzo -> MAIN bloque_lienzo .)


state 38

    (79) bloque_lienzo -> LBRACE . bloque_lienzo_loop RBRACE
    (80) bloque_lienzo_loop -> . estatuto_lienzo bloque_lienzo_loop
    (81) bloque_lienzo_loop -> . empty
    (89) estatuto_lienzo -> . vars
    (90) estatuto_lienzo -> . asignacion
    (91) estatuto_lienzo -> . condicion
    (92) estatuto_lienzo -> . ciclo
    (93) estatuto_lienzo -> . impresion
    (94) estatuto_lienzo -> . lectura
    (95) estatuto_lienzo -> . accion
    (96) estatuto_lienzo -> . llamada
    (6) empty -> .
    (7) vars -> . VAR tipo COLON vars_loop
    (97) asignacion -> . ID asignacion_opt ASIGN asignacion_opt_2
    (103) condicion -> . IF condicion_loop condicion_opt
    (109) ciclo -> . WHILE LPARENTHESIS logica RPARENTHESIS bloque
    (110) impresion -> . PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON
    (111) lectura -> . READ LPARENTHESIS RPARENTHESIS SEMICOLON
    (149) accion -> . ID POINT accion_opt COLON
    (112) llamada -> . ID LPARENTHESIS exp llamada_loop RPARENTHESIS COLON

    RBRACE          reduce using rule 6 (empty -> .)
    VAR             shift and go to state 6
    ID              shift and go to state 63
    IF              shift and go to state 64
    WHILE           shift and go to state 55
    PRINT           shift and go to state 56
    READ            shift and go to state 54

    vars                           shift and go to state 53
    ciclo                          shift and go to state 58
    llamada                        shift and go to state 59
    bloque_lienzo_loop             shift and go to state 57
    condicion                      shift and go to state 60
    lectura                        shift and go to state 61
    empty                          shift and go to state 62
    accion                         shift and go to state 65
    asignacion                     shift and go to state 66
    estatuto_lienzo                shift and go to state 67
    impresion                      shift and go to state 68

state 39

    (30) tipo_opt_fig_2 -> ini_fgra .

    SEMICOLON       reduce using rule 30 (tipo_opt_fig_2 -> ini_fgra .)


state 40

    (27) tipo_opt_fig -> figura ID tipo_opt_fig_2 .

    SEMICOLON       reduce using rule 27 (tipo_opt_fig -> figura ID tipo_opt_fig_2 .)


state 41

    (39) ini_fgra -> ASIGN . fgra_nva
    (44) fgra_nva -> . NUEVO fgra_atr
    (45) fgra_nva -> . empty
    (6) empty -> .

    NUEVO           shift and go to state 69
    SEMICOLON       reduce using rule 6 (empty -> .)

    empty                          shift and go to state 70
    fgra_nva                       shift and go to state 71

state 42

    (31) tipo_opt_fig_2 -> LBRACKET . logica RBRACKET tipo_opt_fig_3
    (115) logica -> . expresion logica_loop
    (119) expresion -> . exp expresion_opt
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    expresion                      shift and go to state 72
    logica                         shift and go to state 74
    empty                          shift and go to state 75
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor                         shift and go to state 79
    factor_opt                     shift and go to state 81

state 43

    (32) tipo_opt_fig_2 -> empty .

    SEMICOLON       reduce using rule 32 (tipo_opt_fig_2 -> empty .)


state 44

    (8) vars_loop -> vars .

    MAIN            reduce using rule 8 (vars_loop -> vars .)
    RUTINA          reduce using rule 8 (vars_loop -> vars .)
    VAR             reduce using rule 8 (vars_loop -> vars .)
    ID              reduce using rule 8 (vars_loop -> vars .)
    IF              reduce using rule 8 (vars_loop -> vars .)
    WHILE           reduce using rule 8 (vars_loop -> vars .)
    PRINT           reduce using rule 8 (vars_loop -> vars .)
    READ            reduce using rule 8 (vars_loop -> vars .)
    RBRACE          reduce using rule 8 (vars_loop -> vars .)
    RETURN          reduce using rule 8 (vars_loop -> vars .)


state 45

    (7) vars -> VAR tipo COLON vars_loop .

    VAR             reduce using rule 7 (vars -> VAR tipo COLON vars_loop .)
    ID              reduce using rule 7 (vars -> VAR tipo COLON vars_loop .)
    IF              reduce using rule 7 (vars -> VAR tipo COLON vars_loop .)
    WHILE           reduce using rule 7 (vars -> VAR tipo COLON vars_loop .)
    PRINT           reduce using rule 7 (vars -> VAR tipo COLON vars_loop .)
    READ            reduce using rule 7 (vars -> VAR tipo COLON vars_loop .)
    RBRACE          reduce using rule 7 (vars -> VAR tipo COLON vars_loop .)
    MAIN            reduce using rule 7 (vars -> VAR tipo COLON vars_loop .)
    RUTINA          reduce using rule 7 (vars -> VAR tipo COLON vars_loop .)
    RETURN          reduce using rule 7 (vars -> VAR tipo COLON vars_loop .)


state 46

    (9) vars_loop -> empty .

    MAIN            reduce using rule 9 (vars_loop -> empty .)
    RUTINA          reduce using rule 9 (vars_loop -> empty .)
    VAR             reduce using rule 9 (vars_loop -> empty .)
    ID              reduce using rule 9 (vars_loop -> empty .)
    IF              reduce using rule 9 (vars_loop -> empty .)
    WHILE           reduce using rule 9 (vars_loop -> empty .)
    PRINT           reduce using rule 9 (vars_loop -> empty .)
    READ            reduce using rule 9 (vars_loop -> empty .)
    RBRACE          reduce using rule 9 (vars_loop -> empty .)
    RETURN          reduce using rule 9 (vars_loop -> empty .)


state 47

    (19) tipo_opt_prim -> primitivo ID tipo_opt_prim_2 . tipo_opt_prim_loop
    (20) tipo_opt_prim_loop -> . COMA tipo_opt_prim
    (21) tipo_opt_prim_loop -> . empty
    (6) empty -> .

    COMA            shift and go to state 83
    SEMICOLON       reduce using rule 6 (empty -> .)

    empty                          shift and go to state 84
    tipo_opt_prim_loop             shift and go to state 82

state 48

    (35) ini_prim -> ASIGN . logica
    (115) logica -> . expresion logica_loop
    (119) expresion -> . exp expresion_opt
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    expresion                      shift and go to state 72
    logica                         shift and go to state 85
    empty                          shift and go to state 75
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor                         shift and go to state 79
    factor_opt                     shift and go to state 81

state 49

    (23) tipo_opt_prim_2 -> LBRACKET . logica RBRACKET tipo_opt_prim_3
    (115) logica -> . expresion logica_loop
    (119) expresion -> . exp expresion_opt
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    expresion                      shift and go to state 72
    logica                         shift and go to state 86
    empty                          shift and go to state 75
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor                         shift and go to state 79
    factor_opt                     shift and go to state 81

state 50

    (22) tipo_opt_prim_2 -> ini_prim .

    COMA            reduce using rule 22 (tipo_opt_prim_2 -> ini_prim .)
    SEMICOLON       reduce using rule 22 (tipo_opt_prim_2 -> ini_prim .)


state 51

    (24) tipo_opt_prim_2 -> empty .

    COMA            reduce using rule 24 (tipo_opt_prim_2 -> empty .)
    SEMICOLON       reduce using rule 24 (tipo_opt_prim_2 -> empty .)


state 52

    (10) rutinas -> RUTINA rutina_opt COLON . ID LPARENTHESIS parametros RPARENTHESIS bloque_rutina rutinas_loop_2

    ID              shift and go to state 87


state 53

    (89) estatuto_lienzo -> vars .

    VAR             reduce using rule 89 (estatuto_lienzo -> vars .)
    ID              reduce using rule 89 (estatuto_lienzo -> vars .)
    IF              reduce using rule 89 (estatuto_lienzo -> vars .)
    WHILE           reduce using rule 89 (estatuto_lienzo -> vars .)
    PRINT           reduce using rule 89 (estatuto_lienzo -> vars .)
    READ            reduce using rule 89 (estatuto_lienzo -> vars .)
    RBRACE          reduce using rule 89 (estatuto_lienzo -> vars .)


state 54

    (111) lectura -> READ . LPARENTHESIS RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 88


state 55

    (109) ciclo -> WHILE . LPARENTHESIS logica RPARENTHESIS bloque

    LPARENTHESIS    shift and go to state 89


state 56

    (110) impresion -> PRINT . LPARENTHESIS logica RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 90


state 57

    (79) bloque_lienzo -> LBRACE bloque_lienzo_loop . RBRACE

    RBRACE          shift and go to state 91


state 58

    (92) estatuto_lienzo -> ciclo .

    VAR             reduce using rule 92 (estatuto_lienzo -> ciclo .)
    ID              reduce using rule 92 (estatuto_lienzo -> ciclo .)
    IF              reduce using rule 92 (estatuto_lienzo -> ciclo .)
    WHILE           reduce using rule 92 (estatuto_lienzo -> ciclo .)
    PRINT           reduce using rule 92 (estatuto_lienzo -> ciclo .)
    READ            reduce using rule 92 (estatuto_lienzo -> ciclo .)
    RBRACE          reduce using rule 92 (estatuto_lienzo -> ciclo .)


state 59

    (96) estatuto_lienzo -> llamada .

    VAR             reduce using rule 96 (estatuto_lienzo -> llamada .)
    ID              reduce using rule 96 (estatuto_lienzo -> llamada .)
    IF              reduce using rule 96 (estatuto_lienzo -> llamada .)
    WHILE           reduce using rule 96 (estatuto_lienzo -> llamada .)
    PRINT           reduce using rule 96 (estatuto_lienzo -> llamada .)
    READ            reduce using rule 96 (estatuto_lienzo -> llamada .)
    RBRACE          reduce using rule 96 (estatuto_lienzo -> llamada .)


state 60

    (91) estatuto_lienzo -> condicion .

    VAR             reduce using rule 91 (estatuto_lienzo -> condicion .)
    ID              reduce using rule 91 (estatuto_lienzo -> condicion .)
    IF              reduce using rule 91 (estatuto_lienzo -> condicion .)
    WHILE           reduce using rule 91 (estatuto_lienzo -> condicion .)
    PRINT           reduce using rule 91 (estatuto_lienzo -> condicion .)
    READ            reduce using rule 91 (estatuto_lienzo -> condicion .)
    RBRACE          reduce using rule 91 (estatuto_lienzo -> condicion .)


state 61

    (94) estatuto_lienzo -> lectura .

    VAR             reduce using rule 94 (estatuto_lienzo -> lectura .)
    ID              reduce using rule 94 (estatuto_lienzo -> lectura .)
    IF              reduce using rule 94 (estatuto_lienzo -> lectura .)
    WHILE           reduce using rule 94 (estatuto_lienzo -> lectura .)
    PRINT           reduce using rule 94 (estatuto_lienzo -> lectura .)
    READ            reduce using rule 94 (estatuto_lienzo -> lectura .)
    RBRACE          reduce using rule 94 (estatuto_lienzo -> lectura .)


state 62

    (81) bloque_lienzo_loop -> empty .

    RBRACE          reduce using rule 81 (bloque_lienzo_loop -> empty .)


state 63

    (97) asignacion -> ID . asignacion_opt ASIGN asignacion_opt_2
    (149) accion -> ID . POINT accion_opt COLON
    (112) llamada -> ID . LPARENTHESIS exp llamada_loop RPARENTHESIS COLON
    (98) asignacion_opt -> . LBRACKET logica RBRACKET
    (99) asignacion_opt -> . empty
    (6) empty -> .

    POINT           shift and go to state 93
    LPARENTHESIS    shift and go to state 94
    LBRACKET        shift and go to state 95
    ASIGN           reduce using rule 6 (empty -> .)

    asignacion_opt                 shift and go to state 92
    empty                          shift and go to state 96

state 64

    (103) condicion -> IF . condicion_loop condicion_opt
    (104) condicion_loop -> . LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt

    LPARENTHESIS    shift and go to state 97

    condicion_loop                 shift and go to state 98

state 65

    (95) estatuto_lienzo -> accion .

    VAR             reduce using rule 95 (estatuto_lienzo -> accion .)
    ID              reduce using rule 95 (estatuto_lienzo -> accion .)
    IF              reduce using rule 95 (estatuto_lienzo -> accion .)
    WHILE           reduce using rule 95 (estatuto_lienzo -> accion .)
    PRINT           reduce using rule 95 (estatuto_lienzo -> accion .)
    READ            reduce using rule 95 (estatuto_lienzo -> accion .)
    RBRACE          reduce using rule 95 (estatuto_lienzo -> accion .)


state 66

    (90) estatuto_lienzo -> asignacion .

    VAR             reduce using rule 90 (estatuto_lienzo -> asignacion .)
    ID              reduce using rule 90 (estatuto_lienzo -> asignacion .)
    IF              reduce using rule 90 (estatuto_lienzo -> asignacion .)
    WHILE           reduce using rule 90 (estatuto_lienzo -> asignacion .)
    PRINT           reduce using rule 90 (estatuto_lienzo -> asignacion .)
    READ            reduce using rule 90 (estatuto_lienzo -> asignacion .)
    RBRACE          reduce using rule 90 (estatuto_lienzo -> asignacion .)


state 67

    (80) bloque_lienzo_loop -> estatuto_lienzo . bloque_lienzo_loop
    (80) bloque_lienzo_loop -> . estatuto_lienzo bloque_lienzo_loop
    (81) bloque_lienzo_loop -> . empty
    (89) estatuto_lienzo -> . vars
    (90) estatuto_lienzo -> . asignacion
    (91) estatuto_lienzo -> . condicion
    (92) estatuto_lienzo -> . ciclo
    (93) estatuto_lienzo -> . impresion
    (94) estatuto_lienzo -> . lectura
    (95) estatuto_lienzo -> . accion
    (96) estatuto_lienzo -> . llamada
    (6) empty -> .
    (7) vars -> . VAR tipo COLON vars_loop
    (97) asignacion -> . ID asignacion_opt ASIGN asignacion_opt_2
    (103) condicion -> . IF condicion_loop condicion_opt
    (109) ciclo -> . WHILE LPARENTHESIS logica RPARENTHESIS bloque
    (110) impresion -> . PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON
    (111) lectura -> . READ LPARENTHESIS RPARENTHESIS SEMICOLON
    (149) accion -> . ID POINT accion_opt COLON
    (112) llamada -> . ID LPARENTHESIS exp llamada_loop RPARENTHESIS COLON

    RBRACE          reduce using rule 6 (empty -> .)
    VAR             shift and go to state 6
    ID              shift and go to state 63
    IF              shift and go to state 64
    WHILE           shift and go to state 55
    PRINT           shift and go to state 56
    READ            shift and go to state 54

    vars                           shift and go to state 53
    ciclo                          shift and go to state 58
    llamada                        shift and go to state 59
    bloque_lienzo_loop             shift and go to state 99
    condicion                      shift and go to state 60
    lectura                        shift and go to state 61
    empty                          shift and go to state 62
    accion                         shift and go to state 65
    asignacion                     shift and go to state 66
    estatuto_lienzo                shift and go to state 67
    impresion                      shift and go to state 68

state 68

    (93) estatuto_lienzo -> impresion .

    VAR             reduce using rule 93 (estatuto_lienzo -> impresion .)
    ID              reduce using rule 93 (estatuto_lienzo -> impresion .)
    IF              reduce using rule 93 (estatuto_lienzo -> impresion .)
    WHILE           reduce using rule 93 (estatuto_lienzo -> impresion .)
    PRINT           reduce using rule 93 (estatuto_lienzo -> impresion .)
    READ            reduce using rule 93 (estatuto_lienzo -> impresion .)
    RBRACE          reduce using rule 93 (estatuto_lienzo -> impresion .)


state 69

    (44) fgra_nva -> NUEVO . fgra_atr
    (46) fgra_atr -> . PINCEL LPARENTHESIS fgra_atr_end
    (47) fgra_atr -> . CUAD LPARENTHESIS exp COMA fgra_atr_end
    (48) fgra_atr -> . CIRC LPARENTHESIS exp COMA fgra_atr_end
    (49) fgra_atr -> . RECT LPARENTHESIS exp COMA exp COMA fgra_atr_end
    (50) fgra_atr -> . TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end

    PINCEL          shift and go to state 102
    CUAD            shift and go to state 105
    CIRC            shift and go to state 103
    RECT            shift and go to state 104
    TRIANG          shift and go to state 100

    fgra_atr                       shift and go to state 101

state 70

    (45) fgra_nva -> empty .

    SEMICOLON       reduce using rule 45 (fgra_nva -> empty .)


state 71

    (39) ini_fgra -> ASIGN fgra_nva .

    SEMICOLON       reduce using rule 39 (ini_fgra -> ASIGN fgra_nva .)


state 72

    (115) logica -> expresion . logica_loop
    (116) logica_loop -> . AND logica
    (117) logica_loop -> . OR logica
    (118) logica_loop -> . empty
    (6) empty -> .

    AND             shift and go to state 106
    OR              shift and go to state 108
    RBRACKET        reduce using rule 6 (empty -> .)
    COMA            reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    RPARENTHESIS    reduce using rule 6 (empty -> .)
    VAR             reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)
    IF              reduce using rule 6 (empty -> .)
    WHILE           reduce using rule 6 (empty -> .)
    PRINT           reduce using rule 6 (empty -> .)
    READ            reduce using rule 6 (empty -> .)
    RBRACE          reduce using rule 6 (empty -> .)
    RETURN          reduce using rule 6 (empty -> .)

    empty                          shift and go to state 109
    logica_loop                    shift and go to state 107

state 73

    (136) factor -> LPARENTHESIS . expresion RPARENTHESIS
    (119) expresion -> . exp expresion_opt
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    expresion                      shift and go to state 110
    empty                          shift and go to state 75
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor                         shift and go to state 79
    factor_opt                     shift and go to state 81

state 74

    (31) tipo_opt_fig_2 -> LBRACKET logica . RBRACKET tipo_opt_fig_3

    RBRACKET        shift and go to state 111


state 75

    (140) factor_opt -> empty .

    STRING          reduce using rule 140 (factor_opt -> empty .)
    INT             reduce using rule 140 (factor_opt -> empty .)
    DOUBLE          reduce using rule 140 (factor_opt -> empty .)
    BOOL            reduce using rule 140 (factor_opt -> empty .)
    ID              reduce using rule 140 (factor_opt -> empty .)


state 76

    (138) factor_opt -> PLUS .

    STRING          reduce using rule 138 (factor_opt -> PLUS .)
    INT             reduce using rule 138 (factor_opt -> PLUS .)
    DOUBLE          reduce using rule 138 (factor_opt -> PLUS .)
    BOOL            reduce using rule 138 (factor_opt -> PLUS .)
    ID              reduce using rule 138 (factor_opt -> PLUS .)


state 77

    (128) exp -> termino . exp_loop
    (129) exp_loop -> . PLUS exp
    (130) exp_loop -> . MINUS exp
    (131) exp_loop -> . empty
    (6) empty -> .

    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    GTHAN           reduce using rule 6 (empty -> .)
    GETHAN          reduce using rule 6 (empty -> .)
    ASIGN           reduce using rule 6 (empty -> .)
    NOTEQUAL        reduce using rule 6 (empty -> .)
    LTHAN           reduce using rule 6 (empty -> .)
    LETHAN          reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    RBRACKET        reduce using rule 6 (empty -> .)
    COMA            reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    RPARENTHESIS    reduce using rule 6 (empty -> .)
    VAR             reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)
    IF              reduce using rule 6 (empty -> .)
    WHILE           reduce using rule 6 (empty -> .)
    PRINT           reduce using rule 6 (empty -> .)
    READ            reduce using rule 6 (empty -> .)
    RBRACE          reduce using rule 6 (empty -> .)
    RETURN          reduce using rule 6 (empty -> .)
    LPARENTHESIS    reduce using rule 6 (empty -> .)

    exp_loop                       shift and go to state 112
    empty                          shift and go to state 115

state 78

    (119) expresion -> exp . expresion_opt
    (120) expresion_opt -> . expresion_opt_opt exp
    (121) expresion_opt -> . empty
    (122) expresion_opt_opt -> . GTHAN
    (123) expresion_opt_opt -> . GETHAN
    (124) expresion_opt_opt -> . ASIGN ASIGN
    (125) expresion_opt_opt -> . NOTEQUAL
    (126) expresion_opt_opt -> . LTHAN
    (127) expresion_opt_opt -> . LETHAN
    (6) empty -> .

    GTHAN           shift and go to state 118
    GETHAN          shift and go to state 119
    ASIGN           shift and go to state 123
    NOTEQUAL        shift and go to state 116
    LTHAN           shift and go to state 120
    LETHAN          shift and go to state 122
    AND             reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    RBRACKET        reduce using rule 6 (empty -> .)
    COMA            reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    RPARENTHESIS    reduce using rule 6 (empty -> .)
    VAR             reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)
    IF              reduce using rule 6 (empty -> .)
    WHILE           reduce using rule 6 (empty -> .)
    PRINT           reduce using rule 6 (empty -> .)
    READ            reduce using rule 6 (empty -> .)
    RBRACE          reduce using rule 6 (empty -> .)
    RETURN          reduce using rule 6 (empty -> .)
    LPARENTHESIS    reduce using rule 6 (empty -> .)

    expresion_opt                  shift and go to state 121
    expresion_opt_opt              shift and go to state 117
    empty                          shift and go to state 124

state 79

    (132) termino -> factor . termino_loop
    (133) termino_loop -> . TIMES termino
    (134) termino_loop -> . DIVIDE termino
    (135) termino_loop -> . empty
    (6) empty -> .

    TIMES           shift and go to state 127
    DIVIDE          shift and go to state 125
    PLUS            reduce using rule 6 (empty -> .)
    MINUS           reduce using rule 6 (empty -> .)
    GTHAN           reduce using rule 6 (empty -> .)
    GETHAN          reduce using rule 6 (empty -> .)
    ASIGN           reduce using rule 6 (empty -> .)
    NOTEQUAL        reduce using rule 6 (empty -> .)
    LTHAN           reduce using rule 6 (empty -> .)
    LETHAN          reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    RBRACKET        reduce using rule 6 (empty -> .)
    COMA            reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    RPARENTHESIS    reduce using rule 6 (empty -> .)
    VAR             reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)
    IF              reduce using rule 6 (empty -> .)
    WHILE           reduce using rule 6 (empty -> .)
    PRINT           reduce using rule 6 (empty -> .)
    READ            reduce using rule 6 (empty -> .)
    RBRACE          reduce using rule 6 (empty -> .)
    RETURN          reduce using rule 6 (empty -> .)
    LPARENTHESIS    reduce using rule 6 (empty -> .)

    termino_loop                   shift and go to state 126
    empty                          shift and go to state 128

state 80

    (139) factor_opt -> MINUS .

    STRING          reduce using rule 139 (factor_opt -> MINUS .)
    INT             reduce using rule 139 (factor_opt -> MINUS .)
    DOUBLE          reduce using rule 139 (factor_opt -> MINUS .)
    BOOL            reduce using rule 139 (factor_opt -> MINUS .)
    ID              reduce using rule 139 (factor_opt -> MINUS .)


state 81

    (137) factor -> factor_opt . factor_opt_2
    (141) factor_opt_2 -> . cte
    (142) factor_opt_2 -> . idllamada
    (61) cte -> . STRING
    (62) cte -> . INT
    (63) cte -> . DOUBLE
    (64) cte -> . BOOL
    (143) idllamada -> . ID idllamada_opt

    STRING          shift and go to state 130
    INT             shift and go to state 132
    DOUBLE          shift and go to state 133
    BOOL            shift and go to state 135
    ID              shift and go to state 136

    factor_opt_2                   shift and go to state 129
    cte                            shift and go to state 134
    idllamada                      shift and go to state 131

state 82

    (19) tipo_opt_prim -> primitivo ID tipo_opt_prim_2 tipo_opt_prim_loop .

    SEMICOLON       reduce using rule 19 (tipo_opt_prim -> primitivo ID tipo_opt_prim_2 tipo_opt_prim_loop .)


state 83

    (20) tipo_opt_prim_loop -> COMA . tipo_opt_prim
    (19) tipo_opt_prim -> . primitivo ID tipo_opt_prim_2 tipo_opt_prim_loop
    (52) primitivo -> . TYPEINT
    (53) primitivo -> . TYPEDOUBLE
    (54) primitivo -> . TYPEBOOL
    (55) primitivo -> . TYPESTRING

    TYPEINT         shift and go to state 22
    TYPEDOUBLE      shift and go to state 14
    TYPEBOOL        shift and go to state 15
    TYPESTRING      shift and go to state 21

    primitivo                      shift and go to state 19
    tipo_opt_prim                  shift and go to state 137

state 84

    (21) tipo_opt_prim_loop -> empty .

    SEMICOLON       reduce using rule 21 (tipo_opt_prim_loop -> empty .)


state 85

    (35) ini_prim -> ASIGN logica .

    COMA            reduce using rule 35 (ini_prim -> ASIGN logica .)
    SEMICOLON       reduce using rule 35 (ini_prim -> ASIGN logica .)


state 86

    (23) tipo_opt_prim_2 -> LBRACKET logica . RBRACKET tipo_opt_prim_3

    RBRACKET        shift and go to state 138


state 87

    (10) rutinas -> RUTINA rutina_opt COLON ID . LPARENTHESIS parametros RPARENTHESIS bloque_rutina rutinas_loop_2

    LPARENTHESIS    shift and go to state 139


state 88

    (111) lectura -> READ LPARENTHESIS . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 140


state 89

    (109) ciclo -> WHILE LPARENTHESIS . logica RPARENTHESIS bloque
    (115) logica -> . expresion logica_loop
    (119) expresion -> . exp expresion_opt
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    expresion                      shift and go to state 72
    logica                         shift and go to state 141
    empty                          shift and go to state 75
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor                         shift and go to state 79
    factor_opt                     shift and go to state 81

state 90

    (110) impresion -> PRINT LPARENTHESIS . logica RPARENTHESIS SEMICOLON
    (115) logica -> . expresion logica_loop
    (119) expresion -> . exp expresion_opt
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    expresion                      shift and go to state 72
    logica                         shift and go to state 142
    empty                          shift and go to state 75
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor                         shift and go to state 79
    factor_opt                     shift and go to state 81

state 91

    (79) bloque_lienzo -> LBRACE bloque_lienzo_loop RBRACE .

    $end            reduce using rule 79 (bloque_lienzo -> LBRACE bloque_lienzo_loop RBRACE .)


state 92

    (97) asignacion -> ID asignacion_opt . ASIGN asignacion_opt_2

    ASIGN           shift and go to state 143


state 93

    (149) accion -> ID POINT . accion_opt COLON
    (150) accion_opt -> . accion_figura
    (151) accion_opt -> . accion_pincel
    (152) accion_figura -> . accion_figura_opt LPARENTHESIS
    (162) accion_pincel -> . accion_pincel_opt RPARENTHESIS
    (153) accion_figura_opt -> . accion_figura_opt_2
    (154) accion_figura_opt -> . accion_figura_opt_3
    (163) accion_pincel_opt -> . COLOR LPARENTHESIS color
    (164) accion_pincel_opt -> . DISPLACE accion_pincel_opt_end
    (165) accion_pincel_opt -> . PAINT accion_pincel_opt_end
    (166) accion_pincel_opt -> . GRAPH LPARENTHESIS CTEFUNCION COMA exp
    (155) accion_figura_opt_2 -> . MOVEA accion_figura_opt_2_end
    (156) accion_figura_opt_2 -> . ROTATE accion_figura_opt_2_end
    (157) accion_figura_opt_2 -> . GROW accion_figura_opt_2_end
    (158) accion_figura_opt_2 -> . THICK accion_figura_opt_2_end
    (160) accion_figura_opt_3 -> . REMOVE LPARENTHESIS
    (161) accion_figura_opt_3 -> . FILL LPARENTHESIS color

    COLOR           shift and go to state 147
    DISPLACE        shift and go to state 155
    PAINT           shift and go to state 156
    GRAPH           shift and go to state 154
    MOVEA           shift and go to state 148
    ROTATE          shift and go to state 157
    GROW            shift and go to state 149
    THICK           shift and go to state 152
    REMOVE          shift and go to state 158
    FILL            shift and go to state 146

    accion_pincel                  shift and go to state 144
    accion_pincel_opt              shift and go to state 145
    accion_figura                  shift and go to state 150
    accion_figura_opt              shift and go to state 151
    accion_figura_opt_2            shift and go to state 159
    accion_figura_opt_3            shift and go to state 160
    accion_opt                     shift and go to state 153

state 94

    (112) llamada -> ID LPARENTHESIS . exp llamada_loop RPARENTHESIS COLON
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 161
    factor                         shift and go to state 79
    empty                          shift and go to state 75

state 95

    (98) asignacion_opt -> LBRACKET . logica RBRACKET
    (115) logica -> . expresion logica_loop
    (119) expresion -> . exp expresion_opt
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    expresion                      shift and go to state 72
    logica                         shift and go to state 162
    empty                          shift and go to state 75
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor                         shift and go to state 79
    factor_opt                     shift and go to state 81

state 96

    (99) asignacion_opt -> empty .

    ASIGN           reduce using rule 99 (asignacion_opt -> empty .)


state 97

    (104) condicion_loop -> LPARENTHESIS . logica RPARENTHESIS bloque condicion_loop_opt
    (115) logica -> . expresion logica_loop
    (119) expresion -> . exp expresion_opt
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    expresion                      shift and go to state 72
    logica                         shift and go to state 163
    empty                          shift and go to state 75
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor                         shift and go to state 79
    factor_opt                     shift and go to state 81

state 98

    (103) condicion -> IF condicion_loop . condicion_opt
    (107) condicion_opt -> . ELSE bloque
    (108) condicion_opt -> . empty
    (6) empty -> .

    ELSE            shift and go to state 164
    VAR             reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)
    IF              reduce using rule 6 (empty -> .)
    WHILE           reduce using rule 6 (empty -> .)
    PRINT           reduce using rule 6 (empty -> .)
    READ            reduce using rule 6 (empty -> .)
    RBRACE          reduce using rule 6 (empty -> .)
    RETURN          reduce using rule 6 (empty -> .)

    empty                          shift and go to state 166
    condicion_opt                  shift and go to state 165

state 99

    (80) bloque_lienzo_loop -> estatuto_lienzo bloque_lienzo_loop .

    RBRACE          reduce using rule 80 (bloque_lienzo_loop -> estatuto_lienzo bloque_lienzo_loop .)


state 100

    (50) fgra_atr -> TRIANG . LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end

    LPARENTHESIS    shift and go to state 167


state 101

    (44) fgra_nva -> NUEVO fgra_atr .

    VAR             reduce using rule 44 (fgra_nva -> NUEVO fgra_atr .)
    ID              reduce using rule 44 (fgra_nva -> NUEVO fgra_atr .)
    IF              reduce using rule 44 (fgra_nva -> NUEVO fgra_atr .)
    WHILE           reduce using rule 44 (fgra_nva -> NUEVO fgra_atr .)
    PRINT           reduce using rule 44 (fgra_nva -> NUEVO fgra_atr .)
    READ            reduce using rule 44 (fgra_nva -> NUEVO fgra_atr .)
    RBRACE          reduce using rule 44 (fgra_nva -> NUEVO fgra_atr .)
    RETURN          reduce using rule 44 (fgra_nva -> NUEVO fgra_atr .)
    SEMICOLON       reduce using rule 44 (fgra_nva -> NUEVO fgra_atr .)


state 102

    (46) fgra_atr -> PINCEL . LPARENTHESIS fgra_atr_end

    LPARENTHESIS    shift and go to state 168


state 103

    (48) fgra_atr -> CIRC . LPARENTHESIS exp COMA fgra_atr_end

    LPARENTHESIS    shift and go to state 169


state 104

    (49) fgra_atr -> RECT . LPARENTHESIS exp COMA exp COMA fgra_atr_end

    LPARENTHESIS    shift and go to state 170


state 105

    (47) fgra_atr -> CUAD . LPARENTHESIS exp COMA fgra_atr_end

    LPARENTHESIS    shift and go to state 171


state 106

    (116) logica_loop -> AND . logica
    (115) logica -> . expresion logica_loop
    (119) expresion -> . exp expresion_opt
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    expresion                      shift and go to state 72
    logica                         shift and go to state 172
    empty                          shift and go to state 75
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor                         shift and go to state 79
    factor_opt                     shift and go to state 81

state 107

    (115) logica -> expresion logica_loop .

    RPARENTHESIS    reduce using rule 115 (logica -> expresion logica_loop .)
    COMA            reduce using rule 115 (logica -> expresion logica_loop .)
    SEMICOLON       reduce using rule 115 (logica -> expresion logica_loop .)
    RBRACKET        reduce using rule 115 (logica -> expresion logica_loop .)
    VAR             reduce using rule 115 (logica -> expresion logica_loop .)
    ID              reduce using rule 115 (logica -> expresion logica_loop .)
    IF              reduce using rule 115 (logica -> expresion logica_loop .)
    WHILE           reduce using rule 115 (logica -> expresion logica_loop .)
    PRINT           reduce using rule 115 (logica -> expresion logica_loop .)
    READ            reduce using rule 115 (logica -> expresion logica_loop .)
    RBRACE          reduce using rule 115 (logica -> expresion logica_loop .)
    RETURN          reduce using rule 115 (logica -> expresion logica_loop .)


state 108

    (117) logica_loop -> OR . logica
    (115) logica -> . expresion logica_loop
    (119) expresion -> . exp expresion_opt
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    expresion                      shift and go to state 72
    logica                         shift and go to state 173
    empty                          shift and go to state 75
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor                         shift and go to state 79
    factor_opt                     shift and go to state 81

state 109

    (118) logica_loop -> empty .

    RBRACKET        reduce using rule 118 (logica_loop -> empty .)
    COMA            reduce using rule 118 (logica_loop -> empty .)
    SEMICOLON       reduce using rule 118 (logica_loop -> empty .)
    RPARENTHESIS    reduce using rule 118 (logica_loop -> empty .)
    VAR             reduce using rule 118 (logica_loop -> empty .)
    ID              reduce using rule 118 (logica_loop -> empty .)
    IF              reduce using rule 118 (logica_loop -> empty .)
    WHILE           reduce using rule 118 (logica_loop -> empty .)
    PRINT           reduce using rule 118 (logica_loop -> empty .)
    READ            reduce using rule 118 (logica_loop -> empty .)
    RBRACE          reduce using rule 118 (logica_loop -> empty .)
    RETURN          reduce using rule 118 (logica_loop -> empty .)


state 110

    (136) factor -> LPARENTHESIS expresion . RPARENTHESIS

    RPARENTHESIS    shift and go to state 174


state 111

    (31) tipo_opt_fig_2 -> LBRACKET logica RBRACKET . tipo_opt_fig_3
    (33) tipo_opt_fig_3 -> . ini_fgra_v
    (34) tipo_opt_fig_3 -> . empty
    (40) ini_fgra_v -> . COMA logica ini_fgras_v_loop
    (41) ini_fgra_v -> . empty
    (6) empty -> .

    COMA            shift and go to state 177
    SEMICOLON       reduce using rule 6 (empty -> .)

    tipo_opt_fig_3                 shift and go to state 176
    empty                          shift and go to state 178
    ini_fgra_v                     shift and go to state 175

state 112

    (128) exp -> termino exp_loop .

    GTHAN           reduce using rule 128 (exp -> termino exp_loop .)
    GETHAN          reduce using rule 128 (exp -> termino exp_loop .)
    ASIGN           reduce using rule 128 (exp -> termino exp_loop .)
    NOTEQUAL        reduce using rule 128 (exp -> termino exp_loop .)
    LTHAN           reduce using rule 128 (exp -> termino exp_loop .)
    LETHAN          reduce using rule 128 (exp -> termino exp_loop .)
    AND             reduce using rule 128 (exp -> termino exp_loop .)
    OR              reduce using rule 128 (exp -> termino exp_loop .)
    RPARENTHESIS    reduce using rule 128 (exp -> termino exp_loop .)
    COMA            reduce using rule 128 (exp -> termino exp_loop .)
    LPARENTHESIS    reduce using rule 128 (exp -> termino exp_loop .)
    RBRACKET        reduce using rule 128 (exp -> termino exp_loop .)
    SEMICOLON       reduce using rule 128 (exp -> termino exp_loop .)
    VAR             reduce using rule 128 (exp -> termino exp_loop .)
    ID              reduce using rule 128 (exp -> termino exp_loop .)
    IF              reduce using rule 128 (exp -> termino exp_loop .)
    WHILE           reduce using rule 128 (exp -> termino exp_loop .)
    PRINT           reduce using rule 128 (exp -> termino exp_loop .)
    READ            reduce using rule 128 (exp -> termino exp_loop .)
    RBRACE          reduce using rule 128 (exp -> termino exp_loop .)
    RETURN          reduce using rule 128 (exp -> termino exp_loop .)


state 113

    (129) exp_loop -> PLUS . exp
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 179
    factor                         shift and go to state 79
    empty                          shift and go to state 75

state 114

    (130) exp_loop -> MINUS . exp
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 180
    factor                         shift and go to state 79
    empty                          shift and go to state 75

state 115

    (131) exp_loop -> empty .

    GTHAN           reduce using rule 131 (exp_loop -> empty .)
    GETHAN          reduce using rule 131 (exp_loop -> empty .)
    ASIGN           reduce using rule 131 (exp_loop -> empty .)
    NOTEQUAL        reduce using rule 131 (exp_loop -> empty .)
    LTHAN           reduce using rule 131 (exp_loop -> empty .)
    LETHAN          reduce using rule 131 (exp_loop -> empty .)
    AND             reduce using rule 131 (exp_loop -> empty .)
    OR              reduce using rule 131 (exp_loop -> empty .)
    RBRACKET        reduce using rule 131 (exp_loop -> empty .)
    COMA            reduce using rule 131 (exp_loop -> empty .)
    SEMICOLON       reduce using rule 131 (exp_loop -> empty .)
    RPARENTHESIS    reduce using rule 131 (exp_loop -> empty .)
    VAR             reduce using rule 131 (exp_loop -> empty .)
    ID              reduce using rule 131 (exp_loop -> empty .)
    IF              reduce using rule 131 (exp_loop -> empty .)
    WHILE           reduce using rule 131 (exp_loop -> empty .)
    PRINT           reduce using rule 131 (exp_loop -> empty .)
    READ            reduce using rule 131 (exp_loop -> empty .)
    RBRACE          reduce using rule 131 (exp_loop -> empty .)
    RETURN          reduce using rule 131 (exp_loop -> empty .)
    LPARENTHESIS    reduce using rule 131 (exp_loop -> empty .)


state 116

    (125) expresion_opt_opt -> NOTEQUAL .

    LPARENTHESIS    reduce using rule 125 (expresion_opt_opt -> NOTEQUAL .)
    PLUS            reduce using rule 125 (expresion_opt_opt -> NOTEQUAL .)
    MINUS           reduce using rule 125 (expresion_opt_opt -> NOTEQUAL .)
    STRING          reduce using rule 125 (expresion_opt_opt -> NOTEQUAL .)
    INT             reduce using rule 125 (expresion_opt_opt -> NOTEQUAL .)
    DOUBLE          reduce using rule 125 (expresion_opt_opt -> NOTEQUAL .)
    BOOL            reduce using rule 125 (expresion_opt_opt -> NOTEQUAL .)
    ID              reduce using rule 125 (expresion_opt_opt -> NOTEQUAL .)


state 117

    (120) expresion_opt -> expresion_opt_opt . exp
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 181
    factor                         shift and go to state 79
    empty                          shift and go to state 75

state 118

    (122) expresion_opt_opt -> GTHAN .

    LPARENTHESIS    reduce using rule 122 (expresion_opt_opt -> GTHAN .)
    PLUS            reduce using rule 122 (expresion_opt_opt -> GTHAN .)
    MINUS           reduce using rule 122 (expresion_opt_opt -> GTHAN .)
    STRING          reduce using rule 122 (expresion_opt_opt -> GTHAN .)
    INT             reduce using rule 122 (expresion_opt_opt -> GTHAN .)
    DOUBLE          reduce using rule 122 (expresion_opt_opt -> GTHAN .)
    BOOL            reduce using rule 122 (expresion_opt_opt -> GTHAN .)
    ID              reduce using rule 122 (expresion_opt_opt -> GTHAN .)


state 119

    (123) expresion_opt_opt -> GETHAN .

    LPARENTHESIS    reduce using rule 123 (expresion_opt_opt -> GETHAN .)
    PLUS            reduce using rule 123 (expresion_opt_opt -> GETHAN .)
    MINUS           reduce using rule 123 (expresion_opt_opt -> GETHAN .)
    STRING          reduce using rule 123 (expresion_opt_opt -> GETHAN .)
    INT             reduce using rule 123 (expresion_opt_opt -> GETHAN .)
    DOUBLE          reduce using rule 123 (expresion_opt_opt -> GETHAN .)
    BOOL            reduce using rule 123 (expresion_opt_opt -> GETHAN .)
    ID              reduce using rule 123 (expresion_opt_opt -> GETHAN .)


state 120

    (126) expresion_opt_opt -> LTHAN .

    LPARENTHESIS    reduce using rule 126 (expresion_opt_opt -> LTHAN .)
    PLUS            reduce using rule 126 (expresion_opt_opt -> LTHAN .)
    MINUS           reduce using rule 126 (expresion_opt_opt -> LTHAN .)
    STRING          reduce using rule 126 (expresion_opt_opt -> LTHAN .)
    INT             reduce using rule 126 (expresion_opt_opt -> LTHAN .)
    DOUBLE          reduce using rule 126 (expresion_opt_opt -> LTHAN .)
    BOOL            reduce using rule 126 (expresion_opt_opt -> LTHAN .)
    ID              reduce using rule 126 (expresion_opt_opt -> LTHAN .)


state 121

    (119) expresion -> exp expresion_opt .

    RPARENTHESIS    reduce using rule 119 (expresion -> exp expresion_opt .)
    AND             reduce using rule 119 (expresion -> exp expresion_opt .)
    OR              reduce using rule 119 (expresion -> exp expresion_opt .)
    RBRACKET        reduce using rule 119 (expresion -> exp expresion_opt .)
    COMA            reduce using rule 119 (expresion -> exp expresion_opt .)
    SEMICOLON       reduce using rule 119 (expresion -> exp expresion_opt .)
    VAR             reduce using rule 119 (expresion -> exp expresion_opt .)
    ID              reduce using rule 119 (expresion -> exp expresion_opt .)
    IF              reduce using rule 119 (expresion -> exp expresion_opt .)
    WHILE           reduce using rule 119 (expresion -> exp expresion_opt .)
    PRINT           reduce using rule 119 (expresion -> exp expresion_opt .)
    READ            reduce using rule 119 (expresion -> exp expresion_opt .)
    RBRACE          reduce using rule 119 (expresion -> exp expresion_opt .)
    RETURN          reduce using rule 119 (expresion -> exp expresion_opt .)
    LPARENTHESIS    reduce using rule 119 (expresion -> exp expresion_opt .)


state 122

    (127) expresion_opt_opt -> LETHAN .

    LPARENTHESIS    reduce using rule 127 (expresion_opt_opt -> LETHAN .)
    PLUS            reduce using rule 127 (expresion_opt_opt -> LETHAN .)
    MINUS           reduce using rule 127 (expresion_opt_opt -> LETHAN .)
    STRING          reduce using rule 127 (expresion_opt_opt -> LETHAN .)
    INT             reduce using rule 127 (expresion_opt_opt -> LETHAN .)
    DOUBLE          reduce using rule 127 (expresion_opt_opt -> LETHAN .)
    BOOL            reduce using rule 127 (expresion_opt_opt -> LETHAN .)
    ID              reduce using rule 127 (expresion_opt_opt -> LETHAN .)


state 123

    (124) expresion_opt_opt -> ASIGN . ASIGN

    ASIGN           shift and go to state 182


state 124

    (121) expresion_opt -> empty .

    AND             reduce using rule 121 (expresion_opt -> empty .)
    OR              reduce using rule 121 (expresion_opt -> empty .)
    RBRACKET        reduce using rule 121 (expresion_opt -> empty .)
    COMA            reduce using rule 121 (expresion_opt -> empty .)
    SEMICOLON       reduce using rule 121 (expresion_opt -> empty .)
    RPARENTHESIS    reduce using rule 121 (expresion_opt -> empty .)
    VAR             reduce using rule 121 (expresion_opt -> empty .)
    ID              reduce using rule 121 (expresion_opt -> empty .)
    IF              reduce using rule 121 (expresion_opt -> empty .)
    WHILE           reduce using rule 121 (expresion_opt -> empty .)
    PRINT           reduce using rule 121 (expresion_opt -> empty .)
    READ            reduce using rule 121 (expresion_opt -> empty .)
    RBRACE          reduce using rule 121 (expresion_opt -> empty .)
    RETURN          reduce using rule 121 (expresion_opt -> empty .)
    LPARENTHESIS    reduce using rule 121 (expresion_opt -> empty .)


state 125

    (134) termino_loop -> DIVIDE . termino
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 183
    factor                         shift and go to state 79
    empty                          shift and go to state 75

state 126

    (132) termino -> factor termino_loop .

    PLUS            reduce using rule 132 (termino -> factor termino_loop .)
    MINUS           reduce using rule 132 (termino -> factor termino_loop .)
    GTHAN           reduce using rule 132 (termino -> factor termino_loop .)
    GETHAN          reduce using rule 132 (termino -> factor termino_loop .)
    ASIGN           reduce using rule 132 (termino -> factor termino_loop .)
    NOTEQUAL        reduce using rule 132 (termino -> factor termino_loop .)
    LTHAN           reduce using rule 132 (termino -> factor termino_loop .)
    LETHAN          reduce using rule 132 (termino -> factor termino_loop .)
    AND             reduce using rule 132 (termino -> factor termino_loop .)
    OR              reduce using rule 132 (termino -> factor termino_loop .)
    RBRACE          reduce using rule 132 (termino -> factor termino_loop .)
    LPARENTHESIS    reduce using rule 132 (termino -> factor termino_loop .)
    COMA            reduce using rule 132 (termino -> factor termino_loop .)
    RPARENTHESIS    reduce using rule 132 (termino -> factor termino_loop .)
    RBRACKET        reduce using rule 132 (termino -> factor termino_loop .)
    SEMICOLON       reduce using rule 132 (termino -> factor termino_loop .)
    VAR             reduce using rule 132 (termino -> factor termino_loop .)
    ID              reduce using rule 132 (termino -> factor termino_loop .)
    IF              reduce using rule 132 (termino -> factor termino_loop .)
    WHILE           reduce using rule 132 (termino -> factor termino_loop .)
    PRINT           reduce using rule 132 (termino -> factor termino_loop .)
    READ            reduce using rule 132 (termino -> factor termino_loop .)
    RETURN          reduce using rule 132 (termino -> factor termino_loop .)


state 127

    (133) termino_loop -> TIMES . termino
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 184
    factor                         shift and go to state 79
    empty                          shift and go to state 75

state 128

    (135) termino_loop -> empty .

    PLUS            reduce using rule 135 (termino_loop -> empty .)
    MINUS           reduce using rule 135 (termino_loop -> empty .)
    GTHAN           reduce using rule 135 (termino_loop -> empty .)
    GETHAN          reduce using rule 135 (termino_loop -> empty .)
    ASIGN           reduce using rule 135 (termino_loop -> empty .)
    NOTEQUAL        reduce using rule 135 (termino_loop -> empty .)
    LTHAN           reduce using rule 135 (termino_loop -> empty .)
    LETHAN          reduce using rule 135 (termino_loop -> empty .)
    AND             reduce using rule 135 (termino_loop -> empty .)
    OR              reduce using rule 135 (termino_loop -> empty .)
    RBRACKET        reduce using rule 135 (termino_loop -> empty .)
    COMA            reduce using rule 135 (termino_loop -> empty .)
    SEMICOLON       reduce using rule 135 (termino_loop -> empty .)
    RPARENTHESIS    reduce using rule 135 (termino_loop -> empty .)
    VAR             reduce using rule 135 (termino_loop -> empty .)
    ID              reduce using rule 135 (termino_loop -> empty .)
    IF              reduce using rule 135 (termino_loop -> empty .)
    WHILE           reduce using rule 135 (termino_loop -> empty .)
    PRINT           reduce using rule 135 (termino_loop -> empty .)
    READ            reduce using rule 135 (termino_loop -> empty .)
    RBRACE          reduce using rule 135 (termino_loop -> empty .)
    RETURN          reduce using rule 135 (termino_loop -> empty .)
    LPARENTHESIS    reduce using rule 135 (termino_loop -> empty .)


state 129

    (137) factor -> factor_opt factor_opt_2 .

    TIMES           reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    DIVIDE          reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    PLUS            reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    MINUS           reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    GTHAN           reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    GETHAN          reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    ASIGN           reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    NOTEQUAL        reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    LTHAN           reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    LETHAN          reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    RPARENTHESIS    reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    AND             reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    OR              reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    RBRACKET        reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    COMA            reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    SEMICOLON       reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    VAR             reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    ID              reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    IF              reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    WHILE           reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    PRINT           reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    READ            reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    RBRACE          reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    RETURN          reduce using rule 137 (factor -> factor_opt factor_opt_2 .)
    LPARENTHESIS    reduce using rule 137 (factor -> factor_opt factor_opt_2 .)


state 130

    (61) cte -> STRING .

    TIMES           reduce using rule 61 (cte -> STRING .)
    DIVIDE          reduce using rule 61 (cte -> STRING .)
    PLUS            reduce using rule 61 (cte -> STRING .)
    MINUS           reduce using rule 61 (cte -> STRING .)
    GTHAN           reduce using rule 61 (cte -> STRING .)
    GETHAN          reduce using rule 61 (cte -> STRING .)
    ASIGN           reduce using rule 61 (cte -> STRING .)
    NOTEQUAL        reduce using rule 61 (cte -> STRING .)
    LTHAN           reduce using rule 61 (cte -> STRING .)
    LETHAN          reduce using rule 61 (cte -> STRING .)
    AND             reduce using rule 61 (cte -> STRING .)
    OR              reduce using rule 61 (cte -> STRING .)
    RBRACKET        reduce using rule 61 (cte -> STRING .)
    COMA            reduce using rule 61 (cte -> STRING .)
    SEMICOLON       reduce using rule 61 (cte -> STRING .)
    RPARENTHESIS    reduce using rule 61 (cte -> STRING .)
    VAR             reduce using rule 61 (cte -> STRING .)
    ID              reduce using rule 61 (cte -> STRING .)
    IF              reduce using rule 61 (cte -> STRING .)
    WHILE           reduce using rule 61 (cte -> STRING .)
    PRINT           reduce using rule 61 (cte -> STRING .)
    READ            reduce using rule 61 (cte -> STRING .)
    RBRACE          reduce using rule 61 (cte -> STRING .)
    RETURN          reduce using rule 61 (cte -> STRING .)
    LPARENTHESIS    reduce using rule 61 (cte -> STRING .)


state 131

    (142) factor_opt_2 -> idllamada .

    TIMES           reduce using rule 142 (factor_opt_2 -> idllamada .)
    DIVIDE          reduce using rule 142 (factor_opt_2 -> idllamada .)
    PLUS            reduce using rule 142 (factor_opt_2 -> idllamada .)
    MINUS           reduce using rule 142 (factor_opt_2 -> idllamada .)
    GTHAN           reduce using rule 142 (factor_opt_2 -> idllamada .)
    GETHAN          reduce using rule 142 (factor_opt_2 -> idllamada .)
    ASIGN           reduce using rule 142 (factor_opt_2 -> idllamada .)
    NOTEQUAL        reduce using rule 142 (factor_opt_2 -> idllamada .)
    LTHAN           reduce using rule 142 (factor_opt_2 -> idllamada .)
    LETHAN          reduce using rule 142 (factor_opt_2 -> idllamada .)
    AND             reduce using rule 142 (factor_opt_2 -> idllamada .)
    OR              reduce using rule 142 (factor_opt_2 -> idllamada .)
    RBRACKET        reduce using rule 142 (factor_opt_2 -> idllamada .)
    COMA            reduce using rule 142 (factor_opt_2 -> idllamada .)
    SEMICOLON       reduce using rule 142 (factor_opt_2 -> idllamada .)
    RPARENTHESIS    reduce using rule 142 (factor_opt_2 -> idllamada .)
    VAR             reduce using rule 142 (factor_opt_2 -> idllamada .)
    ID              reduce using rule 142 (factor_opt_2 -> idllamada .)
    IF              reduce using rule 142 (factor_opt_2 -> idllamada .)
    WHILE           reduce using rule 142 (factor_opt_2 -> idllamada .)
    PRINT           reduce using rule 142 (factor_opt_2 -> idllamada .)
    READ            reduce using rule 142 (factor_opt_2 -> idllamada .)
    RBRACE          reduce using rule 142 (factor_opt_2 -> idllamada .)
    RETURN          reduce using rule 142 (factor_opt_2 -> idllamada .)
    LPARENTHESIS    reduce using rule 142 (factor_opt_2 -> idllamada .)


state 132

    (62) cte -> INT .

    TIMES           reduce using rule 62 (cte -> INT .)
    DIVIDE          reduce using rule 62 (cte -> INT .)
    PLUS            reduce using rule 62 (cte -> INT .)
    MINUS           reduce using rule 62 (cte -> INT .)
    GTHAN           reduce using rule 62 (cte -> INT .)
    GETHAN          reduce using rule 62 (cte -> INT .)
    ASIGN           reduce using rule 62 (cte -> INT .)
    NOTEQUAL        reduce using rule 62 (cte -> INT .)
    LTHAN           reduce using rule 62 (cte -> INT .)
    LETHAN          reduce using rule 62 (cte -> INT .)
    AND             reduce using rule 62 (cte -> INT .)
    OR              reduce using rule 62 (cte -> INT .)
    RBRACKET        reduce using rule 62 (cte -> INT .)
    COMA            reduce using rule 62 (cte -> INT .)
    SEMICOLON       reduce using rule 62 (cte -> INT .)
    RPARENTHESIS    reduce using rule 62 (cte -> INT .)
    VAR             reduce using rule 62 (cte -> INT .)
    ID              reduce using rule 62 (cte -> INT .)
    IF              reduce using rule 62 (cte -> INT .)
    WHILE           reduce using rule 62 (cte -> INT .)
    PRINT           reduce using rule 62 (cte -> INT .)
    READ            reduce using rule 62 (cte -> INT .)
    RBRACE          reduce using rule 62 (cte -> INT .)
    RETURN          reduce using rule 62 (cte -> INT .)
    LPARENTHESIS    reduce using rule 62 (cte -> INT .)


state 133

    (63) cte -> DOUBLE .

    TIMES           reduce using rule 63 (cte -> DOUBLE .)
    DIVIDE          reduce using rule 63 (cte -> DOUBLE .)
    PLUS            reduce using rule 63 (cte -> DOUBLE .)
    MINUS           reduce using rule 63 (cte -> DOUBLE .)
    GTHAN           reduce using rule 63 (cte -> DOUBLE .)
    GETHAN          reduce using rule 63 (cte -> DOUBLE .)
    ASIGN           reduce using rule 63 (cte -> DOUBLE .)
    NOTEQUAL        reduce using rule 63 (cte -> DOUBLE .)
    LTHAN           reduce using rule 63 (cte -> DOUBLE .)
    LETHAN          reduce using rule 63 (cte -> DOUBLE .)
    AND             reduce using rule 63 (cte -> DOUBLE .)
    OR              reduce using rule 63 (cte -> DOUBLE .)
    RBRACKET        reduce using rule 63 (cte -> DOUBLE .)
    COMA            reduce using rule 63 (cte -> DOUBLE .)
    SEMICOLON       reduce using rule 63 (cte -> DOUBLE .)
    RPARENTHESIS    reduce using rule 63 (cte -> DOUBLE .)
    VAR             reduce using rule 63 (cte -> DOUBLE .)
    ID              reduce using rule 63 (cte -> DOUBLE .)
    IF              reduce using rule 63 (cte -> DOUBLE .)
    WHILE           reduce using rule 63 (cte -> DOUBLE .)
    PRINT           reduce using rule 63 (cte -> DOUBLE .)
    READ            reduce using rule 63 (cte -> DOUBLE .)
    RBRACE          reduce using rule 63 (cte -> DOUBLE .)
    RETURN          reduce using rule 63 (cte -> DOUBLE .)
    LPARENTHESIS    reduce using rule 63 (cte -> DOUBLE .)


state 134

    (141) factor_opt_2 -> cte .

    TIMES           reduce using rule 141 (factor_opt_2 -> cte .)
    DIVIDE          reduce using rule 141 (factor_opt_2 -> cte .)
    PLUS            reduce using rule 141 (factor_opt_2 -> cte .)
    MINUS           reduce using rule 141 (factor_opt_2 -> cte .)
    GTHAN           reduce using rule 141 (factor_opt_2 -> cte .)
    GETHAN          reduce using rule 141 (factor_opt_2 -> cte .)
    ASIGN           reduce using rule 141 (factor_opt_2 -> cte .)
    NOTEQUAL        reduce using rule 141 (factor_opt_2 -> cte .)
    LTHAN           reduce using rule 141 (factor_opt_2 -> cte .)
    LETHAN          reduce using rule 141 (factor_opt_2 -> cte .)
    AND             reduce using rule 141 (factor_opt_2 -> cte .)
    OR              reduce using rule 141 (factor_opt_2 -> cte .)
    RBRACKET        reduce using rule 141 (factor_opt_2 -> cte .)
    COMA            reduce using rule 141 (factor_opt_2 -> cte .)
    SEMICOLON       reduce using rule 141 (factor_opt_2 -> cte .)
    RPARENTHESIS    reduce using rule 141 (factor_opt_2 -> cte .)
    VAR             reduce using rule 141 (factor_opt_2 -> cte .)
    ID              reduce using rule 141 (factor_opt_2 -> cte .)
    IF              reduce using rule 141 (factor_opt_2 -> cte .)
    WHILE           reduce using rule 141 (factor_opt_2 -> cte .)
    PRINT           reduce using rule 141 (factor_opt_2 -> cte .)
    READ            reduce using rule 141 (factor_opt_2 -> cte .)
    RBRACE          reduce using rule 141 (factor_opt_2 -> cte .)
    RETURN          reduce using rule 141 (factor_opt_2 -> cte .)
    LPARENTHESIS    reduce using rule 141 (factor_opt_2 -> cte .)


state 135

    (64) cte -> BOOL .

    TIMES           reduce using rule 64 (cte -> BOOL .)
    DIVIDE          reduce using rule 64 (cte -> BOOL .)
    PLUS            reduce using rule 64 (cte -> BOOL .)
    MINUS           reduce using rule 64 (cte -> BOOL .)
    GTHAN           reduce using rule 64 (cte -> BOOL .)
    GETHAN          reduce using rule 64 (cte -> BOOL .)
    ASIGN           reduce using rule 64 (cte -> BOOL .)
    NOTEQUAL        reduce using rule 64 (cte -> BOOL .)
    LTHAN           reduce using rule 64 (cte -> BOOL .)
    LETHAN          reduce using rule 64 (cte -> BOOL .)
    AND             reduce using rule 64 (cte -> BOOL .)
    OR              reduce using rule 64 (cte -> BOOL .)
    RBRACKET        reduce using rule 64 (cte -> BOOL .)
    COMA            reduce using rule 64 (cte -> BOOL .)
    SEMICOLON       reduce using rule 64 (cte -> BOOL .)
    RPARENTHESIS    reduce using rule 64 (cte -> BOOL .)
    VAR             reduce using rule 64 (cte -> BOOL .)
    ID              reduce using rule 64 (cte -> BOOL .)
    IF              reduce using rule 64 (cte -> BOOL .)
    WHILE           reduce using rule 64 (cte -> BOOL .)
    PRINT           reduce using rule 64 (cte -> BOOL .)
    READ            reduce using rule 64 (cte -> BOOL .)
    RBRACE          reduce using rule 64 (cte -> BOOL .)
    RETURN          reduce using rule 64 (cte -> BOOL .)
    LPARENTHESIS    reduce using rule 64 (cte -> BOOL .)


state 136

    (143) idllamada -> ID . idllamada_opt
    (144) idllamada_opt -> . LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS
    (145) idllamada_opt -> . LBRACKET expresion RBRACKET
    (146) idllamada_opt -> . empty
    (6) empty -> .

  ! shift/reduce conflict for LPARENTHESIS resolved as shift
    LPARENTHESIS    shift and go to state 186
    LBRACKET        shift and go to state 187
    TIMES           reduce using rule 6 (empty -> .)
    DIVIDE          reduce using rule 6 (empty -> .)
    PLUS            reduce using rule 6 (empty -> .)
    MINUS           reduce using rule 6 (empty -> .)
    GTHAN           reduce using rule 6 (empty -> .)
    GETHAN          reduce using rule 6 (empty -> .)
    ASIGN           reduce using rule 6 (empty -> .)
    NOTEQUAL        reduce using rule 6 (empty -> .)
    LTHAN           reduce using rule 6 (empty -> .)
    LETHAN          reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    RBRACKET        reduce using rule 6 (empty -> .)
    COMA            reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)
    RPARENTHESIS    reduce using rule 6 (empty -> .)
    VAR             reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)
    IF              reduce using rule 6 (empty -> .)
    WHILE           reduce using rule 6 (empty -> .)
    PRINT           reduce using rule 6 (empty -> .)
    READ            reduce using rule 6 (empty -> .)
    RBRACE          reduce using rule 6 (empty -> .)
    RETURN          reduce using rule 6 (empty -> .)

  ! LPARENTHESIS    [ reduce using rule 6 (empty -> .) ]

    idllamada_opt                  shift and go to state 185
    empty                          shift and go to state 188

state 137

    (20) tipo_opt_prim_loop -> COMA tipo_opt_prim .

    SEMICOLON       reduce using rule 20 (tipo_opt_prim_loop -> COMA tipo_opt_prim .)


state 138

    (23) tipo_opt_prim_2 -> LBRACKET logica RBRACKET . tipo_opt_prim_3
    (25) tipo_opt_prim_3 -> . ini_prim_v
    (26) tipo_opt_prim_3 -> . empty
    (36) ini_prim_v -> . ASIGN LBRACE logica ini_prim_v_loop RBRACE
    (6) empty -> .

    ASIGN           shift and go to state 191
    COMA            reduce using rule 6 (empty -> .)
    SEMICOLON       reduce using rule 6 (empty -> .)

    ini_prim_v                     shift and go to state 189
    tipo_opt_prim_3                shift and go to state 190
    empty                          shift and go to state 192

state 139

    (10) rutinas -> RUTINA rutina_opt COLON ID LPARENTHESIS . parametros RPARENTHESIS bloque_rutina rutinas_loop_2
    (65) parametros -> . tipo COLON ID parametros_loop
    (16) tipo -> . tipo_opt SEMICOLON
    (17) tipo_opt -> . tipo_opt_prim
    (18) tipo_opt -> . tipo_opt_fig
    (19) tipo_opt_prim -> . primitivo ID tipo_opt_prim_2 tipo_opt_prim_loop
    (27) tipo_opt_fig -> . figura ID tipo_opt_fig_2
    (52) primitivo -> . TYPEINT
    (53) primitivo -> . TYPEDOUBLE
    (54) primitivo -> . TYPEBOOL
    (55) primitivo -> . TYPESTRING
    (56) figura -> . PINCEL
    (57) figura -> . CUAD
    (58) figura -> . RECT
    (59) figura -> . CIRC
    (60) figura -> . TRIANG

    TYPEINT         shift and go to state 22
    TYPEDOUBLE      shift and go to state 14
    TYPEBOOL        shift and go to state 15
    TYPESTRING      shift and go to state 21
    PINCEL          shift and go to state 13
    CUAD            shift and go to state 24
    RECT            shift and go to state 16
    CIRC            shift and go to state 23
    TRIANG          shift and go to state 11

    tipo_opt_prim                  shift and go to state 20
    tipo                           shift and go to state 193
    tipo_opt                       shift and go to state 12
    figura                         shift and go to state 10
    primitivo                      shift and go to state 19
    tipo_opt_fig                   shift and go to state 17
    parametros                     shift and go to state 194

state 140

    (111) lectura -> READ LPARENTHESIS RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 195


state 141

    (109) ciclo -> WHILE LPARENTHESIS logica . RPARENTHESIS bloque

    RPARENTHESIS    shift and go to state 196


state 142

    (110) impresion -> PRINT LPARENTHESIS logica . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 197


state 143

    (97) asignacion -> ID asignacion_opt ASIGN . asignacion_opt_2
    (100) asignacion_opt_2 -> . logica
    (101) asignacion_opt_2 -> . lectura
    (102) asignacion_opt_2 -> . fgra_nva
    (115) logica -> . expresion logica_loop
    (111) lectura -> . READ LPARENTHESIS RPARENTHESIS SEMICOLON
    (44) fgra_nva -> . NUEVO fgra_atr
    (45) fgra_nva -> . empty
    (119) expresion -> . exp expresion_opt
    (6) empty -> .
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty

  ! shift/reduce conflict for READ resolved as shift
    READ            shift and go to state 54
    NUEVO           shift and go to state 69
    VAR             reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)
    IF              reduce using rule 6 (empty -> .)
    WHILE           reduce using rule 6 (empty -> .)
    PRINT           reduce using rule 6 (empty -> .)
    RBRACE          reduce using rule 6 (empty -> .)
    RETURN          reduce using rule 6 (empty -> .)
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80

  ! READ            [ reduce using rule 6 (empty -> .) ]

    expresion                      shift and go to state 72
    asignacion_opt_2               shift and go to state 202
    fgra_nva                       shift and go to state 198
    logica                         shift and go to state 199
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor                         shift and go to state 79
    lectura                        shift and go to state 200
    empty                          shift and go to state 201
    factor_opt                     shift and go to state 81

state 144

    (151) accion_opt -> accion_pincel .

    COLON           reduce using rule 151 (accion_opt -> accion_pincel .)


state 145

    (162) accion_pincel -> accion_pincel_opt . RPARENTHESIS

    RPARENTHESIS    shift and go to state 203


state 146

    (161) accion_figura_opt_3 -> FILL . LPARENTHESIS color

    LPARENTHESIS    shift and go to state 204


state 147

    (163) accion_pincel_opt -> COLOR . LPARENTHESIS color

    LPARENTHESIS    shift and go to state 205


state 148

    (155) accion_figura_opt_2 -> MOVEA . accion_figura_opt_2_end
    (159) accion_figura_opt_2_end -> . RPARENTHESIS expresion

    RPARENTHESIS    shift and go to state 207

    accion_figura_opt_2_end        shift and go to state 206

state 149

    (157) accion_figura_opt_2 -> GROW . accion_figura_opt_2_end
    (159) accion_figura_opt_2_end -> . RPARENTHESIS expresion

    RPARENTHESIS    shift and go to state 207

    accion_figura_opt_2_end        shift and go to state 208

state 150

    (150) accion_opt -> accion_figura .

    COLON           reduce using rule 150 (accion_opt -> accion_figura .)


state 151

    (152) accion_figura -> accion_figura_opt . LPARENTHESIS

    LPARENTHESIS    shift and go to state 209


state 152

    (158) accion_figura_opt_2 -> THICK . accion_figura_opt_2_end
    (159) accion_figura_opt_2_end -> . RPARENTHESIS expresion

    RPARENTHESIS    shift and go to state 207

    accion_figura_opt_2_end        shift and go to state 210

state 153

    (149) accion -> ID POINT accion_opt . COLON

    COLON           shift and go to state 211


state 154

    (166) accion_pincel_opt -> GRAPH . LPARENTHESIS CTEFUNCION COMA exp

    LPARENTHESIS    shift and go to state 212


state 155

    (164) accion_pincel_opt -> DISPLACE . accion_pincel_opt_end
    (167) accion_pincel_opt_end -> . LPARENTHESIS expresion COMA expresion

    LPARENTHESIS    shift and go to state 214

    accion_pincel_opt_end          shift and go to state 213

state 156

    (165) accion_pincel_opt -> PAINT . accion_pincel_opt_end
    (167) accion_pincel_opt_end -> . LPARENTHESIS expresion COMA expresion

    LPARENTHESIS    shift and go to state 214

    accion_pincel_opt_end          shift and go to state 215

state 157

    (156) accion_figura_opt_2 -> ROTATE . accion_figura_opt_2_end
    (159) accion_figura_opt_2_end -> . RPARENTHESIS expresion

    RPARENTHESIS    shift and go to state 207

    accion_figura_opt_2_end        shift and go to state 216

state 158

    (160) accion_figura_opt_3 -> REMOVE . LPARENTHESIS

    LPARENTHESIS    shift and go to state 217


state 159

    (153) accion_figura_opt -> accion_figura_opt_2 .

    LPARENTHESIS    reduce using rule 153 (accion_figura_opt -> accion_figura_opt_2 .)


state 160

    (154) accion_figura_opt -> accion_figura_opt_3 .

    LPARENTHESIS    reduce using rule 154 (accion_figura_opt -> accion_figura_opt_3 .)


state 161

    (112) llamada -> ID LPARENTHESIS exp . llamada_loop RPARENTHESIS COLON
    (113) llamada_loop -> . COMA exp llamada_loop
    (114) llamada_loop -> . empty
    (6) empty -> .

    COMA            shift and go to state 219
    RPARENTHESIS    reduce using rule 6 (empty -> .)

    llamada_loop                   shift and go to state 218
    empty                          shift and go to state 220

state 162

    (98) asignacion_opt -> LBRACKET logica . RBRACKET

    RBRACKET        shift and go to state 221


state 163

    (104) condicion_loop -> LPARENTHESIS logica . RPARENTHESIS bloque condicion_loop_opt

    RPARENTHESIS    shift and go to state 222


state 164

    (107) condicion_opt -> ELSE . bloque
    (69) bloque -> . LBRACE bloque_loop RBRACE

    LBRACE          shift and go to state 224

    bloque                         shift and go to state 223

state 165

    (103) condicion -> IF condicion_loop condicion_opt .

    ID              reduce using rule 103 (condicion -> IF condicion_loop condicion_opt .)
    IF              reduce using rule 103 (condicion -> IF condicion_loop condicion_opt .)
    WHILE           reduce using rule 103 (condicion -> IF condicion_loop condicion_opt .)
    PRINT           reduce using rule 103 (condicion -> IF condicion_loop condicion_opt .)
    READ            reduce using rule 103 (condicion -> IF condicion_loop condicion_opt .)
    RETURN          reduce using rule 103 (condicion -> IF condicion_loop condicion_opt .)
    RBRACE          reduce using rule 103 (condicion -> IF condicion_loop condicion_opt .)
    VAR             reduce using rule 103 (condicion -> IF condicion_loop condicion_opt .)


state 166

    (108) condicion_opt -> empty .

    VAR             reduce using rule 108 (condicion_opt -> empty .)
    ID              reduce using rule 108 (condicion_opt -> empty .)
    IF              reduce using rule 108 (condicion_opt -> empty .)
    WHILE           reduce using rule 108 (condicion_opt -> empty .)
    PRINT           reduce using rule 108 (condicion_opt -> empty .)
    READ            reduce using rule 108 (condicion_opt -> empty .)
    RBRACE          reduce using rule 108 (condicion_opt -> empty .)
    RETURN          reduce using rule 108 (condicion_opt -> empty .)


state 167

    (50) fgra_atr -> TRIANG LPARENTHESIS . exp COMA exp COMA exp COMA exp COMA fgra_atr_end
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 225
    factor                         shift and go to state 79
    empty                          shift and go to state 75

state 168

    (46) fgra_atr -> PINCEL LPARENTHESIS . fgra_atr_end
    (51) fgra_atr_end -> . exp COMA exp COMA color RPARENTHESIS
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 226
    factor                         shift and go to state 79
    fgra_atr_end                   shift and go to state 227
    empty                          shift and go to state 75

state 169

    (48) fgra_atr -> CIRC LPARENTHESIS . exp COMA fgra_atr_end
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 228
    factor                         shift and go to state 79
    empty                          shift and go to state 75

state 170

    (49) fgra_atr -> RECT LPARENTHESIS . exp COMA exp COMA fgra_atr_end
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 229
    factor                         shift and go to state 79
    empty                          shift and go to state 75

state 171

    (47) fgra_atr -> CUAD LPARENTHESIS . exp COMA fgra_atr_end
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 230
    factor                         shift and go to state 79
    empty                          shift and go to state 75

state 172

    (116) logica_loop -> AND logica .

    RBRACKET        reduce using rule 116 (logica_loop -> AND logica .)
    COMA            reduce using rule 116 (logica_loop -> AND logica .)
    SEMICOLON       reduce using rule 116 (logica_loop -> AND logica .)
    RPARENTHESIS    reduce using rule 116 (logica_loop -> AND logica .)
    VAR             reduce using rule 116 (logica_loop -> AND logica .)
    ID              reduce using rule 116 (logica_loop -> AND logica .)
    IF              reduce using rule 116 (logica_loop -> AND logica .)
    WHILE           reduce using rule 116 (logica_loop -> AND logica .)
    PRINT           reduce using rule 116 (logica_loop -> AND logica .)
    READ            reduce using rule 116 (logica_loop -> AND logica .)
    RBRACE          reduce using rule 116 (logica_loop -> AND logica .)
    RETURN          reduce using rule 116 (logica_loop -> AND logica .)


state 173

    (117) logica_loop -> OR logica .

    RBRACKET        reduce using rule 117 (logica_loop -> OR logica .)
    COMA            reduce using rule 117 (logica_loop -> OR logica .)
    SEMICOLON       reduce using rule 117 (logica_loop -> OR logica .)
    RPARENTHESIS    reduce using rule 117 (logica_loop -> OR logica .)
    VAR             reduce using rule 117 (logica_loop -> OR logica .)
    ID              reduce using rule 117 (logica_loop -> OR logica .)
    IF              reduce using rule 117 (logica_loop -> OR logica .)
    WHILE           reduce using rule 117 (logica_loop -> OR logica .)
    PRINT           reduce using rule 117 (logica_loop -> OR logica .)
    READ            reduce using rule 117 (logica_loop -> OR logica .)
    RBRACE          reduce using rule 117 (logica_loop -> OR logica .)
    RETURN          reduce using rule 117 (logica_loop -> OR logica .)


state 174

    (136) factor -> LPARENTHESIS expresion RPARENTHESIS .

    TIMES           reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    DIVIDE          reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    PLUS            reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    MINUS           reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    GTHAN           reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    GETHAN          reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    ASIGN           reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    NOTEQUAL        reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    LTHAN           reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    LETHAN          reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    AND             reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    OR              reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    RBRACKET        reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    COMA            reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    SEMICOLON       reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    VAR             reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    ID              reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    IF              reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    WHILE           reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    PRINT           reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    READ            reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    RBRACE          reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    RETURN          reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)
    LPARENTHESIS    reduce using rule 136 (factor -> LPARENTHESIS expresion RPARENTHESIS .)


state 175

    (33) tipo_opt_fig_3 -> ini_fgra_v .

    SEMICOLON       reduce using rule 33 (tipo_opt_fig_3 -> ini_fgra_v .)


state 176

    (31) tipo_opt_fig_2 -> LBRACKET logica RBRACKET tipo_opt_fig_3 .

    SEMICOLON       reduce using rule 31 (tipo_opt_fig_2 -> LBRACKET logica RBRACKET tipo_opt_fig_3 .)


state 177

    (40) ini_fgra_v -> COMA . logica ini_fgras_v_loop
    (115) logica -> . expresion logica_loop
    (119) expresion -> . exp expresion_opt
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    expresion                      shift and go to state 72
    factor                         shift and go to state 79
    logica                         shift and go to state 231
    empty                          shift and go to state 75
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor_opt                     shift and go to state 81

state 178

    (34) tipo_opt_fig_3 -> empty .
    (41) ini_fgra_v -> empty .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 34 (tipo_opt_fig_3 -> empty .)
    SEMICOLON       reduce using rule 34 (tipo_opt_fig_3 -> empty .)

  ! SEMICOLON       [ reduce using rule 41 (ini_fgra_v -> empty .) ]


state 179

    (129) exp_loop -> PLUS exp .

    GTHAN           reduce using rule 129 (exp_loop -> PLUS exp .)
    GETHAN          reduce using rule 129 (exp_loop -> PLUS exp .)
    ASIGN           reduce using rule 129 (exp_loop -> PLUS exp .)
    NOTEQUAL        reduce using rule 129 (exp_loop -> PLUS exp .)
    LTHAN           reduce using rule 129 (exp_loop -> PLUS exp .)
    LETHAN          reduce using rule 129 (exp_loop -> PLUS exp .)
    AND             reduce using rule 129 (exp_loop -> PLUS exp .)
    OR              reduce using rule 129 (exp_loop -> PLUS exp .)
    RBRACKET        reduce using rule 129 (exp_loop -> PLUS exp .)
    COMA            reduce using rule 129 (exp_loop -> PLUS exp .)
    SEMICOLON       reduce using rule 129 (exp_loop -> PLUS exp .)
    RPARENTHESIS    reduce using rule 129 (exp_loop -> PLUS exp .)
    VAR             reduce using rule 129 (exp_loop -> PLUS exp .)
    ID              reduce using rule 129 (exp_loop -> PLUS exp .)
    IF              reduce using rule 129 (exp_loop -> PLUS exp .)
    WHILE           reduce using rule 129 (exp_loop -> PLUS exp .)
    PRINT           reduce using rule 129 (exp_loop -> PLUS exp .)
    READ            reduce using rule 129 (exp_loop -> PLUS exp .)
    RBRACE          reduce using rule 129 (exp_loop -> PLUS exp .)
    RETURN          reduce using rule 129 (exp_loop -> PLUS exp .)
    LPARENTHESIS    reduce using rule 129 (exp_loop -> PLUS exp .)


state 180

    (130) exp_loop -> MINUS exp .

    GTHAN           reduce using rule 130 (exp_loop -> MINUS exp .)
    GETHAN          reduce using rule 130 (exp_loop -> MINUS exp .)
    ASIGN           reduce using rule 130 (exp_loop -> MINUS exp .)
    NOTEQUAL        reduce using rule 130 (exp_loop -> MINUS exp .)
    LTHAN           reduce using rule 130 (exp_loop -> MINUS exp .)
    LETHAN          reduce using rule 130 (exp_loop -> MINUS exp .)
    AND             reduce using rule 130 (exp_loop -> MINUS exp .)
    OR              reduce using rule 130 (exp_loop -> MINUS exp .)
    RBRACKET        reduce using rule 130 (exp_loop -> MINUS exp .)
    COMA            reduce using rule 130 (exp_loop -> MINUS exp .)
    SEMICOLON       reduce using rule 130 (exp_loop -> MINUS exp .)
    RPARENTHESIS    reduce using rule 130 (exp_loop -> MINUS exp .)
    VAR             reduce using rule 130 (exp_loop -> MINUS exp .)
    ID              reduce using rule 130 (exp_loop -> MINUS exp .)
    IF              reduce using rule 130 (exp_loop -> MINUS exp .)
    WHILE           reduce using rule 130 (exp_loop -> MINUS exp .)
    PRINT           reduce using rule 130 (exp_loop -> MINUS exp .)
    READ            reduce using rule 130 (exp_loop -> MINUS exp .)
    RBRACE          reduce using rule 130 (exp_loop -> MINUS exp .)
    RETURN          reduce using rule 130 (exp_loop -> MINUS exp .)
    LPARENTHESIS    reduce using rule 130 (exp_loop -> MINUS exp .)


state 181

    (120) expresion_opt -> expresion_opt_opt exp .

    AND             reduce using rule 120 (expresion_opt -> expresion_opt_opt exp .)
    OR              reduce using rule 120 (expresion_opt -> expresion_opt_opt exp .)
    RBRACKET        reduce using rule 120 (expresion_opt -> expresion_opt_opt exp .)
    COMA            reduce using rule 120 (expresion_opt -> expresion_opt_opt exp .)
    SEMICOLON       reduce using rule 120 (expresion_opt -> expresion_opt_opt exp .)
    RPARENTHESIS    reduce using rule 120 (expresion_opt -> expresion_opt_opt exp .)
    VAR             reduce using rule 120 (expresion_opt -> expresion_opt_opt exp .)
    ID              reduce using rule 120 (expresion_opt -> expresion_opt_opt exp .)
    IF              reduce using rule 120 (expresion_opt -> expresion_opt_opt exp .)
    WHILE           reduce using rule 120 (expresion_opt -> expresion_opt_opt exp .)
    PRINT           reduce using rule 120 (expresion_opt -> expresion_opt_opt exp .)
    READ            reduce using rule 120 (expresion_opt -> expresion_opt_opt exp .)
    RBRACE          reduce using rule 120 (expresion_opt -> expresion_opt_opt exp .)
    RETURN          reduce using rule 120 (expresion_opt -> expresion_opt_opt exp .)
    LPARENTHESIS    reduce using rule 120 (expresion_opt -> expresion_opt_opt exp .)


state 182

    (124) expresion_opt_opt -> ASIGN ASIGN .

    LPARENTHESIS    reduce using rule 124 (expresion_opt_opt -> ASIGN ASIGN .)
    PLUS            reduce using rule 124 (expresion_opt_opt -> ASIGN ASIGN .)
    MINUS           reduce using rule 124 (expresion_opt_opt -> ASIGN ASIGN .)
    STRING          reduce using rule 124 (expresion_opt_opt -> ASIGN ASIGN .)
    INT             reduce using rule 124 (expresion_opt_opt -> ASIGN ASIGN .)
    DOUBLE          reduce using rule 124 (expresion_opt_opt -> ASIGN ASIGN .)
    BOOL            reduce using rule 124 (expresion_opt_opt -> ASIGN ASIGN .)
    ID              reduce using rule 124 (expresion_opt_opt -> ASIGN ASIGN .)


state 183

    (134) termino_loop -> DIVIDE termino .

    PLUS            reduce using rule 134 (termino_loop -> DIVIDE termino .)
    MINUS           reduce using rule 134 (termino_loop -> DIVIDE termino .)
    GTHAN           reduce using rule 134 (termino_loop -> DIVIDE termino .)
    GETHAN          reduce using rule 134 (termino_loop -> DIVIDE termino .)
    ASIGN           reduce using rule 134 (termino_loop -> DIVIDE termino .)
    NOTEQUAL        reduce using rule 134 (termino_loop -> DIVIDE termino .)
    LTHAN           reduce using rule 134 (termino_loop -> DIVIDE termino .)
    LETHAN          reduce using rule 134 (termino_loop -> DIVIDE termino .)
    AND             reduce using rule 134 (termino_loop -> DIVIDE termino .)
    OR              reduce using rule 134 (termino_loop -> DIVIDE termino .)
    RBRACKET        reduce using rule 134 (termino_loop -> DIVIDE termino .)
    COMA            reduce using rule 134 (termino_loop -> DIVIDE termino .)
    SEMICOLON       reduce using rule 134 (termino_loop -> DIVIDE termino .)
    RPARENTHESIS    reduce using rule 134 (termino_loop -> DIVIDE termino .)
    VAR             reduce using rule 134 (termino_loop -> DIVIDE termino .)
    ID              reduce using rule 134 (termino_loop -> DIVIDE termino .)
    IF              reduce using rule 134 (termino_loop -> DIVIDE termino .)
    WHILE           reduce using rule 134 (termino_loop -> DIVIDE termino .)
    PRINT           reduce using rule 134 (termino_loop -> DIVIDE termino .)
    READ            reduce using rule 134 (termino_loop -> DIVIDE termino .)
    RBRACE          reduce using rule 134 (termino_loop -> DIVIDE termino .)
    RETURN          reduce using rule 134 (termino_loop -> DIVIDE termino .)
    LPARENTHESIS    reduce using rule 134 (termino_loop -> DIVIDE termino .)


state 184

    (133) termino_loop -> TIMES termino .

    PLUS            reduce using rule 133 (termino_loop -> TIMES termino .)
    MINUS           reduce using rule 133 (termino_loop -> TIMES termino .)
    GTHAN           reduce using rule 133 (termino_loop -> TIMES termino .)
    GETHAN          reduce using rule 133 (termino_loop -> TIMES termino .)
    ASIGN           reduce using rule 133 (termino_loop -> TIMES termino .)
    NOTEQUAL        reduce using rule 133 (termino_loop -> TIMES termino .)
    LTHAN           reduce using rule 133 (termino_loop -> TIMES termino .)
    LETHAN          reduce using rule 133 (termino_loop -> TIMES termino .)
    AND             reduce using rule 133 (termino_loop -> TIMES termino .)
    OR              reduce using rule 133 (termino_loop -> TIMES termino .)
    RBRACKET        reduce using rule 133 (termino_loop -> TIMES termino .)
    COMA            reduce using rule 133 (termino_loop -> TIMES termino .)
    SEMICOLON       reduce using rule 133 (termino_loop -> TIMES termino .)
    RPARENTHESIS    reduce using rule 133 (termino_loop -> TIMES termino .)
    VAR             reduce using rule 133 (termino_loop -> TIMES termino .)
    ID              reduce using rule 133 (termino_loop -> TIMES termino .)
    IF              reduce using rule 133 (termino_loop -> TIMES termino .)
    WHILE           reduce using rule 133 (termino_loop -> TIMES termino .)
    PRINT           reduce using rule 133 (termino_loop -> TIMES termino .)
    READ            reduce using rule 133 (termino_loop -> TIMES termino .)
    RBRACE          reduce using rule 133 (termino_loop -> TIMES termino .)
    RETURN          reduce using rule 133 (termino_loop -> TIMES termino .)
    LPARENTHESIS    reduce using rule 133 (termino_loop -> TIMES termino .)


state 185

    (143) idllamada -> ID idllamada_opt .

    TIMES           reduce using rule 143 (idllamada -> ID idllamada_opt .)
    DIVIDE          reduce using rule 143 (idllamada -> ID idllamada_opt .)
    PLUS            reduce using rule 143 (idllamada -> ID idllamada_opt .)
    MINUS           reduce using rule 143 (idllamada -> ID idllamada_opt .)
    GTHAN           reduce using rule 143 (idllamada -> ID idllamada_opt .)
    GETHAN          reduce using rule 143 (idllamada -> ID idllamada_opt .)
    ASIGN           reduce using rule 143 (idllamada -> ID idllamada_opt .)
    NOTEQUAL        reduce using rule 143 (idllamada -> ID idllamada_opt .)
    LTHAN           reduce using rule 143 (idllamada -> ID idllamada_opt .)
    LETHAN          reduce using rule 143 (idllamada -> ID idllamada_opt .)
    AND             reduce using rule 143 (idllamada -> ID idllamada_opt .)
    OR              reduce using rule 143 (idllamada -> ID idllamada_opt .)
    RBRACKET        reduce using rule 143 (idllamada -> ID idllamada_opt .)
    COMA            reduce using rule 143 (idllamada -> ID idllamada_opt .)
    SEMICOLON       reduce using rule 143 (idllamada -> ID idllamada_opt .)
    RPARENTHESIS    reduce using rule 143 (idllamada -> ID idllamada_opt .)
    VAR             reduce using rule 143 (idllamada -> ID idllamada_opt .)
    ID              reduce using rule 143 (idllamada -> ID idllamada_opt .)
    IF              reduce using rule 143 (idllamada -> ID idllamada_opt .)
    WHILE           reduce using rule 143 (idllamada -> ID idllamada_opt .)
    PRINT           reduce using rule 143 (idllamada -> ID idllamada_opt .)
    READ            reduce using rule 143 (idllamada -> ID idllamada_opt .)
    RBRACE          reduce using rule 143 (idllamada -> ID idllamada_opt .)
    RETURN          reduce using rule 143 (idllamada -> ID idllamada_opt .)
    LPARENTHESIS    reduce using rule 143 (idllamada -> ID idllamada_opt .)


state 186

    (144) idllamada_opt -> LPARENTHESIS . exp idllamada_opt_loop RPARENTHESIS
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 232
    factor                         shift and go to state 79
    empty                          shift and go to state 75

state 187

    (145) idllamada_opt -> LBRACKET . expresion RBRACKET
    (119) expresion -> . exp expresion_opt
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    expresion                      shift and go to state 233
    empty                          shift and go to state 75
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor                         shift and go to state 79
    factor_opt                     shift and go to state 81

state 188

    (146) idllamada_opt -> empty .

    TIMES           reduce using rule 146 (idllamada_opt -> empty .)
    DIVIDE          reduce using rule 146 (idllamada_opt -> empty .)
    PLUS            reduce using rule 146 (idllamada_opt -> empty .)
    MINUS           reduce using rule 146 (idllamada_opt -> empty .)
    GTHAN           reduce using rule 146 (idllamada_opt -> empty .)
    GETHAN          reduce using rule 146 (idllamada_opt -> empty .)
    ASIGN           reduce using rule 146 (idllamada_opt -> empty .)
    NOTEQUAL        reduce using rule 146 (idllamada_opt -> empty .)
    LTHAN           reduce using rule 146 (idllamada_opt -> empty .)
    LETHAN          reduce using rule 146 (idllamada_opt -> empty .)
    AND             reduce using rule 146 (idllamada_opt -> empty .)
    OR              reduce using rule 146 (idllamada_opt -> empty .)
    RBRACKET        reduce using rule 146 (idllamada_opt -> empty .)
    COMA            reduce using rule 146 (idllamada_opt -> empty .)
    SEMICOLON       reduce using rule 146 (idllamada_opt -> empty .)
    RPARENTHESIS    reduce using rule 146 (idllamada_opt -> empty .)
    VAR             reduce using rule 146 (idllamada_opt -> empty .)
    ID              reduce using rule 146 (idllamada_opt -> empty .)
    IF              reduce using rule 146 (idllamada_opt -> empty .)
    WHILE           reduce using rule 146 (idllamada_opt -> empty .)
    PRINT           reduce using rule 146 (idllamada_opt -> empty .)
    READ            reduce using rule 146 (idllamada_opt -> empty .)
    RBRACE          reduce using rule 146 (idllamada_opt -> empty .)
    RETURN          reduce using rule 146 (idllamada_opt -> empty .)
    LPARENTHESIS    reduce using rule 146 (idllamada_opt -> empty .)


state 189

    (25) tipo_opt_prim_3 -> ini_prim_v .

    COMA            reduce using rule 25 (tipo_opt_prim_3 -> ini_prim_v .)
    SEMICOLON       reduce using rule 25 (tipo_opt_prim_3 -> ini_prim_v .)


state 190

    (23) tipo_opt_prim_2 -> LBRACKET logica RBRACKET tipo_opt_prim_3 .

    COMA            reduce using rule 23 (tipo_opt_prim_2 -> LBRACKET logica RBRACKET tipo_opt_prim_3 .)
    SEMICOLON       reduce using rule 23 (tipo_opt_prim_2 -> LBRACKET logica RBRACKET tipo_opt_prim_3 .)


state 191

    (36) ini_prim_v -> ASIGN . LBRACE logica ini_prim_v_loop RBRACE

    LBRACE          shift and go to state 234


state 192

    (26) tipo_opt_prim_3 -> empty .

    COMA            reduce using rule 26 (tipo_opt_prim_3 -> empty .)
    SEMICOLON       reduce using rule 26 (tipo_opt_prim_3 -> empty .)


state 193

    (65) parametros -> tipo . COLON ID parametros_loop

    COLON           shift and go to state 235


state 194

    (10) rutinas -> RUTINA rutina_opt COLON ID LPARENTHESIS parametros . RPARENTHESIS bloque_rutina rutinas_loop_2

    RPARENTHESIS    shift and go to state 236


state 195

    (111) lectura -> READ LPARENTHESIS RPARENTHESIS SEMICOLON .

    ID              reduce using rule 111 (lectura -> READ LPARENTHESIS RPARENTHESIS SEMICOLON .)
    IF              reduce using rule 111 (lectura -> READ LPARENTHESIS RPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 111 (lectura -> READ LPARENTHESIS RPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 111 (lectura -> READ LPARENTHESIS RPARENTHESIS SEMICOLON .)
    READ            reduce using rule 111 (lectura -> READ LPARENTHESIS RPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 111 (lectura -> READ LPARENTHESIS RPARENTHESIS SEMICOLON .)
    RBRACE          reduce using rule 111 (lectura -> READ LPARENTHESIS RPARENTHESIS SEMICOLON .)
    VAR             reduce using rule 111 (lectura -> READ LPARENTHESIS RPARENTHESIS SEMICOLON .)


state 196

    (109) ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS . bloque
    (69) bloque -> . LBRACE bloque_loop RBRACE

    LBRACE          shift and go to state 224

    bloque                         shift and go to state 237

state 197

    (110) impresion -> PRINT LPARENTHESIS logica RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 238


state 198

    (102) asignacion_opt_2 -> fgra_nva .

    VAR             reduce using rule 102 (asignacion_opt_2 -> fgra_nva .)
    ID              reduce using rule 102 (asignacion_opt_2 -> fgra_nva .)
    IF              reduce using rule 102 (asignacion_opt_2 -> fgra_nva .)
    WHILE           reduce using rule 102 (asignacion_opt_2 -> fgra_nva .)
    PRINT           reduce using rule 102 (asignacion_opt_2 -> fgra_nva .)
    READ            reduce using rule 102 (asignacion_opt_2 -> fgra_nva .)
    RBRACE          reduce using rule 102 (asignacion_opt_2 -> fgra_nva .)
    RETURN          reduce using rule 102 (asignacion_opt_2 -> fgra_nva .)


state 199

    (100) asignacion_opt_2 -> logica .

    VAR             reduce using rule 100 (asignacion_opt_2 -> logica .)
    ID              reduce using rule 100 (asignacion_opt_2 -> logica .)
    IF              reduce using rule 100 (asignacion_opt_2 -> logica .)
    WHILE           reduce using rule 100 (asignacion_opt_2 -> logica .)
    PRINT           reduce using rule 100 (asignacion_opt_2 -> logica .)
    READ            reduce using rule 100 (asignacion_opt_2 -> logica .)
    RBRACE          reduce using rule 100 (asignacion_opt_2 -> logica .)
    RETURN          reduce using rule 100 (asignacion_opt_2 -> logica .)


state 200

    (101) asignacion_opt_2 -> lectura .

    VAR             reduce using rule 101 (asignacion_opt_2 -> lectura .)
    ID              reduce using rule 101 (asignacion_opt_2 -> lectura .)
    IF              reduce using rule 101 (asignacion_opt_2 -> lectura .)
    WHILE           reduce using rule 101 (asignacion_opt_2 -> lectura .)
    PRINT           reduce using rule 101 (asignacion_opt_2 -> lectura .)
    READ            reduce using rule 101 (asignacion_opt_2 -> lectura .)
    RBRACE          reduce using rule 101 (asignacion_opt_2 -> lectura .)
    RETURN          reduce using rule 101 (asignacion_opt_2 -> lectura .)


state 201

    (45) fgra_nva -> empty .
    (140) factor_opt -> empty .

  ! reduce/reduce conflict for ID resolved using rule 45 (fgra_nva -> empty .)
    VAR             reduce using rule 45 (fgra_nva -> empty .)
    ID              reduce using rule 45 (fgra_nva -> empty .)
    IF              reduce using rule 45 (fgra_nva -> empty .)
    WHILE           reduce using rule 45 (fgra_nva -> empty .)
    PRINT           reduce using rule 45 (fgra_nva -> empty .)
    READ            reduce using rule 45 (fgra_nva -> empty .)
    RBRACE          reduce using rule 45 (fgra_nva -> empty .)
    RETURN          reduce using rule 45 (fgra_nva -> empty .)
    STRING          reduce using rule 140 (factor_opt -> empty .)
    INT             reduce using rule 140 (factor_opt -> empty .)
    DOUBLE          reduce using rule 140 (factor_opt -> empty .)
    BOOL            reduce using rule 140 (factor_opt -> empty .)

  ! ID              [ reduce using rule 140 (factor_opt -> empty .) ]


state 202

    (97) asignacion -> ID asignacion_opt ASIGN asignacion_opt_2 .

    ID              reduce using rule 97 (asignacion -> ID asignacion_opt ASIGN asignacion_opt_2 .)
    IF              reduce using rule 97 (asignacion -> ID asignacion_opt ASIGN asignacion_opt_2 .)
    WHILE           reduce using rule 97 (asignacion -> ID asignacion_opt ASIGN asignacion_opt_2 .)
    PRINT           reduce using rule 97 (asignacion -> ID asignacion_opt ASIGN asignacion_opt_2 .)
    READ            reduce using rule 97 (asignacion -> ID asignacion_opt ASIGN asignacion_opt_2 .)
    RETURN          reduce using rule 97 (asignacion -> ID asignacion_opt ASIGN asignacion_opt_2 .)
    RBRACE          reduce using rule 97 (asignacion -> ID asignacion_opt ASIGN asignacion_opt_2 .)
    VAR             reduce using rule 97 (asignacion -> ID asignacion_opt ASIGN asignacion_opt_2 .)


state 203

    (162) accion_pincel -> accion_pincel_opt RPARENTHESIS .

    COLON           reduce using rule 162 (accion_pincel -> accion_pincel_opt RPARENTHESIS .)


state 204

    (161) accion_figura_opt_3 -> FILL LPARENTHESIS . color
    (168) color -> . CTECOLOR
    (169) color -> . CTEHEXCOLOR

    CTECOLOR        shift and go to state 241
    CTEHEXCOLOR     shift and go to state 240

    color                          shift and go to state 239

state 205

    (163) accion_pincel_opt -> COLOR LPARENTHESIS . color
    (168) color -> . CTECOLOR
    (169) color -> . CTEHEXCOLOR

    CTECOLOR        shift and go to state 241
    CTEHEXCOLOR     shift and go to state 240

    color                          shift and go to state 242

state 206

    (155) accion_figura_opt_2 -> MOVEA accion_figura_opt_2_end .

    LPARENTHESIS    reduce using rule 155 (accion_figura_opt_2 -> MOVEA accion_figura_opt_2_end .)


state 207

    (159) accion_figura_opt_2_end -> RPARENTHESIS . expresion
    (119) expresion -> . exp expresion_opt
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    expresion                      shift and go to state 243
    empty                          shift and go to state 75
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor                         shift and go to state 79
    factor_opt                     shift and go to state 81

state 208

    (157) accion_figura_opt_2 -> GROW accion_figura_opt_2_end .

    LPARENTHESIS    reduce using rule 157 (accion_figura_opt_2 -> GROW accion_figura_opt_2_end .)


state 209

    (152) accion_figura -> accion_figura_opt LPARENTHESIS .

    COLON           reduce using rule 152 (accion_figura -> accion_figura_opt LPARENTHESIS .)


state 210

    (158) accion_figura_opt_2 -> THICK accion_figura_opt_2_end .

    LPARENTHESIS    reduce using rule 158 (accion_figura_opt_2 -> THICK accion_figura_opt_2_end .)


state 211

    (149) accion -> ID POINT accion_opt COLON .

    ID              reduce using rule 149 (accion -> ID POINT accion_opt COLON .)
    IF              reduce using rule 149 (accion -> ID POINT accion_opt COLON .)
    WHILE           reduce using rule 149 (accion -> ID POINT accion_opt COLON .)
    PRINT           reduce using rule 149 (accion -> ID POINT accion_opt COLON .)
    READ            reduce using rule 149 (accion -> ID POINT accion_opt COLON .)
    RETURN          reduce using rule 149 (accion -> ID POINT accion_opt COLON .)
    RBRACE          reduce using rule 149 (accion -> ID POINT accion_opt COLON .)
    VAR             reduce using rule 149 (accion -> ID POINT accion_opt COLON .)


state 212

    (166) accion_pincel_opt -> GRAPH LPARENTHESIS . CTEFUNCION COMA exp

    CTEFUNCION      shift and go to state 244


state 213

    (164) accion_pincel_opt -> DISPLACE accion_pincel_opt_end .

    RPARENTHESIS    reduce using rule 164 (accion_pincel_opt -> DISPLACE accion_pincel_opt_end .)


state 214

    (167) accion_pincel_opt_end -> LPARENTHESIS . expresion COMA expresion
    (119) expresion -> . exp expresion_opt
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    expresion                      shift and go to state 245
    empty                          shift and go to state 75
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor                         shift and go to state 79
    factor_opt                     shift and go to state 81

state 215

    (165) accion_pincel_opt -> PAINT accion_pincel_opt_end .

    RPARENTHESIS    reduce using rule 165 (accion_pincel_opt -> PAINT accion_pincel_opt_end .)


state 216

    (156) accion_figura_opt_2 -> ROTATE accion_figura_opt_2_end .

    LPARENTHESIS    reduce using rule 156 (accion_figura_opt_2 -> ROTATE accion_figura_opt_2_end .)


state 217

    (160) accion_figura_opt_3 -> REMOVE LPARENTHESIS .

    LPARENTHESIS    reduce using rule 160 (accion_figura_opt_3 -> REMOVE LPARENTHESIS .)


state 218

    (112) llamada -> ID LPARENTHESIS exp llamada_loop . RPARENTHESIS COLON

    RPARENTHESIS    shift and go to state 246


state 219

    (113) llamada_loop -> COMA . exp llamada_loop
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 247
    factor                         shift and go to state 79
    empty                          shift and go to state 75

state 220

    (114) llamada_loop -> empty .

    RPARENTHESIS    reduce using rule 114 (llamada_loop -> empty .)


state 221

    (98) asignacion_opt -> LBRACKET logica RBRACKET .

    ASIGN           reduce using rule 98 (asignacion_opt -> LBRACKET logica RBRACKET .)


state 222

    (104) condicion_loop -> LPARENTHESIS logica RPARENTHESIS . bloque condicion_loop_opt
    (69) bloque -> . LBRACE bloque_loop RBRACE

    LBRACE          shift and go to state 224

    bloque                         shift and go to state 248

state 223

    (107) condicion_opt -> ELSE bloque .

    VAR             reduce using rule 107 (condicion_opt -> ELSE bloque .)
    ID              reduce using rule 107 (condicion_opt -> ELSE bloque .)
    IF              reduce using rule 107 (condicion_opt -> ELSE bloque .)
    WHILE           reduce using rule 107 (condicion_opt -> ELSE bloque .)
    PRINT           reduce using rule 107 (condicion_opt -> ELSE bloque .)
    READ            reduce using rule 107 (condicion_opt -> ELSE bloque .)
    RBRACE          reduce using rule 107 (condicion_opt -> ELSE bloque .)
    RETURN          reduce using rule 107 (condicion_opt -> ELSE bloque .)


state 224

    (69) bloque -> LBRACE . bloque_loop RBRACE
    (70) bloque_loop -> . estatuto bloque_loop
    (71) bloque_loop -> . empty
    (82) estatuto -> . asignacion
    (83) estatuto -> . condicion
    (84) estatuto -> . ciclo
    (85) estatuto -> . impresion
    (86) estatuto -> . lectura
    (87) estatuto -> . accion
    (88) estatuto -> . llamada
    (6) empty -> .
    (97) asignacion -> . ID asignacion_opt ASIGN asignacion_opt_2
    (103) condicion -> . IF condicion_loop condicion_opt
    (109) ciclo -> . WHILE LPARENTHESIS logica RPARENTHESIS bloque
    (110) impresion -> . PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON
    (111) lectura -> . READ LPARENTHESIS RPARENTHESIS SEMICOLON
    (149) accion -> . ID POINT accion_opt COLON
    (112) llamada -> . ID LPARENTHESIS exp llamada_loop RPARENTHESIS COLON

    RBRACE          reduce using rule 6 (empty -> .)
    ID              shift and go to state 63
    IF              shift and go to state 64
    WHILE           shift and go to state 55
    PRINT           shift and go to state 56
    READ            shift and go to state 54

    ciclo                          shift and go to state 249
    asignacion                     shift and go to state 257
    estatuto                       shift and go to state 251
    impresion                      shift and go to state 258
    llamada                        shift and go to state 250
    condicion                      shift and go to state 252
    bloque_loop                    shift and go to state 255
    lectura                        shift and go to state 253
    empty                          shift and go to state 254
    accion                         shift and go to state 256

state 225

    (50) fgra_atr -> TRIANG LPARENTHESIS exp . COMA exp COMA exp COMA exp COMA fgra_atr_end

    COMA            shift and go to state 259


state 226

    (51) fgra_atr_end -> exp . COMA exp COMA color RPARENTHESIS

    COMA            shift and go to state 260


state 227

    (46) fgra_atr -> PINCEL LPARENTHESIS fgra_atr_end .

    SEMICOLON       reduce using rule 46 (fgra_atr -> PINCEL LPARENTHESIS fgra_atr_end .)
    VAR             reduce using rule 46 (fgra_atr -> PINCEL LPARENTHESIS fgra_atr_end .)
    ID              reduce using rule 46 (fgra_atr -> PINCEL LPARENTHESIS fgra_atr_end .)
    IF              reduce using rule 46 (fgra_atr -> PINCEL LPARENTHESIS fgra_atr_end .)
    WHILE           reduce using rule 46 (fgra_atr -> PINCEL LPARENTHESIS fgra_atr_end .)
    PRINT           reduce using rule 46 (fgra_atr -> PINCEL LPARENTHESIS fgra_atr_end .)
    READ            reduce using rule 46 (fgra_atr -> PINCEL LPARENTHESIS fgra_atr_end .)
    RBRACE          reduce using rule 46 (fgra_atr -> PINCEL LPARENTHESIS fgra_atr_end .)
    RETURN          reduce using rule 46 (fgra_atr -> PINCEL LPARENTHESIS fgra_atr_end .)


state 228

    (48) fgra_atr -> CIRC LPARENTHESIS exp . COMA fgra_atr_end

    COMA            shift and go to state 261


state 229

    (49) fgra_atr -> RECT LPARENTHESIS exp . COMA exp COMA fgra_atr_end

    COMA            shift and go to state 262


state 230

    (47) fgra_atr -> CUAD LPARENTHESIS exp . COMA fgra_atr_end

    COMA            shift and go to state 263


state 231

    (40) ini_fgra_v -> COMA logica . ini_fgras_v_loop
    (42) ini_fgras_v_loop -> . COMA logica ini_fgras_v_loop
    (43) ini_fgras_v_loop -> . empty
    (6) empty -> .

    COMA            shift and go to state 264
    SEMICOLON       reduce using rule 6 (empty -> .)

    ini_fgras_v_loop               shift and go to state 265
    empty                          shift and go to state 266

state 232

    (144) idllamada_opt -> LPARENTHESIS exp . idllamada_opt_loop RPARENTHESIS
    (147) idllamada_opt_loop -> . COMA exp idllamada_opt_loop
    (148) idllamada_opt_loop -> . empty
    (6) empty -> .

    COMA            shift and go to state 267
    RPARENTHESIS    reduce using rule 6 (empty -> .)

    idllamada_opt_loop             shift and go to state 268
    empty                          shift and go to state 269

state 233

    (145) idllamada_opt -> LBRACKET expresion . RBRACKET

    RBRACKET        shift and go to state 270


state 234

    (36) ini_prim_v -> ASIGN LBRACE . logica ini_prim_v_loop RBRACE
    (115) logica -> . expresion logica_loop
    (119) expresion -> . exp expresion_opt
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    expresion                      shift and go to state 72
    logica                         shift and go to state 271
    empty                          shift and go to state 75
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor                         shift and go to state 79
    factor_opt                     shift and go to state 81

state 235

    (65) parametros -> tipo COLON . ID parametros_loop

    ID              shift and go to state 272


state 236

    (10) rutinas -> RUTINA rutina_opt COLON ID LPARENTHESIS parametros RPARENTHESIS . bloque_rutina rutinas_loop_2
    (72) bloque_rutina -> . LBRACE bloque_rutina_opt bloque_rutina_loop bloque_rutina_opt_2 RBRACE

    LBRACE          shift and go to state 274

    bloque_rutina                  shift and go to state 273

state 237

    (109) ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque .

    ID              reduce using rule 109 (ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque .)
    IF              reduce using rule 109 (ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque .)
    WHILE           reduce using rule 109 (ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque .)
    PRINT           reduce using rule 109 (ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque .)
    READ            reduce using rule 109 (ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque .)
    RBRACE          reduce using rule 109 (ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque .)
    VAR             reduce using rule 109 (ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque .)
    RETURN          reduce using rule 109 (ciclo -> WHILE LPARENTHESIS logica RPARENTHESIS bloque .)


state 238

    (110) impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON .

    ID              reduce using rule 110 (impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON .)
    IF              reduce using rule 110 (impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 110 (impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 110 (impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON .)
    READ            reduce using rule 110 (impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 110 (impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON .)
    RBRACE          reduce using rule 110 (impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON .)
    VAR             reduce using rule 110 (impresion -> PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON .)


state 239

    (161) accion_figura_opt_3 -> FILL LPARENTHESIS color .

    LPARENTHESIS    reduce using rule 161 (accion_figura_opt_3 -> FILL LPARENTHESIS color .)


state 240

    (169) color -> CTEHEXCOLOR .

    RPARENTHESIS    reduce using rule 169 (color -> CTEHEXCOLOR .)
    LPARENTHESIS    reduce using rule 169 (color -> CTEHEXCOLOR .)


state 241

    (168) color -> CTECOLOR .

    RPARENTHESIS    reduce using rule 168 (color -> CTECOLOR .)
    LPARENTHESIS    reduce using rule 168 (color -> CTECOLOR .)


state 242

    (163) accion_pincel_opt -> COLOR LPARENTHESIS color .

    RPARENTHESIS    reduce using rule 163 (accion_pincel_opt -> COLOR LPARENTHESIS color .)


state 243

    (159) accion_figura_opt_2_end -> RPARENTHESIS expresion .

    LPARENTHESIS    reduce using rule 159 (accion_figura_opt_2_end -> RPARENTHESIS expresion .)


state 244

    (166) accion_pincel_opt -> GRAPH LPARENTHESIS CTEFUNCION . COMA exp

    COMA            shift and go to state 275


state 245

    (167) accion_pincel_opt_end -> LPARENTHESIS expresion . COMA expresion

    COMA            shift and go to state 276


state 246

    (112) llamada -> ID LPARENTHESIS exp llamada_loop RPARENTHESIS . COLON

    COLON           shift and go to state 277


state 247

    (113) llamada_loop -> COMA exp . llamada_loop
    (113) llamada_loop -> . COMA exp llamada_loop
    (114) llamada_loop -> . empty
    (6) empty -> .

    COMA            shift and go to state 219
    RPARENTHESIS    reduce using rule 6 (empty -> .)

    llamada_loop                   shift and go to state 278
    empty                          shift and go to state 220

state 248

    (104) condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque . condicion_loop_opt
    (105) condicion_loop_opt -> . ELIF condicion_loop
    (106) condicion_loop_opt -> . empty
    (6) empty -> .

    ELIF            shift and go to state 279
    ELSE            reduce using rule 6 (empty -> .)
    VAR             reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)
    IF              reduce using rule 6 (empty -> .)
    WHILE           reduce using rule 6 (empty -> .)
    PRINT           reduce using rule 6 (empty -> .)
    READ            reduce using rule 6 (empty -> .)
    RBRACE          reduce using rule 6 (empty -> .)
    RETURN          reduce using rule 6 (empty -> .)

    condicion_loop_opt             shift and go to state 280
    empty                          shift and go to state 281

state 249

    (84) estatuto -> ciclo .

    ID              reduce using rule 84 (estatuto -> ciclo .)
    IF              reduce using rule 84 (estatuto -> ciclo .)
    WHILE           reduce using rule 84 (estatuto -> ciclo .)
    PRINT           reduce using rule 84 (estatuto -> ciclo .)
    READ            reduce using rule 84 (estatuto -> ciclo .)
    RBRACE          reduce using rule 84 (estatuto -> ciclo .)
    RETURN          reduce using rule 84 (estatuto -> ciclo .)


state 250

    (88) estatuto -> llamada .

    ID              reduce using rule 88 (estatuto -> llamada .)
    IF              reduce using rule 88 (estatuto -> llamada .)
    WHILE           reduce using rule 88 (estatuto -> llamada .)
    PRINT           reduce using rule 88 (estatuto -> llamada .)
    READ            reduce using rule 88 (estatuto -> llamada .)
    RBRACE          reduce using rule 88 (estatuto -> llamada .)
    RETURN          reduce using rule 88 (estatuto -> llamada .)


state 251

    (70) bloque_loop -> estatuto . bloque_loop
    (70) bloque_loop -> . estatuto bloque_loop
    (71) bloque_loop -> . empty
    (82) estatuto -> . asignacion
    (83) estatuto -> . condicion
    (84) estatuto -> . ciclo
    (85) estatuto -> . impresion
    (86) estatuto -> . lectura
    (87) estatuto -> . accion
    (88) estatuto -> . llamada
    (6) empty -> .
    (97) asignacion -> . ID asignacion_opt ASIGN asignacion_opt_2
    (103) condicion -> . IF condicion_loop condicion_opt
    (109) ciclo -> . WHILE LPARENTHESIS logica RPARENTHESIS bloque
    (110) impresion -> . PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON
    (111) lectura -> . READ LPARENTHESIS RPARENTHESIS SEMICOLON
    (149) accion -> . ID POINT accion_opt COLON
    (112) llamada -> . ID LPARENTHESIS exp llamada_loop RPARENTHESIS COLON

    RBRACE          reduce using rule 6 (empty -> .)
    ID              shift and go to state 63
    IF              shift and go to state 64
    WHILE           shift and go to state 55
    PRINT           shift and go to state 56
    READ            shift and go to state 54

    ciclo                          shift and go to state 249
    asignacion                     shift and go to state 257
    estatuto                       shift and go to state 251
    impresion                      shift and go to state 258
    llamada                        shift and go to state 250
    condicion                      shift and go to state 252
    bloque_loop                    shift and go to state 282
    lectura                        shift and go to state 253
    empty                          shift and go to state 254
    accion                         shift and go to state 256

state 252

    (83) estatuto -> condicion .

    ID              reduce using rule 83 (estatuto -> condicion .)
    IF              reduce using rule 83 (estatuto -> condicion .)
    WHILE           reduce using rule 83 (estatuto -> condicion .)
    PRINT           reduce using rule 83 (estatuto -> condicion .)
    READ            reduce using rule 83 (estatuto -> condicion .)
    RBRACE          reduce using rule 83 (estatuto -> condicion .)
    RETURN          reduce using rule 83 (estatuto -> condicion .)


state 253

    (86) estatuto -> lectura .

    ID              reduce using rule 86 (estatuto -> lectura .)
    IF              reduce using rule 86 (estatuto -> lectura .)
    WHILE           reduce using rule 86 (estatuto -> lectura .)
    PRINT           reduce using rule 86 (estatuto -> lectura .)
    READ            reduce using rule 86 (estatuto -> lectura .)
    RBRACE          reduce using rule 86 (estatuto -> lectura .)
    RETURN          reduce using rule 86 (estatuto -> lectura .)


state 254

    (71) bloque_loop -> empty .

    RBRACE          reduce using rule 71 (bloque_loop -> empty .)


state 255

    (69) bloque -> LBRACE bloque_loop . RBRACE

    RBRACE          shift and go to state 283


state 256

    (87) estatuto -> accion .

    ID              reduce using rule 87 (estatuto -> accion .)
    IF              reduce using rule 87 (estatuto -> accion .)
    WHILE           reduce using rule 87 (estatuto -> accion .)
    PRINT           reduce using rule 87 (estatuto -> accion .)
    READ            reduce using rule 87 (estatuto -> accion .)
    RBRACE          reduce using rule 87 (estatuto -> accion .)
    RETURN          reduce using rule 87 (estatuto -> accion .)


state 257

    (82) estatuto -> asignacion .

    ID              reduce using rule 82 (estatuto -> asignacion .)
    IF              reduce using rule 82 (estatuto -> asignacion .)
    WHILE           reduce using rule 82 (estatuto -> asignacion .)
    PRINT           reduce using rule 82 (estatuto -> asignacion .)
    READ            reduce using rule 82 (estatuto -> asignacion .)
    RBRACE          reduce using rule 82 (estatuto -> asignacion .)
    RETURN          reduce using rule 82 (estatuto -> asignacion .)


state 258

    (85) estatuto -> impresion .

    ID              reduce using rule 85 (estatuto -> impresion .)
    IF              reduce using rule 85 (estatuto -> impresion .)
    WHILE           reduce using rule 85 (estatuto -> impresion .)
    PRINT           reduce using rule 85 (estatuto -> impresion .)
    READ            reduce using rule 85 (estatuto -> impresion .)
    RBRACE          reduce using rule 85 (estatuto -> impresion .)
    RETURN          reduce using rule 85 (estatuto -> impresion .)


state 259

    (50) fgra_atr -> TRIANG LPARENTHESIS exp COMA . exp COMA exp COMA exp COMA fgra_atr_end
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 284
    factor                         shift and go to state 79
    empty                          shift and go to state 75

state 260

    (51) fgra_atr_end -> exp COMA . exp COMA color RPARENTHESIS
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 285
    factor                         shift and go to state 79
    empty                          shift and go to state 75

state 261

    (48) fgra_atr -> CIRC LPARENTHESIS exp COMA . fgra_atr_end
    (51) fgra_atr_end -> . exp COMA exp COMA color RPARENTHESIS
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 226
    factor                         shift and go to state 79
    fgra_atr_end                   shift and go to state 286
    empty                          shift and go to state 75

state 262

    (49) fgra_atr -> RECT LPARENTHESIS exp COMA . exp COMA fgra_atr_end
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 287
    factor                         shift and go to state 79
    empty                          shift and go to state 75

state 263

    (47) fgra_atr -> CUAD LPARENTHESIS exp COMA . fgra_atr_end
    (51) fgra_atr_end -> . exp COMA exp COMA color RPARENTHESIS
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 226
    factor                         shift and go to state 79
    fgra_atr_end                   shift and go to state 288
    empty                          shift and go to state 75

state 264

    (42) ini_fgras_v_loop -> COMA . logica ini_fgras_v_loop
    (115) logica -> . expresion logica_loop
    (119) expresion -> . exp expresion_opt
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    expresion                      shift and go to state 72
    factor                         shift and go to state 79
    logica                         shift and go to state 289
    empty                          shift and go to state 75
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor_opt                     shift and go to state 81

state 265

    (40) ini_fgra_v -> COMA logica ini_fgras_v_loop .

    SEMICOLON       reduce using rule 40 (ini_fgra_v -> COMA logica ini_fgras_v_loop .)


state 266

    (43) ini_fgras_v_loop -> empty .

    SEMICOLON       reduce using rule 43 (ini_fgras_v_loop -> empty .)


state 267

    (147) idllamada_opt_loop -> COMA . exp idllamada_opt_loop
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 290
    factor                         shift and go to state 79
    empty                          shift and go to state 75

state 268

    (144) idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop . RPARENTHESIS

    RPARENTHESIS    shift and go to state 291


state 269

    (148) idllamada_opt_loop -> empty .

    RPARENTHESIS    reduce using rule 148 (idllamada_opt_loop -> empty .)


state 270

    (145) idllamada_opt -> LBRACKET expresion RBRACKET .

    TIMES           reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    DIVIDE          reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    PLUS            reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    MINUS           reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    GTHAN           reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    GETHAN          reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    ASIGN           reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    NOTEQUAL        reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    LTHAN           reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    LETHAN          reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    AND             reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    OR              reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    RBRACKET        reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    COMA            reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    SEMICOLON       reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    RPARENTHESIS    reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    VAR             reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    ID              reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    IF              reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    WHILE           reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    PRINT           reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    READ            reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    RBRACE          reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    RETURN          reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)
    LPARENTHESIS    reduce using rule 145 (idllamada_opt -> LBRACKET expresion RBRACKET .)


state 271

    (36) ini_prim_v -> ASIGN LBRACE logica . ini_prim_v_loop RBRACE
    (37) ini_prim_v_loop -> . COMA logica ini_prim_v_loop
    (38) ini_prim_v_loop -> . empty
    (6) empty -> .

    COMA            shift and go to state 293
    RBRACE          reduce using rule 6 (empty -> .)

    ini_prim_v_loop                shift and go to state 292
    empty                          shift and go to state 294

state 272

    (65) parametros -> tipo COLON ID . parametros_loop
    (66) parametros_loop -> . COMA parametros
    (67) parametros_loop -> . empty
    (6) empty -> .

    COMA            shift and go to state 296
    RPARENTHESIS    reduce using rule 6 (empty -> .)

    empty                          shift and go to state 295
    parametros_loop                shift and go to state 297

state 273

    (10) rutinas -> RUTINA rutina_opt COLON ID LPARENTHESIS parametros RPARENTHESIS bloque_rutina . rutinas_loop_2
    (14) rutinas_loop_2 -> . rutinas
    (15) rutinas_loop_2 -> . empty
    (10) rutinas -> . RUTINA rutina_opt COLON ID LPARENTHESIS parametros RPARENTHESIS bloque_rutina rutinas_loop_2
    (6) empty -> .

  ! shift/reduce conflict for RUTINA resolved as shift
    RUTINA          shift and go to state 27
    MAIN            reduce using rule 6 (empty -> .)

  ! RUTINA          [ reduce using rule 6 (empty -> .) ]

    rutinas                        shift and go to state 298
    rutinas_loop_2                 shift and go to state 299
    empty                          shift and go to state 300

state 274

    (72) bloque_rutina -> LBRACE . bloque_rutina_opt bloque_rutina_loop bloque_rutina_opt_2 RBRACE
    (73) bloque_rutina_opt -> . vars
    (74) bloque_rutina_opt -> . empty
    (7) vars -> . VAR tipo COLON vars_loop
    (6) empty -> .

    VAR             shift and go to state 6
    ID              reduce using rule 6 (empty -> .)
    IF              reduce using rule 6 (empty -> .)
    WHILE           reduce using rule 6 (empty -> .)
    PRINT           reduce using rule 6 (empty -> .)
    READ            reduce using rule 6 (empty -> .)
    RETURN          reduce using rule 6 (empty -> .)
    RBRACE          reduce using rule 6 (empty -> .)

    bloque_rutina_opt              shift and go to state 301
    vars                           shift and go to state 302
    empty                          shift and go to state 303

state 275

    (166) accion_pincel_opt -> GRAPH LPARENTHESIS CTEFUNCION COMA . exp
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 304
    factor                         shift and go to state 79
    empty                          shift and go to state 75

state 276

    (167) accion_pincel_opt_end -> LPARENTHESIS expresion COMA . expresion
    (119) expresion -> . exp expresion_opt
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    expresion                      shift and go to state 305
    empty                          shift and go to state 75
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor                         shift and go to state 79
    factor_opt                     shift and go to state 81

state 277

    (112) llamada -> ID LPARENTHESIS exp llamada_loop RPARENTHESIS COLON .

    VAR             reduce using rule 112 (llamada -> ID LPARENTHESIS exp llamada_loop RPARENTHESIS COLON .)
    ID              reduce using rule 112 (llamada -> ID LPARENTHESIS exp llamada_loop RPARENTHESIS COLON .)
    IF              reduce using rule 112 (llamada -> ID LPARENTHESIS exp llamada_loop RPARENTHESIS COLON .)
    WHILE           reduce using rule 112 (llamada -> ID LPARENTHESIS exp llamada_loop RPARENTHESIS COLON .)
    PRINT           reduce using rule 112 (llamada -> ID LPARENTHESIS exp llamada_loop RPARENTHESIS COLON .)
    READ            reduce using rule 112 (llamada -> ID LPARENTHESIS exp llamada_loop RPARENTHESIS COLON .)
    RBRACE          reduce using rule 112 (llamada -> ID LPARENTHESIS exp llamada_loop RPARENTHESIS COLON .)
    RETURN          reduce using rule 112 (llamada -> ID LPARENTHESIS exp llamada_loop RPARENTHESIS COLON .)


state 278

    (113) llamada_loop -> COMA exp llamada_loop .

    RPARENTHESIS    reduce using rule 113 (llamada_loop -> COMA exp llamada_loop .)


state 279

    (105) condicion_loop_opt -> ELIF . condicion_loop
    (104) condicion_loop -> . LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt

    LPARENTHESIS    shift and go to state 97

    condicion_loop                 shift and go to state 306

state 280

    (104) condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .

    ELSE            reduce using rule 104 (condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .)
    VAR             reduce using rule 104 (condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .)
    ID              reduce using rule 104 (condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .)
    IF              reduce using rule 104 (condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .)
    WHILE           reduce using rule 104 (condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .)
    PRINT           reduce using rule 104 (condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .)
    READ            reduce using rule 104 (condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .)
    RBRACE          reduce using rule 104 (condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .)
    RETURN          reduce using rule 104 (condicion_loop -> LPARENTHESIS logica RPARENTHESIS bloque condicion_loop_opt .)


state 281

    (106) condicion_loop_opt -> empty .

    ELSE            reduce using rule 106 (condicion_loop_opt -> empty .)
    VAR             reduce using rule 106 (condicion_loop_opt -> empty .)
    ID              reduce using rule 106 (condicion_loop_opt -> empty .)
    IF              reduce using rule 106 (condicion_loop_opt -> empty .)
    WHILE           reduce using rule 106 (condicion_loop_opt -> empty .)
    PRINT           reduce using rule 106 (condicion_loop_opt -> empty .)
    READ            reduce using rule 106 (condicion_loop_opt -> empty .)
    RBRACE          reduce using rule 106 (condicion_loop_opt -> empty .)
    RETURN          reduce using rule 106 (condicion_loop_opt -> empty .)


state 282

    (70) bloque_loop -> estatuto bloque_loop .

    RBRACE          reduce using rule 70 (bloque_loop -> estatuto bloque_loop .)


state 283

    (69) bloque -> LBRACE bloque_loop RBRACE .

    VAR             reduce using rule 69 (bloque -> LBRACE bloque_loop RBRACE .)
    ID              reduce using rule 69 (bloque -> LBRACE bloque_loop RBRACE .)
    IF              reduce using rule 69 (bloque -> LBRACE bloque_loop RBRACE .)
    WHILE           reduce using rule 69 (bloque -> LBRACE bloque_loop RBRACE .)
    PRINT           reduce using rule 69 (bloque -> LBRACE bloque_loop RBRACE .)
    READ            reduce using rule 69 (bloque -> LBRACE bloque_loop RBRACE .)
    RBRACE          reduce using rule 69 (bloque -> LBRACE bloque_loop RBRACE .)
    RETURN          reduce using rule 69 (bloque -> LBRACE bloque_loop RBRACE .)
    ELIF            reduce using rule 69 (bloque -> LBRACE bloque_loop RBRACE .)
    ELSE            reduce using rule 69 (bloque -> LBRACE bloque_loop RBRACE .)


state 284

    (50) fgra_atr -> TRIANG LPARENTHESIS exp COMA exp . COMA exp COMA exp COMA fgra_atr_end

    COMA            shift and go to state 307


state 285

    (51) fgra_atr_end -> exp COMA exp . COMA color RPARENTHESIS

    COMA            shift and go to state 308


state 286

    (48) fgra_atr -> CIRC LPARENTHESIS exp COMA fgra_atr_end .

    SEMICOLON       reduce using rule 48 (fgra_atr -> CIRC LPARENTHESIS exp COMA fgra_atr_end .)
    VAR             reduce using rule 48 (fgra_atr -> CIRC LPARENTHESIS exp COMA fgra_atr_end .)
    ID              reduce using rule 48 (fgra_atr -> CIRC LPARENTHESIS exp COMA fgra_atr_end .)
    IF              reduce using rule 48 (fgra_atr -> CIRC LPARENTHESIS exp COMA fgra_atr_end .)
    WHILE           reduce using rule 48 (fgra_atr -> CIRC LPARENTHESIS exp COMA fgra_atr_end .)
    PRINT           reduce using rule 48 (fgra_atr -> CIRC LPARENTHESIS exp COMA fgra_atr_end .)
    READ            reduce using rule 48 (fgra_atr -> CIRC LPARENTHESIS exp COMA fgra_atr_end .)
    RBRACE          reduce using rule 48 (fgra_atr -> CIRC LPARENTHESIS exp COMA fgra_atr_end .)
    RETURN          reduce using rule 48 (fgra_atr -> CIRC LPARENTHESIS exp COMA fgra_atr_end .)


state 287

    (49) fgra_atr -> RECT LPARENTHESIS exp COMA exp . COMA fgra_atr_end

    COMA            shift and go to state 309


state 288

    (47) fgra_atr -> CUAD LPARENTHESIS exp COMA fgra_atr_end .

    SEMICOLON       reduce using rule 47 (fgra_atr -> CUAD LPARENTHESIS exp COMA fgra_atr_end .)
    VAR             reduce using rule 47 (fgra_atr -> CUAD LPARENTHESIS exp COMA fgra_atr_end .)
    ID              reduce using rule 47 (fgra_atr -> CUAD LPARENTHESIS exp COMA fgra_atr_end .)
    IF              reduce using rule 47 (fgra_atr -> CUAD LPARENTHESIS exp COMA fgra_atr_end .)
    WHILE           reduce using rule 47 (fgra_atr -> CUAD LPARENTHESIS exp COMA fgra_atr_end .)
    PRINT           reduce using rule 47 (fgra_atr -> CUAD LPARENTHESIS exp COMA fgra_atr_end .)
    READ            reduce using rule 47 (fgra_atr -> CUAD LPARENTHESIS exp COMA fgra_atr_end .)
    RBRACE          reduce using rule 47 (fgra_atr -> CUAD LPARENTHESIS exp COMA fgra_atr_end .)
    RETURN          reduce using rule 47 (fgra_atr -> CUAD LPARENTHESIS exp COMA fgra_atr_end .)


state 289

    (42) ini_fgras_v_loop -> COMA logica . ini_fgras_v_loop
    (42) ini_fgras_v_loop -> . COMA logica ini_fgras_v_loop
    (43) ini_fgras_v_loop -> . empty
    (6) empty -> .

    COMA            shift and go to state 264
    SEMICOLON       reduce using rule 6 (empty -> .)

    ini_fgras_v_loop               shift and go to state 310
    empty                          shift and go to state 266

state 290

    (147) idllamada_opt_loop -> COMA exp . idllamada_opt_loop
    (147) idllamada_opt_loop -> . COMA exp idllamada_opt_loop
    (148) idllamada_opt_loop -> . empty
    (6) empty -> .

    COMA            shift and go to state 267
    RPARENTHESIS    reduce using rule 6 (empty -> .)

    idllamada_opt_loop             shift and go to state 311
    empty                          shift and go to state 269

state 291

    (144) idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .

    TIMES           reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    DIVIDE          reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    PLUS            reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    MINUS           reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    GTHAN           reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    GETHAN          reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    ASIGN           reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    NOTEQUAL        reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    LTHAN           reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    LETHAN          reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    AND             reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    OR              reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    RBRACKET        reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    COMA            reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    SEMICOLON       reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    VAR             reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    ID              reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    IF              reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    WHILE           reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    PRINT           reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    READ            reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    RBRACE          reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    RETURN          reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)
    LPARENTHESIS    reduce using rule 144 (idllamada_opt -> LPARENTHESIS exp idllamada_opt_loop RPARENTHESIS .)


state 292

    (36) ini_prim_v -> ASIGN LBRACE logica ini_prim_v_loop . RBRACE

    RBRACE          shift and go to state 312


state 293

    (37) ini_prim_v_loop -> COMA . logica ini_prim_v_loop
    (115) logica -> . expresion logica_loop
    (119) expresion -> . exp expresion_opt
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    expresion                      shift and go to state 72
    logica                         shift and go to state 313
    empty                          shift and go to state 75
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor                         shift and go to state 79
    factor_opt                     shift and go to state 81

state 294

    (38) ini_prim_v_loop -> empty .

    RBRACE          reduce using rule 38 (ini_prim_v_loop -> empty .)


state 295

    (67) parametros_loop -> empty .

    RPARENTHESIS    reduce using rule 67 (parametros_loop -> empty .)


state 296

    (66) parametros_loop -> COMA . parametros
    (65) parametros -> . tipo COLON ID parametros_loop
    (16) tipo -> . tipo_opt SEMICOLON
    (17) tipo_opt -> . tipo_opt_prim
    (18) tipo_opt -> . tipo_opt_fig
    (19) tipo_opt_prim -> . primitivo ID tipo_opt_prim_2 tipo_opt_prim_loop
    (27) tipo_opt_fig -> . figura ID tipo_opt_fig_2
    (52) primitivo -> . TYPEINT
    (53) primitivo -> . TYPEDOUBLE
    (54) primitivo -> . TYPEBOOL
    (55) primitivo -> . TYPESTRING
    (56) figura -> . PINCEL
    (57) figura -> . CUAD
    (58) figura -> . RECT
    (59) figura -> . CIRC
    (60) figura -> . TRIANG

    TYPEINT         shift and go to state 22
    TYPEDOUBLE      shift and go to state 14
    TYPEBOOL        shift and go to state 15
    TYPESTRING      shift and go to state 21
    PINCEL          shift and go to state 13
    CUAD            shift and go to state 24
    RECT            shift and go to state 16
    CIRC            shift and go to state 23
    TRIANG          shift and go to state 11

    tipo_opt_prim                  shift and go to state 20
    tipo_opt_fig                   shift and go to state 17
    tipo                           shift and go to state 193
    tipo_opt                       shift and go to state 12
    figura                         shift and go to state 10
    primitivo                      shift and go to state 19
    parametros                     shift and go to state 314

state 297

    (65) parametros -> tipo COLON ID parametros_loop .

    RPARENTHESIS    reduce using rule 65 (parametros -> tipo COLON ID parametros_loop .)


state 298

    (14) rutinas_loop_2 -> rutinas .

    MAIN            reduce using rule 14 (rutinas_loop_2 -> rutinas .)
    RUTINA          reduce using rule 14 (rutinas_loop_2 -> rutinas .)


state 299

    (10) rutinas -> RUTINA rutina_opt COLON ID LPARENTHESIS parametros RPARENTHESIS bloque_rutina rutinas_loop_2 .

    MAIN            reduce using rule 10 (rutinas -> RUTINA rutina_opt COLON ID LPARENTHESIS parametros RPARENTHESIS bloque_rutina rutinas_loop_2 .)
    RUTINA          reduce using rule 10 (rutinas -> RUTINA rutina_opt COLON ID LPARENTHESIS parametros RPARENTHESIS bloque_rutina rutinas_loop_2 .)


state 300

    (15) rutinas_loop_2 -> empty .

    MAIN            reduce using rule 15 (rutinas_loop_2 -> empty .)
    RUTINA          reduce using rule 15 (rutinas_loop_2 -> empty .)


state 301

    (72) bloque_rutina -> LBRACE bloque_rutina_opt . bloque_rutina_loop bloque_rutina_opt_2 RBRACE
    (75) bloque_rutina_loop -> . estatuto bloque_rutina_loop
    (76) bloque_rutina_loop -> . empty
    (82) estatuto -> . asignacion
    (83) estatuto -> . condicion
    (84) estatuto -> . ciclo
    (85) estatuto -> . impresion
    (86) estatuto -> . lectura
    (87) estatuto -> . accion
    (88) estatuto -> . llamada
    (6) empty -> .
    (97) asignacion -> . ID asignacion_opt ASIGN asignacion_opt_2
    (103) condicion -> . IF condicion_loop condicion_opt
    (109) ciclo -> . WHILE LPARENTHESIS logica RPARENTHESIS bloque
    (110) impresion -> . PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON
    (111) lectura -> . READ LPARENTHESIS RPARENTHESIS SEMICOLON
    (149) accion -> . ID POINT accion_opt COLON
    (112) llamada -> . ID LPARENTHESIS exp llamada_loop RPARENTHESIS COLON

    RETURN          reduce using rule 6 (empty -> .)
    RBRACE          reduce using rule 6 (empty -> .)
    ID              shift and go to state 63
    IF              shift and go to state 64
    WHILE           shift and go to state 55
    PRINT           shift and go to state 56
    READ            shift and go to state 54

    ciclo                          shift and go to state 249
    asignacion                     shift and go to state 257
    estatuto                       shift and go to state 316
    impresion                      shift and go to state 258
    accion                         shift and go to state 256
    llamada                        shift and go to state 250
    condicion                      shift and go to state 252
    lectura                        shift and go to state 253
    empty                          shift and go to state 317
    bloque_rutina_loop             shift and go to state 315

state 302

    (73) bloque_rutina_opt -> vars .

    ID              reduce using rule 73 (bloque_rutina_opt -> vars .)
    IF              reduce using rule 73 (bloque_rutina_opt -> vars .)
    WHILE           reduce using rule 73 (bloque_rutina_opt -> vars .)
    PRINT           reduce using rule 73 (bloque_rutina_opt -> vars .)
    READ            reduce using rule 73 (bloque_rutina_opt -> vars .)
    RETURN          reduce using rule 73 (bloque_rutina_opt -> vars .)
    RBRACE          reduce using rule 73 (bloque_rutina_opt -> vars .)


state 303

    (74) bloque_rutina_opt -> empty .

    ID              reduce using rule 74 (bloque_rutina_opt -> empty .)
    IF              reduce using rule 74 (bloque_rutina_opt -> empty .)
    WHILE           reduce using rule 74 (bloque_rutina_opt -> empty .)
    PRINT           reduce using rule 74 (bloque_rutina_opt -> empty .)
    READ            reduce using rule 74 (bloque_rutina_opt -> empty .)
    RETURN          reduce using rule 74 (bloque_rutina_opt -> empty .)
    RBRACE          reduce using rule 74 (bloque_rutina_opt -> empty .)


state 304

    (166) accion_pincel_opt -> GRAPH LPARENTHESIS CTEFUNCION COMA exp .

    RPARENTHESIS    reduce using rule 166 (accion_pincel_opt -> GRAPH LPARENTHESIS CTEFUNCION COMA exp .)


state 305

    (167) accion_pincel_opt_end -> LPARENTHESIS expresion COMA expresion .

    RPARENTHESIS    reduce using rule 167 (accion_pincel_opt_end -> LPARENTHESIS expresion COMA expresion .)


state 306

    (105) condicion_loop_opt -> ELIF condicion_loop .

    ELSE            reduce using rule 105 (condicion_loop_opt -> ELIF condicion_loop .)
    VAR             reduce using rule 105 (condicion_loop_opt -> ELIF condicion_loop .)
    ID              reduce using rule 105 (condicion_loop_opt -> ELIF condicion_loop .)
    IF              reduce using rule 105 (condicion_loop_opt -> ELIF condicion_loop .)
    WHILE           reduce using rule 105 (condicion_loop_opt -> ELIF condicion_loop .)
    PRINT           reduce using rule 105 (condicion_loop_opt -> ELIF condicion_loop .)
    READ            reduce using rule 105 (condicion_loop_opt -> ELIF condicion_loop .)
    RBRACE          reduce using rule 105 (condicion_loop_opt -> ELIF condicion_loop .)
    RETURN          reduce using rule 105 (condicion_loop_opt -> ELIF condicion_loop .)


state 307

    (50) fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA . exp COMA exp COMA fgra_atr_end
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 318
    factor                         shift and go to state 79
    empty                          shift and go to state 75

state 308

    (51) fgra_atr_end -> exp COMA exp COMA . color RPARENTHESIS
    (168) color -> . CTECOLOR
    (169) color -> . CTEHEXCOLOR

    CTECOLOR        shift and go to state 241
    CTEHEXCOLOR     shift and go to state 240

    color                          shift and go to state 319

state 309

    (49) fgra_atr -> RECT LPARENTHESIS exp COMA exp COMA . fgra_atr_end
    (51) fgra_atr_end -> . exp COMA exp COMA color RPARENTHESIS
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 226
    factor                         shift and go to state 79
    fgra_atr_end                   shift and go to state 320
    empty                          shift and go to state 75

state 310

    (42) ini_fgras_v_loop -> COMA logica ini_fgras_v_loop .

    SEMICOLON       reduce using rule 42 (ini_fgras_v_loop -> COMA logica ini_fgras_v_loop .)


state 311

    (147) idllamada_opt_loop -> COMA exp idllamada_opt_loop .

    RPARENTHESIS    reduce using rule 147 (idllamada_opt_loop -> COMA exp idllamada_opt_loop .)


state 312

    (36) ini_prim_v -> ASIGN LBRACE logica ini_prim_v_loop RBRACE .

    COMA            reduce using rule 36 (ini_prim_v -> ASIGN LBRACE logica ini_prim_v_loop RBRACE .)
    SEMICOLON       reduce using rule 36 (ini_prim_v -> ASIGN LBRACE logica ini_prim_v_loop RBRACE .)


state 313

    (37) ini_prim_v_loop -> COMA logica . ini_prim_v_loop
    (37) ini_prim_v_loop -> . COMA logica ini_prim_v_loop
    (38) ini_prim_v_loop -> . empty
    (6) empty -> .

    COMA            shift and go to state 293
    RBRACE          reduce using rule 6 (empty -> .)

    ini_prim_v_loop                shift and go to state 321
    empty                          shift and go to state 294

state 314

    (66) parametros_loop -> COMA parametros .

    RPARENTHESIS    reduce using rule 66 (parametros_loop -> COMA parametros .)


state 315

    (72) bloque_rutina -> LBRACE bloque_rutina_opt bloque_rutina_loop . bloque_rutina_opt_2 RBRACE
    (77) bloque_rutina_opt_2 -> . RETURN logica
    (78) bloque_rutina_opt_2 -> . empty
    (6) empty -> .

    RETURN          shift and go to state 322
    RBRACE          reduce using rule 6 (empty -> .)

    bloque_rutina_opt_2            shift and go to state 323
    empty                          shift and go to state 324

state 316

    (75) bloque_rutina_loop -> estatuto . bloque_rutina_loop
    (75) bloque_rutina_loop -> . estatuto bloque_rutina_loop
    (76) bloque_rutina_loop -> . empty
    (82) estatuto -> . asignacion
    (83) estatuto -> . condicion
    (84) estatuto -> . ciclo
    (85) estatuto -> . impresion
    (86) estatuto -> . lectura
    (87) estatuto -> . accion
    (88) estatuto -> . llamada
    (6) empty -> .
    (97) asignacion -> . ID asignacion_opt ASIGN asignacion_opt_2
    (103) condicion -> . IF condicion_loop condicion_opt
    (109) ciclo -> . WHILE LPARENTHESIS logica RPARENTHESIS bloque
    (110) impresion -> . PRINT LPARENTHESIS logica RPARENTHESIS SEMICOLON
    (111) lectura -> . READ LPARENTHESIS RPARENTHESIS SEMICOLON
    (149) accion -> . ID POINT accion_opt COLON
    (112) llamada -> . ID LPARENTHESIS exp llamada_loop RPARENTHESIS COLON

    RETURN          reduce using rule 6 (empty -> .)
    RBRACE          reduce using rule 6 (empty -> .)
    ID              shift and go to state 63
    IF              shift and go to state 64
    WHILE           shift and go to state 55
    PRINT           shift and go to state 56
    READ            shift and go to state 54

    bloque_rutina_loop             shift and go to state 325
    asignacion                     shift and go to state 257
    estatuto                       shift and go to state 316
    impresion                      shift and go to state 258
    accion                         shift and go to state 256
    llamada                        shift and go to state 250
    condicion                      shift and go to state 252
    lectura                        shift and go to state 253
    empty                          shift and go to state 317
    ciclo                          shift and go to state 249

state 317

    (76) bloque_rutina_loop -> empty .

    RETURN          reduce using rule 76 (bloque_rutina_loop -> empty .)
    RBRACE          reduce using rule 76 (bloque_rutina_loop -> empty .)


state 318

    (50) fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp . COMA exp COMA fgra_atr_end

    COMA            shift and go to state 326


state 319

    (51) fgra_atr_end -> exp COMA exp COMA color . RPARENTHESIS

    RPARENTHESIS    shift and go to state 327


state 320

    (49) fgra_atr -> RECT LPARENTHESIS exp COMA exp COMA fgra_atr_end .

    SEMICOLON       reduce using rule 49 (fgra_atr -> RECT LPARENTHESIS exp COMA exp COMA fgra_atr_end .)
    VAR             reduce using rule 49 (fgra_atr -> RECT LPARENTHESIS exp COMA exp COMA fgra_atr_end .)
    ID              reduce using rule 49 (fgra_atr -> RECT LPARENTHESIS exp COMA exp COMA fgra_atr_end .)
    IF              reduce using rule 49 (fgra_atr -> RECT LPARENTHESIS exp COMA exp COMA fgra_atr_end .)
    WHILE           reduce using rule 49 (fgra_atr -> RECT LPARENTHESIS exp COMA exp COMA fgra_atr_end .)
    PRINT           reduce using rule 49 (fgra_atr -> RECT LPARENTHESIS exp COMA exp COMA fgra_atr_end .)
    READ            reduce using rule 49 (fgra_atr -> RECT LPARENTHESIS exp COMA exp COMA fgra_atr_end .)
    RBRACE          reduce using rule 49 (fgra_atr -> RECT LPARENTHESIS exp COMA exp COMA fgra_atr_end .)
    RETURN          reduce using rule 49 (fgra_atr -> RECT LPARENTHESIS exp COMA exp COMA fgra_atr_end .)


state 321

    (37) ini_prim_v_loop -> COMA logica ini_prim_v_loop .

    RBRACE          reduce using rule 37 (ini_prim_v_loop -> COMA logica ini_prim_v_loop .)


state 322

    (77) bloque_rutina_opt_2 -> RETURN . logica
    (115) logica -> . expresion logica_loop
    (119) expresion -> . exp expresion_opt
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    expresion                      shift and go to state 72
    logica                         shift and go to state 328
    empty                          shift and go to state 75
    termino                        shift and go to state 77
    exp                            shift and go to state 78
    factor                         shift and go to state 79
    factor_opt                     shift and go to state 81

state 323

    (72) bloque_rutina -> LBRACE bloque_rutina_opt bloque_rutina_loop bloque_rutina_opt_2 . RBRACE

    RBRACE          shift and go to state 329


state 324

    (78) bloque_rutina_opt_2 -> empty .

    RBRACE          reduce using rule 78 (bloque_rutina_opt_2 -> empty .)


state 325

    (75) bloque_rutina_loop -> estatuto bloque_rutina_loop .

    RETURN          reduce using rule 75 (bloque_rutina_loop -> estatuto bloque_rutina_loop .)
    RBRACE          reduce using rule 75 (bloque_rutina_loop -> estatuto bloque_rutina_loop .)


state 326

    (50) fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA . exp COMA fgra_atr_end
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 330
    factor                         shift and go to state 79
    empty                          shift and go to state 75

state 327

    (51) fgra_atr_end -> exp COMA exp COMA color RPARENTHESIS .

    SEMICOLON       reduce using rule 51 (fgra_atr_end -> exp COMA exp COMA color RPARENTHESIS .)
    VAR             reduce using rule 51 (fgra_atr_end -> exp COMA exp COMA color RPARENTHESIS .)
    ID              reduce using rule 51 (fgra_atr_end -> exp COMA exp COMA color RPARENTHESIS .)
    IF              reduce using rule 51 (fgra_atr_end -> exp COMA exp COMA color RPARENTHESIS .)
    WHILE           reduce using rule 51 (fgra_atr_end -> exp COMA exp COMA color RPARENTHESIS .)
    PRINT           reduce using rule 51 (fgra_atr_end -> exp COMA exp COMA color RPARENTHESIS .)
    READ            reduce using rule 51 (fgra_atr_end -> exp COMA exp COMA color RPARENTHESIS .)
    RBRACE          reduce using rule 51 (fgra_atr_end -> exp COMA exp COMA color RPARENTHESIS .)
    RETURN          reduce using rule 51 (fgra_atr_end -> exp COMA exp COMA color RPARENTHESIS .)


state 328

    (77) bloque_rutina_opt_2 -> RETURN logica .

    RBRACE          reduce using rule 77 (bloque_rutina_opt_2 -> RETURN logica .)


state 329

    (72) bloque_rutina -> LBRACE bloque_rutina_opt bloque_rutina_loop bloque_rutina_opt_2 RBRACE .

    RUTINA          reduce using rule 72 (bloque_rutina -> LBRACE bloque_rutina_opt bloque_rutina_loop bloque_rutina_opt_2 RBRACE .)
    MAIN            reduce using rule 72 (bloque_rutina -> LBRACE bloque_rutina_opt bloque_rutina_loop bloque_rutina_opt_2 RBRACE .)


state 330

    (50) fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp . COMA fgra_atr_end

    COMA            shift and go to state 331


state 331

    (50) fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA . fgra_atr_end
    (51) fgra_atr_end -> . exp COMA exp COMA color RPARENTHESIS
    (128) exp -> . termino exp_loop
    (132) termino -> . factor termino_loop
    (136) factor -> . LPARENTHESIS expresion RPARENTHESIS
    (137) factor -> . factor_opt factor_opt_2
    (138) factor_opt -> . PLUS
    (139) factor_opt -> . MINUS
    (140) factor_opt -> . empty
    (6) empty -> .

    LPARENTHESIS    shift and go to state 73
    PLUS            shift and go to state 76
    MINUS           shift and go to state 80
    STRING          reduce using rule 6 (empty -> .)
    INT             reduce using rule 6 (empty -> .)
    DOUBLE          reduce using rule 6 (empty -> .)
    BOOL            reduce using rule 6 (empty -> .)
    ID              reduce using rule 6 (empty -> .)

    factor_opt                     shift and go to state 81
    termino                        shift and go to state 77
    exp                            shift and go to state 226
    factor                         shift and go to state 79
    fgra_atr_end                   shift and go to state 332
    empty                          shift and go to state 75

state 332

    (50) fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end .

    SEMICOLON       reduce using rule 50 (fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end .)
    VAR             reduce using rule 50 (fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end .)
    ID              reduce using rule 50 (fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end .)
    IF              reduce using rule 50 (fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end .)
    WHILE           reduce using rule 50 (fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end .)
    PRINT           reduce using rule 50 (fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end .)
    READ            reduce using rule 50 (fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end .)
    RBRACE          reduce using rule 50 (fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end .)
    RETURN          reduce using rule 50 (fgra_atr -> TRIANG LPARENTHESIS exp COMA exp COMA exp COMA exp COMA fgra_atr_end .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 31 resolved as shift
WARNING: shift/reduce conflict for LPARENTHESIS in state 136 resolved as shift
WARNING: shift/reduce conflict for READ in state 143 resolved as shift
WARNING: shift/reduce conflict for RUTINA in state 273 resolved as shift
WARNING: reduce/reduce conflict in state 178 resolved using rule (tipo_opt_fig_3 -> empty)
WARNING: rejected rule (ini_fgra_v -> empty) in state 178
WARNING: reduce/reduce conflict in state 201 resolved using rule (fgra_nva -> empty)
WARNING: rejected rule (factor_opt -> empty) in state 201
WARNING: Rule (ini_fgra_v -> empty) is never reduced
